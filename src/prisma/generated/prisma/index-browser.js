
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Access_secretScalarFieldEnum = {
  Id: 'Id',
  value: 'value'
};

exports.Prisma.Live_stream_favouritesScalarFieldEnum = {
  Id: 'Id',
  emp_Id: 'emp_Id',
  park_camera_Id: 'park_camera_Id',
  office_camera_Id: 'office_camera_Id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Office_streamsScalarFieldEnum = {
  Id: 'Id',
  office_Id: 'office_Id',
  stream_url: 'stream_url',
  stream_api_key: 'stream_api_key',
  stream_path: 'stream_path',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OfficesScalarFieldEnum = {
  Id: 'Id',
  office_Id: 'office_Id',
  office_english_name: 'office_english_name',
  office_arabic_name: 'office_arabic_name',
  image: 'image',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Offices_attendanceScalarFieldEnum = {
  Id: 'Id',
  office_Id: 'office_Id',
  person_Id: 'person_Id',
  entry_time: 'entry_time',
  exit_time: 'exit_time',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Offices_camerasScalarFieldEnum = {
  Id: 'Id',
  office_Id: 'office_Id',
  camera_Id: 'camera_Id',
  camera_english_name: 'camera_english_name',
  camera_arabic_name: 'camera_arabic_name',
  latitude: 'latitude',
  longitude: 'longitude',
  ip_address: 'ip_address',
  last_active_date: 'last_active_date',
  last_active_time: 'last_active_time',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Offices_sentiment_analysisScalarFieldEnum = {
  Id: 'Id',
  office_Id: 'office_Id',
  person_Id: 'person_Id',
  detection_Id: 'detection_Id',
  person_name: 'person_name',
  person_image: 'person_image',
  gender: 'gender',
  check_in_image: 'check_in_image',
  sentiment_of: 'sentiment_of',
  check_in_date: 'check_in_date',
  check_in_time: 'check_in_time',
  check_in_sentiment: 'check_in_sentiment',
  entry_camera_Id: 'entry_camera_Id',
  check_out_date: 'check_out_date',
  check_out_time: 'check_out_time',
  check_out_capture: 'check_out_capture',
  check_out_sentiment: 'check_out_sentiment',
  exit_camera_Id: 'exit_camera_Id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Park_camerasScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  camera_Id: 'camera_Id',
  camera_english_name: 'camera_english_name',
  camera_arabic_name: 'camera_arabic_name',
  latitude: 'latitude',
  longitude: 'longitude',
  ip_address: 'ip_address',
  last_active_date: 'last_active_date',
  last_active_time: 'last_active_time',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Park_streamsScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  stream_url: 'stream_url',
  stream_api_key: 'stream_api_key',
  stream_path: 'stream_path',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Park_zonesScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  zone_Id: 'zone_Id',
  zone_english_name: 'zone_english_name',
  zone_arabic_name: 'zone_arabic_name',
  latitude: 'latitude',
  longitude: 'longitude',
  device_ip: 'device_ip',
  web_api: 'web_api',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ParksScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  park_english_name: 'park_english_name',
  park_arabic_name: 'park_arabic_name',
  image: 'image',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_attendanceScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  person_Id: 'person_Id',
  entry_time: 'entry_time',
  exit_time: 'exit_time',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_behaviour_alertsScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  person_Id: 'person_Id',
  camera_Id: 'camera_Id',
  detection_Id: 'detection_Id',
  detection_code: 'detection_code',
  detection_date: 'detection_date',
  detection_time: 'detection_time',
  description: 'description',
  detected_behaviour: 'detected_behaviour',
  is_employee: 'is_employee',
  snap_shot: 'snap_shot',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_intrusion_detectionScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  location: 'location',
  camera_Id: 'camera_Id',
  occurrence_date: 'occurrence_date',
  occurrence_time: 'occurrence_time',
  snap_shot: 'snap_shot',
  posted_to_intranet_date: 'posted_to_intranet_date',
  posted_to_intranet_time: 'posted_to_intranet_time',
  detection_Id: 'detection_Id',
  detection_date: 'detection_date',
  detection_time: 'detection_time',
  description: 'description',
  is_employee: 'is_employee',
  current_status: 'current_status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_irrigation_job_historyScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  zone_Id: 'zone_Id',
  job_Id: 'job_Id',
  job_started_at: 'job_started_at',
  job_completed_at: 'job_completed_at',
  job_status: 'job_status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_landscapingScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  case_Id: 'case_Id',
  location: 'location',
  snap_shot: 'snap_shot',
  type: 'type',
  status: 'status',
  detection_Id: 'detection_Id',
  detection_date: 'detection_date',
  detection_time: 'detection_time',
  description: 'description',
  current_status: 'current_status',
  camera_Id: 'camera_Id',
  after_image: 'after_image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_litter_detectionScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  case_Id: 'case_Id',
  location: 'location',
  occurrence_date: 'occurrence_date',
  occurrence_time: 'occurrence_time',
  snap_shot: 'snap_shot',
  status: 'status',
  detection_Id: 'detection_Id',
  detection_date: 'detection_date',
  detection_time: 'detection_time',
  description: 'description',
  current_status: 'current_status',
  camera_Id: 'camera_Id',
  after_image: 'after_image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Ticket_details_tableScalarFieldEnum = {
  id: 'id',
  status: 'status',
  date: 'date',
  time: 'time',
  comments: 'comments',
  image: 'image',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3',
  abc4: 'abc4',
  litterDetectionId: 'litterDetectionId',
  landscapingId: 'landscapingId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_sentiment_analysisScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  person_Id: 'person_Id',
  detection_Id: 'detection_Id',
  person_name: 'person_name',
  person_image: 'person_image',
  gender: 'gender',
  check_in_image: 'check_in_image',
  sentiment_of: 'sentiment_of',
  check_in_date: 'check_in_date',
  check_in_time: 'check_in_time',
  check_in_sentiment: 'check_in_sentiment',
  entry_camera_Id: 'entry_camera_Id',
  check_out_date: 'check_out_date',
  check_out_time: 'check_out_time',
  check_out_capture: 'check_out_capture',
  check_out_sentiment: 'check_out_sentiment',
  exit_camera_Id: 'exit_camera_Id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_smoking_detectionScalarFieldEnum = {
  Id: 'Id',
  park_Id: 'park_Id',
  location: 'location',
  camera_Id: 'camera_Id',
  occurrence_date: 'occurrence_date',
  occurrence_time: 'occurrence_time',
  snap_shot: 'snap_shot',
  posted_to_intranet_date: 'posted_to_intranet_date',
  posted_to_intranet_time: 'posted_to_intranet_time',
  detection_Id: 'detection_Id',
  detection_date: 'detection_date',
  detection_time: 'detection_time',
  description: 'description',
  is_employee: 'is_employee',
  current_status: 'current_status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Intranet_posting_historyScalarFieldEnum = {
  id: 'id',
  smokingDetectionId: 'smokingDetectionId',
  intrusionDetectionId: 'intrusionDetectionId',
  title: 'title',
  intranet_id: 'intranet_id',
  comments: 'comments',
  date: 'date',
  time: 'time',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3'
};

exports.Prisma.UsersScalarFieldEnum = {
  Id: 'Id',
  emp_Id: 'emp_Id',
  gender: 'gender',
  emp__eng_name: 'emp__eng_name',
  emp__arabic_name: 'emp__arabic_name',
  country_code: 'country_code',
  phone: 'phone',
  email: 'email',
  dep_eng_name: 'dep_eng_name',
  dep_arabic_name: 'dep_arabic_name',
  desig_eng_name: 'desig_eng_name',
  desig_arabic_name: 'desig_arabic_name',
  unit_eng_name: 'unit_eng_name',
  unit_arabic_name: 'unit_arabic_name',
  committe_eng_name: 'committe_eng_name',
  committe_arabic_name: 'committe_arabic_name',
  ai_engine_access: 'ai_engine_access',
  last_login: 'last_login',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role_Id: 'role_Id'
};

exports.Prisma.Users_permissionsScalarFieldEnum = {
  Id: 'Id',
  role_Id: 'role_Id',
  dashboard_view: 'dashboard_view',
  role_permission_view: 'role_permission_view',
  role_permission_add: 'role_permission_add',
  role_permission_update: 'role_permission_update',
  offices_view: 'offices_view',
  offices_add: 'offices_add',
  offices_update: 'offices_update',
  parks_view: 'parks_view',
  parks_add: 'parks_add',
  parks_update: 'parks_update',
  system_report_view: 'system_report_view',
  alerts_view: 'alerts_view',
  office_attendance_view: 'office_attendance_view',
  office_attendance_add: 'office_attendance_add',
  office_attendance_update: 'office_attendance_update',
  office_footfall_view: 'office_footfall_view',
  office_footfall_add: 'office_footfall_add',
  office_footfall_update: 'office_footfall_update',
  office_sentimental_view: 'office_sentimental_view',
  office_sentimental_add: 'office_sentimental_add',
  office_sentimental_update: 'office_sentimental_update',
  park_attendance_view: 'park_attendance_view',
  park_attendance_add: 'park_attendance_add',
  park_attendance_update: 'park_attendance_update',
  park_footfall_view: 'park_footfall_view',
  park_footfall_add: 'park_footfall_add',
  park_footfall_update: 'park_footfall_update',
  park_sentimental_view: 'park_sentimental_view',
  park_sentimental_add: 'park_sentimental_add',
  park_sentimental_update: 'park_sentimental_update',
  park_irrigation_view: 'park_irrigation_view',
  park_irrigation_add: 'park_irrigation_add',
  park_irrigation_update: 'park_irrigation_update',
  park_landscaping_view: 'park_landscaping_view',
  park_landscaping_add: 'park_landscaping_add',
  park_landscaping_update: 'park_landscaping_update',
  park_litter_detection_view: 'park_litter_detection_view',
  park_litter_detection_add: 'park_litter_detection_add',
  park_litter_detection_update: 'park_litter_detection_update',
  park_intrusion_detection_view: 'park_intrusion_detection_view',
  park_intrusion_detection_add: 'park_intrusion_detection_add',
  park_intrusion_detection_update: 'park_intrusion_detection_update',
  park_smoking_detection_view: 'park_smoking_detection_view',
  park_smoking_detection_add: 'park_smoking_detection_add',
  park_smoking_detection_update: 'park_smoking_detection_update',
  my_account_view: 'my_account_view',
  settings_view: 'settings_view',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Users_rolesScalarFieldEnum = {
  Id: 'Id',
  role_name: 'role_name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Parks_footfall_analysisScalarFieldEnum = {
  id: 'id',
  park_Id: 'park_Id',
  detection_Id: 'detection_Id',
  person_Id: 'person_Id',
  gender: 'gender',
  is_child: 'is_child',
  time: 'time',
  detected_camera_Id: 'detected_camera_Id',
  detected_camera_name: 'detected_camera_name',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3'
};

exports.Prisma.Offices_footfall_analysisScalarFieldEnum = {
  id: 'id',
  office_Id: 'office_Id',
  detection_Id: 'detection_Id',
  person_Id: 'person_Id',
  gender: 'gender',
  is_child: 'is_child',
  time: 'time',
  detected_camera_Id: 'detected_camera_Id',
  detected_camera_name: 'detected_camera_name',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.access_secretOrderByRelevanceFieldEnum = {
  value: 'value'
};

exports.Prisma.office_streamsOrderByRelevanceFieldEnum = {
  stream_url: 'stream_url',
  stream_api_key: 'stream_api_key',
  stream_path: 'stream_path',
  password: 'password'
};

exports.Prisma.officesOrderByRelevanceFieldEnum = {
  office_Id: 'office_Id',
  office_english_name: 'office_english_name',
  office_arabic_name: 'office_arabic_name',
  image: 'image'
};

exports.Prisma.offices_camerasOrderByRelevanceFieldEnum = {
  camera_Id: 'camera_Id',
  camera_english_name: 'camera_english_name',
  camera_arabic_name: 'camera_arabic_name',
  ip_address: 'ip_address',
  status: 'status'
};

exports.Prisma.offices_sentiment_analysisOrderByRelevanceFieldEnum = {
  person_Id: 'person_Id',
  detection_Id: 'detection_Id',
  person_name: 'person_name',
  person_image: 'person_image',
  gender: 'gender',
  check_in_image: 'check_in_image',
  check_in_sentiment: 'check_in_sentiment',
  check_out_capture: 'check_out_capture',
  check_out_sentiment: 'check_out_sentiment'
};

exports.Prisma.park_camerasOrderByRelevanceFieldEnum = {
  camera_Id: 'camera_Id',
  camera_english_name: 'camera_english_name',
  camera_arabic_name: 'camera_arabic_name',
  ip_address: 'ip_address',
  status: 'status'
};

exports.Prisma.park_streamsOrderByRelevanceFieldEnum = {
  stream_url: 'stream_url',
  stream_api_key: 'stream_api_key',
  stream_path: 'stream_path',
  password: 'password'
};

exports.Prisma.park_zonesOrderByRelevanceFieldEnum = {
  zone_Id: 'zone_Id',
  zone_english_name: 'zone_english_name',
  zone_arabic_name: 'zone_arabic_name',
  device_ip: 'device_ip',
  web_api: 'web_api',
  status: 'status'
};

exports.Prisma.parksOrderByRelevanceFieldEnum = {
  park_Id: 'park_Id',
  park_english_name: 'park_english_name',
  park_arabic_name: 'park_arabic_name',
  image: 'image'
};

exports.Prisma.parks_behaviour_alertsOrderByRelevanceFieldEnum = {
  person_Id: 'person_Id',
  detection_Id: 'detection_Id',
  detection_code: 'detection_code',
  description: 'description',
  detected_behaviour: 'detected_behaviour',
  snap_shot: 'snap_shot'
};

exports.Prisma.parks_intrusion_detectionOrderByRelevanceFieldEnum = {
  location: 'location',
  snap_shot: 'snap_shot',
  detection_Id: 'detection_Id',
  description: 'description',
  current_status: 'current_status'
};

exports.Prisma.parks_irrigation_job_historyOrderByRelevanceFieldEnum = {
  job_Id: 'job_Id',
  job_status: 'job_status'
};

exports.Prisma.parks_landscapingOrderByRelevanceFieldEnum = {
  case_Id: 'case_Id',
  location: 'location',
  snap_shot: 'snap_shot',
  type: 'type',
  status: 'status',
  detection_Id: 'detection_Id',
  description: 'description',
  current_status: 'current_status',
  after_image: 'after_image'
};

exports.Prisma.parks_litter_detectionOrderByRelevanceFieldEnum = {
  case_Id: 'case_Id',
  location: 'location',
  snap_shot: 'snap_shot',
  status: 'status',
  detection_Id: 'detection_Id',
  description: 'description',
  current_status: 'current_status',
  after_image: 'after_image'
};

exports.Prisma.ticket_details_tableOrderByRelevanceFieldEnum = {
  status: 'status',
  comments: 'comments',
  image: 'image',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3',
  abc4: 'abc4'
};

exports.Prisma.parks_sentiment_analysisOrderByRelevanceFieldEnum = {
  person_Id: 'person_Id',
  detection_Id: 'detection_Id',
  person_name: 'person_name',
  person_image: 'person_image',
  gender: 'gender',
  check_in_image: 'check_in_image',
  check_in_sentiment: 'check_in_sentiment',
  check_out_capture: 'check_out_capture',
  check_out_sentiment: 'check_out_sentiment'
};

exports.Prisma.parks_smoking_detectionOrderByRelevanceFieldEnum = {
  location: 'location',
  snap_shot: 'snap_shot',
  detection_Id: 'detection_Id',
  description: 'description',
  current_status: 'current_status'
};

exports.Prisma.intranet_posting_historyOrderByRelevanceFieldEnum = {
  title: 'title',
  intranet_id: 'intranet_id',
  comments: 'comments',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  emp_Id: 'emp_Id',
  gender: 'gender',
  emp__eng_name: 'emp__eng_name',
  emp__arabic_name: 'emp__arabic_name',
  country_code: 'country_code',
  phone: 'phone',
  email: 'email',
  dep_eng_name: 'dep_eng_name',
  dep_arabic_name: 'dep_arabic_name',
  desig_eng_name: 'desig_eng_name',
  desig_arabic_name: 'desig_arabic_name',
  unit_eng_name: 'unit_eng_name',
  unit_arabic_name: 'unit_arabic_name',
  committe_eng_name: 'committe_eng_name',
  committe_arabic_name: 'committe_arabic_name'
};

exports.Prisma.users_rolesOrderByRelevanceFieldEnum = {
  role_name: 'role_name'
};

exports.Prisma.parks_footfall_analysisOrderByRelevanceFieldEnum = {
  detection_Id: 'detection_Id',
  gender: 'gender',
  detected_camera_Id: 'detected_camera_Id',
  detected_camera_name: 'detected_camera_name',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3'
};

exports.Prisma.offices_footfall_analysisOrderByRelevanceFieldEnum = {
  detection_Id: 'detection_Id',
  gender: 'gender',
  detected_camera_Id: 'detected_camera_Id',
  detected_camera_name: 'detected_camera_name',
  abc1: 'abc1',
  abc2: 'abc2',
  abc3: 'abc3'
};
exports.offices_sentiment_analysis_sentiment_of = exports.$Enums.offices_sentiment_analysis_sentiment_of = {
  employee: 'employee',
  visitor: 'visitor'
};

exports.parks_sentiment_analysis_sentiment_of = exports.$Enums.parks_sentiment_analysis_sentiment_of = {
  employee: 'employee',
  visitor: 'visitor'
};

exports.Prisma.ModelName = {
  access_secret: 'access_secret',
  live_stream_favourites: 'live_stream_favourites',
  office_streams: 'office_streams',
  offices: 'offices',
  offices_attendance: 'offices_attendance',
  offices_cameras: 'offices_cameras',
  offices_sentiment_analysis: 'offices_sentiment_analysis',
  park_cameras: 'park_cameras',
  park_streams: 'park_streams',
  park_zones: 'park_zones',
  parks: 'parks',
  parks_attendance: 'parks_attendance',
  parks_behaviour_alerts: 'parks_behaviour_alerts',
  parks_intrusion_detection: 'parks_intrusion_detection',
  parks_irrigation_job_history: 'parks_irrigation_job_history',
  parks_landscaping: 'parks_landscaping',
  parks_litter_detection: 'parks_litter_detection',
  ticket_details_table: 'ticket_details_table',
  parks_sentiment_analysis: 'parks_sentiment_analysis',
  parks_smoking_detection: 'parks_smoking_detection',
  intranet_posting_history: 'intranet_posting_history',
  users: 'users',
  users_permissions: 'users_permissions',
  users_roles: 'users_roles',
  parks_footfall_analysis: 'parks_footfall_analysis',
  offices_footfall_analysis: 'offices_footfall_analysis'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
