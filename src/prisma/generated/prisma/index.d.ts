
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model access_secret
 * 
 */
export type access_secret = $Result.DefaultSelection<Prisma.$access_secretPayload>
/**
 * Model live_stream_favourites
 * 
 */
export type live_stream_favourites = $Result.DefaultSelection<Prisma.$live_stream_favouritesPayload>
/**
 * Model office_streams
 * 
 */
export type office_streams = $Result.DefaultSelection<Prisma.$office_streamsPayload>
/**
 * Model offices
 * 
 */
export type offices = $Result.DefaultSelection<Prisma.$officesPayload>
/**
 * Model offices_attendance
 * 
 */
export type offices_attendance = $Result.DefaultSelection<Prisma.$offices_attendancePayload>
/**
 * Model offices_cameras
 * 
 */
export type offices_cameras = $Result.DefaultSelection<Prisma.$offices_camerasPayload>
/**
 * Model offices_sentiment_analysis
 * 
 */
export type offices_sentiment_analysis = $Result.DefaultSelection<Prisma.$offices_sentiment_analysisPayload>
/**
 * Model park_cameras
 * 
 */
export type park_cameras = $Result.DefaultSelection<Prisma.$park_camerasPayload>
/**
 * Model park_streams
 * 
 */
export type park_streams = $Result.DefaultSelection<Prisma.$park_streamsPayload>
/**
 * Model TermsPrivacy
 * 
 */
export type TermsPrivacy = $Result.DefaultSelection<Prisma.$TermsPrivacyPayload>
/**
 * Model FAQ
 * 
 */
export type FAQ = $Result.DefaultSelection<Prisma.$FAQPayload>
/**
 * Model park_zones
 * 
 */
export type park_zones = $Result.DefaultSelection<Prisma.$park_zonesPayload>
/**
 * Model parks
 * 
 */
export type parks = $Result.DefaultSelection<Prisma.$parksPayload>
/**
 * Model parks_attendance
 * 
 */
export type parks_attendance = $Result.DefaultSelection<Prisma.$parks_attendancePayload>
/**
 * Model parks_behaviour_alerts
 * 
 */
export type parks_behaviour_alerts = $Result.DefaultSelection<Prisma.$parks_behaviour_alertsPayload>
/**
 * Model parks_intrusion_detection
 * 
 */
export type parks_intrusion_detection = $Result.DefaultSelection<Prisma.$parks_intrusion_detectionPayload>
/**
 * Model parks_irrigation_job_history
 * 
 */
export type parks_irrigation_job_history = $Result.DefaultSelection<Prisma.$parks_irrigation_job_historyPayload>
/**
 * Model parks_landscaping
 * 
 */
export type parks_landscaping = $Result.DefaultSelection<Prisma.$parks_landscapingPayload>
/**
 * Model parks_litter_detection
 * 
 */
export type parks_litter_detection = $Result.DefaultSelection<Prisma.$parks_litter_detectionPayload>
/**
 * Model ticket_details_table
 * 
 */
export type ticket_details_table = $Result.DefaultSelection<Prisma.$ticket_details_tablePayload>
/**
 * Model parks_sentiment_analysis
 * 
 */
export type parks_sentiment_analysis = $Result.DefaultSelection<Prisma.$parks_sentiment_analysisPayload>
/**
 * Model parks_smoking_detection
 * 
 */
export type parks_smoking_detection = $Result.DefaultSelection<Prisma.$parks_smoking_detectionPayload>
/**
 * Model intranet_posting_history
 * 
 */
export type intranet_posting_history = $Result.DefaultSelection<Prisma.$intranet_posting_historyPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model users_permissions
 * 
 */
export type users_permissions = $Result.DefaultSelection<Prisma.$users_permissionsPayload>
/**
 * Model users_roles
 * 
 */
export type users_roles = $Result.DefaultSelection<Prisma.$users_rolesPayload>
/**
 * Model parks_footfall_analysis
 * 
 */
export type parks_footfall_analysis = $Result.DefaultSelection<Prisma.$parks_footfall_analysisPayload>
/**
 * Model offices_footfall_analysis
 * 
 */
export type offices_footfall_analysis = $Result.DefaultSelection<Prisma.$offices_footfall_analysisPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const offices_attendance_attendance_of: {
  employee: 'employee',
  visitor: 'visitor'
};

export type offices_attendance_attendance_of = (typeof offices_attendance_attendance_of)[keyof typeof offices_attendance_attendance_of]


export const offices_sentiment_analysis_sentiment_of: {
  employee: 'employee',
  visitor: 'visitor'
};

export type offices_sentiment_analysis_sentiment_of = (typeof offices_sentiment_analysis_sentiment_of)[keyof typeof offices_sentiment_analysis_sentiment_of]


export const parks_attendance_attendance_of: {
  employee: 'employee',
  visitor: 'visitor'
};

export type parks_attendance_attendance_of = (typeof parks_attendance_attendance_of)[keyof typeof parks_attendance_attendance_of]


export const parks_sentiment_analysis_sentiment_of: {
  employee: 'employee',
  visitor: 'visitor'
};

export type parks_sentiment_analysis_sentiment_of = (typeof parks_sentiment_analysis_sentiment_of)[keyof typeof parks_sentiment_analysis_sentiment_of]

}

export type offices_attendance_attendance_of = $Enums.offices_attendance_attendance_of

export const offices_attendance_attendance_of: typeof $Enums.offices_attendance_attendance_of

export type offices_sentiment_analysis_sentiment_of = $Enums.offices_sentiment_analysis_sentiment_of

export const offices_sentiment_analysis_sentiment_of: typeof $Enums.offices_sentiment_analysis_sentiment_of

export type parks_attendance_attendance_of = $Enums.parks_attendance_attendance_of

export const parks_attendance_attendance_of: typeof $Enums.parks_attendance_attendance_of

export type parks_sentiment_analysis_sentiment_of = $Enums.parks_sentiment_analysis_sentiment_of

export const parks_sentiment_analysis_sentiment_of: typeof $Enums.parks_sentiment_analysis_sentiment_of

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Access_secrets
 * const access_secrets = await prisma.access_secret.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Access_secrets
   * const access_secrets = await prisma.access_secret.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.access_secret`: Exposes CRUD operations for the **access_secret** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Access_secrets
    * const access_secrets = await prisma.access_secret.findMany()
    * ```
    */
  get access_secret(): Prisma.access_secretDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.live_stream_favourites`: Exposes CRUD operations for the **live_stream_favourites** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Live_stream_favourites
    * const live_stream_favourites = await prisma.live_stream_favourites.findMany()
    * ```
    */
  get live_stream_favourites(): Prisma.live_stream_favouritesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.office_streams`: Exposes CRUD operations for the **office_streams** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Office_streams
    * const office_streams = await prisma.office_streams.findMany()
    * ```
    */
  get office_streams(): Prisma.office_streamsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offices`: Exposes CRUD operations for the **offices** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offices
    * const offices = await prisma.offices.findMany()
    * ```
    */
  get offices(): Prisma.officesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offices_attendance`: Exposes CRUD operations for the **offices_attendance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offices_attendances
    * const offices_attendances = await prisma.offices_attendance.findMany()
    * ```
    */
  get offices_attendance(): Prisma.offices_attendanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offices_cameras`: Exposes CRUD operations for the **offices_cameras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offices_cameras
    * const offices_cameras = await prisma.offices_cameras.findMany()
    * ```
    */
  get offices_cameras(): Prisma.offices_camerasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offices_sentiment_analysis`: Exposes CRUD operations for the **offices_sentiment_analysis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offices_sentiment_analyses
    * const offices_sentiment_analyses = await prisma.offices_sentiment_analysis.findMany()
    * ```
    */
  get offices_sentiment_analysis(): Prisma.offices_sentiment_analysisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.park_cameras`: Exposes CRUD operations for the **park_cameras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Park_cameras
    * const park_cameras = await prisma.park_cameras.findMany()
    * ```
    */
  get park_cameras(): Prisma.park_camerasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.park_streams`: Exposes CRUD operations for the **park_streams** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Park_streams
    * const park_streams = await prisma.park_streams.findMany()
    * ```
    */
  get park_streams(): Prisma.park_streamsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.termsPrivacy`: Exposes CRUD operations for the **TermsPrivacy** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TermsPrivacies
    * const termsPrivacies = await prisma.termsPrivacy.findMany()
    * ```
    */
  get termsPrivacy(): Prisma.TermsPrivacyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fAQ`: Exposes CRUD operations for the **FAQ** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FAQS
    * const fAQS = await prisma.fAQ.findMany()
    * ```
    */
  get fAQ(): Prisma.FAQDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.park_zones`: Exposes CRUD operations for the **park_zones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Park_zones
    * const park_zones = await prisma.park_zones.findMany()
    * ```
    */
  get park_zones(): Prisma.park_zonesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks`: Exposes CRUD operations for the **parks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks
    * const parks = await prisma.parks.findMany()
    * ```
    */
  get parks(): Prisma.parksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_attendance`: Exposes CRUD operations for the **parks_attendance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_attendances
    * const parks_attendances = await prisma.parks_attendance.findMany()
    * ```
    */
  get parks_attendance(): Prisma.parks_attendanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_behaviour_alerts`: Exposes CRUD operations for the **parks_behaviour_alerts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_behaviour_alerts
    * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findMany()
    * ```
    */
  get parks_behaviour_alerts(): Prisma.parks_behaviour_alertsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_intrusion_detection`: Exposes CRUD operations for the **parks_intrusion_detection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_intrusion_detections
    * const parks_intrusion_detections = await prisma.parks_intrusion_detection.findMany()
    * ```
    */
  get parks_intrusion_detection(): Prisma.parks_intrusion_detectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_irrigation_job_history`: Exposes CRUD operations for the **parks_irrigation_job_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_irrigation_job_histories
    * const parks_irrigation_job_histories = await prisma.parks_irrigation_job_history.findMany()
    * ```
    */
  get parks_irrigation_job_history(): Prisma.parks_irrigation_job_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_landscaping`: Exposes CRUD operations for the **parks_landscaping** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_landscapings
    * const parks_landscapings = await prisma.parks_landscaping.findMany()
    * ```
    */
  get parks_landscaping(): Prisma.parks_landscapingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_litter_detection`: Exposes CRUD operations for the **parks_litter_detection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_litter_detections
    * const parks_litter_detections = await prisma.parks_litter_detection.findMany()
    * ```
    */
  get parks_litter_detection(): Prisma.parks_litter_detectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticket_details_table`: Exposes CRUD operations for the **ticket_details_table** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ticket_details_tables
    * const ticket_details_tables = await prisma.ticket_details_table.findMany()
    * ```
    */
  get ticket_details_table(): Prisma.ticket_details_tableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_sentiment_analysis`: Exposes CRUD operations for the **parks_sentiment_analysis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_sentiment_analyses
    * const parks_sentiment_analyses = await prisma.parks_sentiment_analysis.findMany()
    * ```
    */
  get parks_sentiment_analysis(): Prisma.parks_sentiment_analysisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_smoking_detection`: Exposes CRUD operations for the **parks_smoking_detection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_smoking_detections
    * const parks_smoking_detections = await prisma.parks_smoking_detection.findMany()
    * ```
    */
  get parks_smoking_detection(): Prisma.parks_smoking_detectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.intranet_posting_history`: Exposes CRUD operations for the **intranet_posting_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Intranet_posting_histories
    * const intranet_posting_histories = await prisma.intranet_posting_history.findMany()
    * ```
    */
  get intranet_posting_history(): Prisma.intranet_posting_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users_permissions`: Exposes CRUD operations for the **users_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users_permissions
    * const users_permissions = await prisma.users_permissions.findMany()
    * ```
    */
  get users_permissions(): Prisma.users_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users_roles`: Exposes CRUD operations for the **users_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users_roles
    * const users_roles = await prisma.users_roles.findMany()
    * ```
    */
  get users_roles(): Prisma.users_rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.parks_footfall_analysis`: Exposes CRUD operations for the **parks_footfall_analysis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parks_footfall_analyses
    * const parks_footfall_analyses = await prisma.parks_footfall_analysis.findMany()
    * ```
    */
  get parks_footfall_analysis(): Prisma.parks_footfall_analysisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offices_footfall_analysis`: Exposes CRUD operations for the **offices_footfall_analysis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offices_footfall_analyses
    * const offices_footfall_analyses = await prisma.offices_footfall_analysis.findMany()
    * ```
    */
  get offices_footfall_analysis(): Prisma.offices_footfall_analysisDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    access_secret: 'access_secret',
    live_stream_favourites: 'live_stream_favourites',
    office_streams: 'office_streams',
    offices: 'offices',
    offices_attendance: 'offices_attendance',
    offices_cameras: 'offices_cameras',
    offices_sentiment_analysis: 'offices_sentiment_analysis',
    park_cameras: 'park_cameras',
    park_streams: 'park_streams',
    TermsPrivacy: 'TermsPrivacy',
    FAQ: 'FAQ',
    park_zones: 'park_zones',
    parks: 'parks',
    parks_attendance: 'parks_attendance',
    parks_behaviour_alerts: 'parks_behaviour_alerts',
    parks_intrusion_detection: 'parks_intrusion_detection',
    parks_irrigation_job_history: 'parks_irrigation_job_history',
    parks_landscaping: 'parks_landscaping',
    parks_litter_detection: 'parks_litter_detection',
    ticket_details_table: 'ticket_details_table',
    parks_sentiment_analysis: 'parks_sentiment_analysis',
    parks_smoking_detection: 'parks_smoking_detection',
    intranet_posting_history: 'intranet_posting_history',
    users: 'users',
    users_permissions: 'users_permissions',
    users_roles: 'users_roles',
    parks_footfall_analysis: 'parks_footfall_analysis',
    offices_footfall_analysis: 'offices_footfall_analysis'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "access_secret" | "live_stream_favourites" | "office_streams" | "offices" | "offices_attendance" | "offices_cameras" | "offices_sentiment_analysis" | "park_cameras" | "park_streams" | "termsPrivacy" | "fAQ" | "park_zones" | "parks" | "parks_attendance" | "parks_behaviour_alerts" | "parks_intrusion_detection" | "parks_irrigation_job_history" | "parks_landscaping" | "parks_litter_detection" | "ticket_details_table" | "parks_sentiment_analysis" | "parks_smoking_detection" | "intranet_posting_history" | "users" | "users_permissions" | "users_roles" | "parks_footfall_analysis" | "offices_footfall_analysis"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      access_secret: {
        payload: Prisma.$access_secretPayload<ExtArgs>
        fields: Prisma.access_secretFieldRefs
        operations: {
          findUnique: {
            args: Prisma.access_secretFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.access_secretFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>
          }
          findFirst: {
            args: Prisma.access_secretFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.access_secretFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>
          }
          findMany: {
            args: Prisma.access_secretFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>[]
          }
          create: {
            args: Prisma.access_secretCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>
          }
          createMany: {
            args: Prisma.access_secretCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.access_secretDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>
          }
          update: {
            args: Prisma.access_secretUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>
          }
          deleteMany: {
            args: Prisma.access_secretDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.access_secretUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.access_secretUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$access_secretPayload>
          }
          aggregate: {
            args: Prisma.Access_secretAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccess_secret>
          }
          groupBy: {
            args: Prisma.access_secretGroupByArgs<ExtArgs>
            result: $Utils.Optional<Access_secretGroupByOutputType>[]
          }
          count: {
            args: Prisma.access_secretCountArgs<ExtArgs>
            result: $Utils.Optional<Access_secretCountAggregateOutputType> | number
          }
        }
      }
      live_stream_favourites: {
        payload: Prisma.$live_stream_favouritesPayload<ExtArgs>
        fields: Prisma.live_stream_favouritesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.live_stream_favouritesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.live_stream_favouritesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>
          }
          findFirst: {
            args: Prisma.live_stream_favouritesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.live_stream_favouritesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>
          }
          findMany: {
            args: Prisma.live_stream_favouritesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>[]
          }
          create: {
            args: Prisma.live_stream_favouritesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>
          }
          createMany: {
            args: Prisma.live_stream_favouritesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.live_stream_favouritesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>
          }
          update: {
            args: Prisma.live_stream_favouritesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>
          }
          deleteMany: {
            args: Prisma.live_stream_favouritesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.live_stream_favouritesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.live_stream_favouritesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$live_stream_favouritesPayload>
          }
          aggregate: {
            args: Prisma.Live_stream_favouritesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLive_stream_favourites>
          }
          groupBy: {
            args: Prisma.live_stream_favouritesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Live_stream_favouritesGroupByOutputType>[]
          }
          count: {
            args: Prisma.live_stream_favouritesCountArgs<ExtArgs>
            result: $Utils.Optional<Live_stream_favouritesCountAggregateOutputType> | number
          }
        }
      }
      office_streams: {
        payload: Prisma.$office_streamsPayload<ExtArgs>
        fields: Prisma.office_streamsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.office_streamsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.office_streamsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>
          }
          findFirst: {
            args: Prisma.office_streamsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.office_streamsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>
          }
          findMany: {
            args: Prisma.office_streamsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>[]
          }
          create: {
            args: Prisma.office_streamsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>
          }
          createMany: {
            args: Prisma.office_streamsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.office_streamsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>
          }
          update: {
            args: Prisma.office_streamsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>
          }
          deleteMany: {
            args: Prisma.office_streamsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.office_streamsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.office_streamsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$office_streamsPayload>
          }
          aggregate: {
            args: Prisma.Office_streamsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffice_streams>
          }
          groupBy: {
            args: Prisma.office_streamsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Office_streamsGroupByOutputType>[]
          }
          count: {
            args: Prisma.office_streamsCountArgs<ExtArgs>
            result: $Utils.Optional<Office_streamsCountAggregateOutputType> | number
          }
        }
      }
      offices: {
        payload: Prisma.$officesPayload<ExtArgs>
        fields: Prisma.officesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.officesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.officesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>
          }
          findFirst: {
            args: Prisma.officesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.officesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>
          }
          findMany: {
            args: Prisma.officesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>[]
          }
          create: {
            args: Prisma.officesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>
          }
          createMany: {
            args: Prisma.officesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.officesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>
          }
          update: {
            args: Prisma.officesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>
          }
          deleteMany: {
            args: Prisma.officesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.officesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.officesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$officesPayload>
          }
          aggregate: {
            args: Prisma.OfficesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffices>
          }
          groupBy: {
            args: Prisma.officesGroupByArgs<ExtArgs>
            result: $Utils.Optional<OfficesGroupByOutputType>[]
          }
          count: {
            args: Prisma.officesCountArgs<ExtArgs>
            result: $Utils.Optional<OfficesCountAggregateOutputType> | number
          }
        }
      }
      offices_attendance: {
        payload: Prisma.$offices_attendancePayload<ExtArgs>
        fields: Prisma.offices_attendanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offices_attendanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offices_attendanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>
          }
          findFirst: {
            args: Prisma.offices_attendanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offices_attendanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>
          }
          findMany: {
            args: Prisma.offices_attendanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>[]
          }
          create: {
            args: Prisma.offices_attendanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>
          }
          createMany: {
            args: Prisma.offices_attendanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.offices_attendanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>
          }
          update: {
            args: Prisma.offices_attendanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>
          }
          deleteMany: {
            args: Prisma.offices_attendanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.offices_attendanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.offices_attendanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_attendancePayload>
          }
          aggregate: {
            args: Prisma.Offices_attendanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffices_attendance>
          }
          groupBy: {
            args: Prisma.offices_attendanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<Offices_attendanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.offices_attendanceCountArgs<ExtArgs>
            result: $Utils.Optional<Offices_attendanceCountAggregateOutputType> | number
          }
        }
      }
      offices_cameras: {
        payload: Prisma.$offices_camerasPayload<ExtArgs>
        fields: Prisma.offices_camerasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offices_camerasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offices_camerasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>
          }
          findFirst: {
            args: Prisma.offices_camerasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offices_camerasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>
          }
          findMany: {
            args: Prisma.offices_camerasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>[]
          }
          create: {
            args: Prisma.offices_camerasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>
          }
          createMany: {
            args: Prisma.offices_camerasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.offices_camerasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>
          }
          update: {
            args: Prisma.offices_camerasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>
          }
          deleteMany: {
            args: Prisma.offices_camerasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.offices_camerasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.offices_camerasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_camerasPayload>
          }
          aggregate: {
            args: Prisma.Offices_camerasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffices_cameras>
          }
          groupBy: {
            args: Prisma.offices_camerasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Offices_camerasGroupByOutputType>[]
          }
          count: {
            args: Prisma.offices_camerasCountArgs<ExtArgs>
            result: $Utils.Optional<Offices_camerasCountAggregateOutputType> | number
          }
        }
      }
      offices_sentiment_analysis: {
        payload: Prisma.$offices_sentiment_analysisPayload<ExtArgs>
        fields: Prisma.offices_sentiment_analysisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offices_sentiment_analysisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offices_sentiment_analysisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>
          }
          findFirst: {
            args: Prisma.offices_sentiment_analysisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offices_sentiment_analysisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>
          }
          findMany: {
            args: Prisma.offices_sentiment_analysisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>[]
          }
          create: {
            args: Prisma.offices_sentiment_analysisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>
          }
          createMany: {
            args: Prisma.offices_sentiment_analysisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.offices_sentiment_analysisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>
          }
          update: {
            args: Prisma.offices_sentiment_analysisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>
          }
          deleteMany: {
            args: Prisma.offices_sentiment_analysisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.offices_sentiment_analysisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.offices_sentiment_analysisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_sentiment_analysisPayload>
          }
          aggregate: {
            args: Prisma.Offices_sentiment_analysisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffices_sentiment_analysis>
          }
          groupBy: {
            args: Prisma.offices_sentiment_analysisGroupByArgs<ExtArgs>
            result: $Utils.Optional<Offices_sentiment_analysisGroupByOutputType>[]
          }
          count: {
            args: Prisma.offices_sentiment_analysisCountArgs<ExtArgs>
            result: $Utils.Optional<Offices_sentiment_analysisCountAggregateOutputType> | number
          }
        }
      }
      park_cameras: {
        payload: Prisma.$park_camerasPayload<ExtArgs>
        fields: Prisma.park_camerasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.park_camerasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.park_camerasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>
          }
          findFirst: {
            args: Prisma.park_camerasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.park_camerasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>
          }
          findMany: {
            args: Prisma.park_camerasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>[]
          }
          create: {
            args: Prisma.park_camerasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>
          }
          createMany: {
            args: Prisma.park_camerasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.park_camerasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>
          }
          update: {
            args: Prisma.park_camerasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>
          }
          deleteMany: {
            args: Prisma.park_camerasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.park_camerasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.park_camerasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_camerasPayload>
          }
          aggregate: {
            args: Prisma.Park_camerasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePark_cameras>
          }
          groupBy: {
            args: Prisma.park_camerasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Park_camerasGroupByOutputType>[]
          }
          count: {
            args: Prisma.park_camerasCountArgs<ExtArgs>
            result: $Utils.Optional<Park_camerasCountAggregateOutputType> | number
          }
        }
      }
      park_streams: {
        payload: Prisma.$park_streamsPayload<ExtArgs>
        fields: Prisma.park_streamsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.park_streamsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.park_streamsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>
          }
          findFirst: {
            args: Prisma.park_streamsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.park_streamsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>
          }
          findMany: {
            args: Prisma.park_streamsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>[]
          }
          create: {
            args: Prisma.park_streamsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>
          }
          createMany: {
            args: Prisma.park_streamsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.park_streamsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>
          }
          update: {
            args: Prisma.park_streamsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>
          }
          deleteMany: {
            args: Prisma.park_streamsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.park_streamsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.park_streamsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_streamsPayload>
          }
          aggregate: {
            args: Prisma.Park_streamsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePark_streams>
          }
          groupBy: {
            args: Prisma.park_streamsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Park_streamsGroupByOutputType>[]
          }
          count: {
            args: Prisma.park_streamsCountArgs<ExtArgs>
            result: $Utils.Optional<Park_streamsCountAggregateOutputType> | number
          }
        }
      }
      TermsPrivacy: {
        payload: Prisma.$TermsPrivacyPayload<ExtArgs>
        fields: Prisma.TermsPrivacyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TermsPrivacyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TermsPrivacyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>
          }
          findFirst: {
            args: Prisma.TermsPrivacyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TermsPrivacyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>
          }
          findMany: {
            args: Prisma.TermsPrivacyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>[]
          }
          create: {
            args: Prisma.TermsPrivacyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>
          }
          createMany: {
            args: Prisma.TermsPrivacyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TermsPrivacyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>
          }
          update: {
            args: Prisma.TermsPrivacyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>
          }
          deleteMany: {
            args: Prisma.TermsPrivacyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TermsPrivacyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TermsPrivacyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TermsPrivacyPayload>
          }
          aggregate: {
            args: Prisma.TermsPrivacyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTermsPrivacy>
          }
          groupBy: {
            args: Prisma.TermsPrivacyGroupByArgs<ExtArgs>
            result: $Utils.Optional<TermsPrivacyGroupByOutputType>[]
          }
          count: {
            args: Prisma.TermsPrivacyCountArgs<ExtArgs>
            result: $Utils.Optional<TermsPrivacyCountAggregateOutputType> | number
          }
        }
      }
      FAQ: {
        payload: Prisma.$FAQPayload<ExtArgs>
        fields: Prisma.FAQFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FAQFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FAQFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>
          }
          findFirst: {
            args: Prisma.FAQFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FAQFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>
          }
          findMany: {
            args: Prisma.FAQFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>[]
          }
          create: {
            args: Prisma.FAQCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>
          }
          createMany: {
            args: Prisma.FAQCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FAQDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>
          }
          update: {
            args: Prisma.FAQUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>
          }
          deleteMany: {
            args: Prisma.FAQDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FAQUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FAQUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FAQPayload>
          }
          aggregate: {
            args: Prisma.FAQAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFAQ>
          }
          groupBy: {
            args: Prisma.FAQGroupByArgs<ExtArgs>
            result: $Utils.Optional<FAQGroupByOutputType>[]
          }
          count: {
            args: Prisma.FAQCountArgs<ExtArgs>
            result: $Utils.Optional<FAQCountAggregateOutputType> | number
          }
        }
      }
      park_zones: {
        payload: Prisma.$park_zonesPayload<ExtArgs>
        fields: Prisma.park_zonesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.park_zonesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.park_zonesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>
          }
          findFirst: {
            args: Prisma.park_zonesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.park_zonesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>
          }
          findMany: {
            args: Prisma.park_zonesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>[]
          }
          create: {
            args: Prisma.park_zonesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>
          }
          createMany: {
            args: Prisma.park_zonesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.park_zonesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>
          }
          update: {
            args: Prisma.park_zonesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>
          }
          deleteMany: {
            args: Prisma.park_zonesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.park_zonesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.park_zonesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$park_zonesPayload>
          }
          aggregate: {
            args: Prisma.Park_zonesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePark_zones>
          }
          groupBy: {
            args: Prisma.park_zonesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Park_zonesGroupByOutputType>[]
          }
          count: {
            args: Prisma.park_zonesCountArgs<ExtArgs>
            result: $Utils.Optional<Park_zonesCountAggregateOutputType> | number
          }
        }
      }
      parks: {
        payload: Prisma.$parksPayload<ExtArgs>
        fields: Prisma.parksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>
          }
          findFirst: {
            args: Prisma.parksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>
          }
          findMany: {
            args: Prisma.parksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>[]
          }
          create: {
            args: Prisma.parksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>
          }
          createMany: {
            args: Prisma.parksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>
          }
          update: {
            args: Prisma.parksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>
          }
          deleteMany: {
            args: Prisma.parksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parksPayload>
          }
          aggregate: {
            args: Prisma.ParksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks>
          }
          groupBy: {
            args: Prisma.parksGroupByArgs<ExtArgs>
            result: $Utils.Optional<ParksGroupByOutputType>[]
          }
          count: {
            args: Prisma.parksCountArgs<ExtArgs>
            result: $Utils.Optional<ParksCountAggregateOutputType> | number
          }
        }
      }
      parks_attendance: {
        payload: Prisma.$parks_attendancePayload<ExtArgs>
        fields: Prisma.parks_attendanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_attendanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_attendanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>
          }
          findFirst: {
            args: Prisma.parks_attendanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_attendanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>
          }
          findMany: {
            args: Prisma.parks_attendanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>[]
          }
          create: {
            args: Prisma.parks_attendanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>
          }
          createMany: {
            args: Prisma.parks_attendanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_attendanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>
          }
          update: {
            args: Prisma.parks_attendanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>
          }
          deleteMany: {
            args: Prisma.parks_attendanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_attendanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_attendanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_attendancePayload>
          }
          aggregate: {
            args: Prisma.Parks_attendanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_attendance>
          }
          groupBy: {
            args: Prisma.parks_attendanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_attendanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_attendanceCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_attendanceCountAggregateOutputType> | number
          }
        }
      }
      parks_behaviour_alerts: {
        payload: Prisma.$parks_behaviour_alertsPayload<ExtArgs>
        fields: Prisma.parks_behaviour_alertsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_behaviour_alertsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_behaviour_alertsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>
          }
          findFirst: {
            args: Prisma.parks_behaviour_alertsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_behaviour_alertsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>
          }
          findMany: {
            args: Prisma.parks_behaviour_alertsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>[]
          }
          create: {
            args: Prisma.parks_behaviour_alertsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>
          }
          createMany: {
            args: Prisma.parks_behaviour_alertsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_behaviour_alertsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>
          }
          update: {
            args: Prisma.parks_behaviour_alertsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>
          }
          deleteMany: {
            args: Prisma.parks_behaviour_alertsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_behaviour_alertsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_behaviour_alertsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_behaviour_alertsPayload>
          }
          aggregate: {
            args: Prisma.Parks_behaviour_alertsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_behaviour_alerts>
          }
          groupBy: {
            args: Prisma.parks_behaviour_alertsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_behaviour_alertsGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_behaviour_alertsCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_behaviour_alertsCountAggregateOutputType> | number
          }
        }
      }
      parks_intrusion_detection: {
        payload: Prisma.$parks_intrusion_detectionPayload<ExtArgs>
        fields: Prisma.parks_intrusion_detectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_intrusion_detectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_intrusion_detectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>
          }
          findFirst: {
            args: Prisma.parks_intrusion_detectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_intrusion_detectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>
          }
          findMany: {
            args: Prisma.parks_intrusion_detectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>[]
          }
          create: {
            args: Prisma.parks_intrusion_detectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>
          }
          createMany: {
            args: Prisma.parks_intrusion_detectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_intrusion_detectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>
          }
          update: {
            args: Prisma.parks_intrusion_detectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>
          }
          deleteMany: {
            args: Prisma.parks_intrusion_detectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_intrusion_detectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_intrusion_detectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_intrusion_detectionPayload>
          }
          aggregate: {
            args: Prisma.Parks_intrusion_detectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_intrusion_detection>
          }
          groupBy: {
            args: Prisma.parks_intrusion_detectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_intrusion_detectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_intrusion_detectionCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_intrusion_detectionCountAggregateOutputType> | number
          }
        }
      }
      parks_irrigation_job_history: {
        payload: Prisma.$parks_irrigation_job_historyPayload<ExtArgs>
        fields: Prisma.parks_irrigation_job_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_irrigation_job_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_irrigation_job_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>
          }
          findFirst: {
            args: Prisma.parks_irrigation_job_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_irrigation_job_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>
          }
          findMany: {
            args: Prisma.parks_irrigation_job_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>[]
          }
          create: {
            args: Prisma.parks_irrigation_job_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>
          }
          createMany: {
            args: Prisma.parks_irrigation_job_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_irrigation_job_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>
          }
          update: {
            args: Prisma.parks_irrigation_job_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>
          }
          deleteMany: {
            args: Prisma.parks_irrigation_job_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_irrigation_job_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_irrigation_job_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_irrigation_job_historyPayload>
          }
          aggregate: {
            args: Prisma.Parks_irrigation_job_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_irrigation_job_history>
          }
          groupBy: {
            args: Prisma.parks_irrigation_job_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_irrigation_job_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_irrigation_job_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_irrigation_job_historyCountAggregateOutputType> | number
          }
        }
      }
      parks_landscaping: {
        payload: Prisma.$parks_landscapingPayload<ExtArgs>
        fields: Prisma.parks_landscapingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_landscapingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_landscapingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>
          }
          findFirst: {
            args: Prisma.parks_landscapingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_landscapingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>
          }
          findMany: {
            args: Prisma.parks_landscapingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>[]
          }
          create: {
            args: Prisma.parks_landscapingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>
          }
          createMany: {
            args: Prisma.parks_landscapingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_landscapingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>
          }
          update: {
            args: Prisma.parks_landscapingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>
          }
          deleteMany: {
            args: Prisma.parks_landscapingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_landscapingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_landscapingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_landscapingPayload>
          }
          aggregate: {
            args: Prisma.Parks_landscapingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_landscaping>
          }
          groupBy: {
            args: Prisma.parks_landscapingGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_landscapingGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_landscapingCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_landscapingCountAggregateOutputType> | number
          }
        }
      }
      parks_litter_detection: {
        payload: Prisma.$parks_litter_detectionPayload<ExtArgs>
        fields: Prisma.parks_litter_detectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_litter_detectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_litter_detectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>
          }
          findFirst: {
            args: Prisma.parks_litter_detectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_litter_detectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>
          }
          findMany: {
            args: Prisma.parks_litter_detectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>[]
          }
          create: {
            args: Prisma.parks_litter_detectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>
          }
          createMany: {
            args: Prisma.parks_litter_detectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_litter_detectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>
          }
          update: {
            args: Prisma.parks_litter_detectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>
          }
          deleteMany: {
            args: Prisma.parks_litter_detectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_litter_detectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_litter_detectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_litter_detectionPayload>
          }
          aggregate: {
            args: Prisma.Parks_litter_detectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_litter_detection>
          }
          groupBy: {
            args: Prisma.parks_litter_detectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_litter_detectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_litter_detectionCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_litter_detectionCountAggregateOutputType> | number
          }
        }
      }
      ticket_details_table: {
        payload: Prisma.$ticket_details_tablePayload<ExtArgs>
        fields: Prisma.ticket_details_tableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ticket_details_tableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ticket_details_tableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>
          }
          findFirst: {
            args: Prisma.ticket_details_tableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ticket_details_tableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>
          }
          findMany: {
            args: Prisma.ticket_details_tableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>[]
          }
          create: {
            args: Prisma.ticket_details_tableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>
          }
          createMany: {
            args: Prisma.ticket_details_tableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ticket_details_tableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>
          }
          update: {
            args: Prisma.ticket_details_tableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>
          }
          deleteMany: {
            args: Prisma.ticket_details_tableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ticket_details_tableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ticket_details_tableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticket_details_tablePayload>
          }
          aggregate: {
            args: Prisma.Ticket_details_tableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicket_details_table>
          }
          groupBy: {
            args: Prisma.ticket_details_tableGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ticket_details_tableGroupByOutputType>[]
          }
          count: {
            args: Prisma.ticket_details_tableCountArgs<ExtArgs>
            result: $Utils.Optional<Ticket_details_tableCountAggregateOutputType> | number
          }
        }
      }
      parks_sentiment_analysis: {
        payload: Prisma.$parks_sentiment_analysisPayload<ExtArgs>
        fields: Prisma.parks_sentiment_analysisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_sentiment_analysisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_sentiment_analysisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>
          }
          findFirst: {
            args: Prisma.parks_sentiment_analysisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_sentiment_analysisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>
          }
          findMany: {
            args: Prisma.parks_sentiment_analysisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>[]
          }
          create: {
            args: Prisma.parks_sentiment_analysisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>
          }
          createMany: {
            args: Prisma.parks_sentiment_analysisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_sentiment_analysisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>
          }
          update: {
            args: Prisma.parks_sentiment_analysisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>
          }
          deleteMany: {
            args: Prisma.parks_sentiment_analysisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_sentiment_analysisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_sentiment_analysisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_sentiment_analysisPayload>
          }
          aggregate: {
            args: Prisma.Parks_sentiment_analysisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_sentiment_analysis>
          }
          groupBy: {
            args: Prisma.parks_sentiment_analysisGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_sentiment_analysisGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_sentiment_analysisCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_sentiment_analysisCountAggregateOutputType> | number
          }
        }
      }
      parks_smoking_detection: {
        payload: Prisma.$parks_smoking_detectionPayload<ExtArgs>
        fields: Prisma.parks_smoking_detectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_smoking_detectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_smoking_detectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>
          }
          findFirst: {
            args: Prisma.parks_smoking_detectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_smoking_detectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>
          }
          findMany: {
            args: Prisma.parks_smoking_detectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>[]
          }
          create: {
            args: Prisma.parks_smoking_detectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>
          }
          createMany: {
            args: Prisma.parks_smoking_detectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_smoking_detectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>
          }
          update: {
            args: Prisma.parks_smoking_detectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>
          }
          deleteMany: {
            args: Prisma.parks_smoking_detectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_smoking_detectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_smoking_detectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_smoking_detectionPayload>
          }
          aggregate: {
            args: Prisma.Parks_smoking_detectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_smoking_detection>
          }
          groupBy: {
            args: Prisma.parks_smoking_detectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_smoking_detectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_smoking_detectionCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_smoking_detectionCountAggregateOutputType> | number
          }
        }
      }
      intranet_posting_history: {
        payload: Prisma.$intranet_posting_historyPayload<ExtArgs>
        fields: Prisma.intranet_posting_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.intranet_posting_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.intranet_posting_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>
          }
          findFirst: {
            args: Prisma.intranet_posting_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.intranet_posting_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>
          }
          findMany: {
            args: Prisma.intranet_posting_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>[]
          }
          create: {
            args: Prisma.intranet_posting_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>
          }
          createMany: {
            args: Prisma.intranet_posting_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.intranet_posting_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>
          }
          update: {
            args: Prisma.intranet_posting_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>
          }
          deleteMany: {
            args: Prisma.intranet_posting_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.intranet_posting_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.intranet_posting_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intranet_posting_historyPayload>
          }
          aggregate: {
            args: Prisma.Intranet_posting_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIntranet_posting_history>
          }
          groupBy: {
            args: Prisma.intranet_posting_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Intranet_posting_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.intranet_posting_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Intranet_posting_historyCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      users_permissions: {
        payload: Prisma.$users_permissionsPayload<ExtArgs>
        fields: Prisma.users_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.users_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.users_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>
          }
          findFirst: {
            args: Prisma.users_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.users_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>
          }
          findMany: {
            args: Prisma.users_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>[]
          }
          create: {
            args: Prisma.users_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>
          }
          createMany: {
            args: Prisma.users_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.users_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>
          }
          update: {
            args: Prisma.users_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.users_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.users_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.users_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Users_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers_permissions>
          }
          groupBy: {
            args: Prisma.users_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Users_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.users_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Users_permissionsCountAggregateOutputType> | number
          }
        }
      }
      users_roles: {
        payload: Prisma.$users_rolesPayload<ExtArgs>
        fields: Prisma.users_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.users_rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.users_rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>
          }
          findFirst: {
            args: Prisma.users_rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.users_rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>
          }
          findMany: {
            args: Prisma.users_rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>[]
          }
          create: {
            args: Prisma.users_rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>
          }
          createMany: {
            args: Prisma.users_rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.users_rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>
          }
          update: {
            args: Prisma.users_rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>
          }
          deleteMany: {
            args: Prisma.users_rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.users_rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.users_rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$users_rolesPayload>
          }
          aggregate: {
            args: Prisma.Users_rolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers_roles>
          }
          groupBy: {
            args: Prisma.users_rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Users_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.users_rolesCountArgs<ExtArgs>
            result: $Utils.Optional<Users_rolesCountAggregateOutputType> | number
          }
        }
      }
      parks_footfall_analysis: {
        payload: Prisma.$parks_footfall_analysisPayload<ExtArgs>
        fields: Prisma.parks_footfall_analysisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parks_footfall_analysisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parks_footfall_analysisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>
          }
          findFirst: {
            args: Prisma.parks_footfall_analysisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parks_footfall_analysisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>
          }
          findMany: {
            args: Prisma.parks_footfall_analysisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>[]
          }
          create: {
            args: Prisma.parks_footfall_analysisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>
          }
          createMany: {
            args: Prisma.parks_footfall_analysisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.parks_footfall_analysisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>
          }
          update: {
            args: Prisma.parks_footfall_analysisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>
          }
          deleteMany: {
            args: Prisma.parks_footfall_analysisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.parks_footfall_analysisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.parks_footfall_analysisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$parks_footfall_analysisPayload>
          }
          aggregate: {
            args: Prisma.Parks_footfall_analysisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParks_footfall_analysis>
          }
          groupBy: {
            args: Prisma.parks_footfall_analysisGroupByArgs<ExtArgs>
            result: $Utils.Optional<Parks_footfall_analysisGroupByOutputType>[]
          }
          count: {
            args: Prisma.parks_footfall_analysisCountArgs<ExtArgs>
            result: $Utils.Optional<Parks_footfall_analysisCountAggregateOutputType> | number
          }
        }
      }
      offices_footfall_analysis: {
        payload: Prisma.$offices_footfall_analysisPayload<ExtArgs>
        fields: Prisma.offices_footfall_analysisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offices_footfall_analysisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offices_footfall_analysisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>
          }
          findFirst: {
            args: Prisma.offices_footfall_analysisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offices_footfall_analysisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>
          }
          findMany: {
            args: Prisma.offices_footfall_analysisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>[]
          }
          create: {
            args: Prisma.offices_footfall_analysisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>
          }
          createMany: {
            args: Prisma.offices_footfall_analysisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.offices_footfall_analysisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>
          }
          update: {
            args: Prisma.offices_footfall_analysisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>
          }
          deleteMany: {
            args: Prisma.offices_footfall_analysisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.offices_footfall_analysisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.offices_footfall_analysisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offices_footfall_analysisPayload>
          }
          aggregate: {
            args: Prisma.Offices_footfall_analysisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffices_footfall_analysis>
          }
          groupBy: {
            args: Prisma.offices_footfall_analysisGroupByArgs<ExtArgs>
            result: $Utils.Optional<Offices_footfall_analysisGroupByOutputType>[]
          }
          count: {
            args: Prisma.offices_footfall_analysisCountArgs<ExtArgs>
            result: $Utils.Optional<Offices_footfall_analysisCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    access_secret?: access_secretOmit
    live_stream_favourites?: live_stream_favouritesOmit
    office_streams?: office_streamsOmit
    offices?: officesOmit
    offices_attendance?: offices_attendanceOmit
    offices_cameras?: offices_camerasOmit
    offices_sentiment_analysis?: offices_sentiment_analysisOmit
    park_cameras?: park_camerasOmit
    park_streams?: park_streamsOmit
    termsPrivacy?: TermsPrivacyOmit
    fAQ?: FAQOmit
    park_zones?: park_zonesOmit
    parks?: parksOmit
    parks_attendance?: parks_attendanceOmit
    parks_behaviour_alerts?: parks_behaviour_alertsOmit
    parks_intrusion_detection?: parks_intrusion_detectionOmit
    parks_irrigation_job_history?: parks_irrigation_job_historyOmit
    parks_landscaping?: parks_landscapingOmit
    parks_litter_detection?: parks_litter_detectionOmit
    ticket_details_table?: ticket_details_tableOmit
    parks_sentiment_analysis?: parks_sentiment_analysisOmit
    parks_smoking_detection?: parks_smoking_detectionOmit
    intranet_posting_history?: intranet_posting_historyOmit
    users?: usersOmit
    users_permissions?: users_permissionsOmit
    users_roles?: users_rolesOmit
    parks_footfall_analysis?: parks_footfall_analysisOmit
    offices_footfall_analysis?: offices_footfall_analysisOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type OfficesCountOutputType
   */

  export type OfficesCountOutputType = {
    office_streams: number
    offices_attendance: number
    offices_cameras: number
    offices_sentiment_analysis: number
    offices_footfall_analysis: number
  }

  export type OfficesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    office_streams?: boolean | OfficesCountOutputTypeCountOffice_streamsArgs
    offices_attendance?: boolean | OfficesCountOutputTypeCountOffices_attendanceArgs
    offices_cameras?: boolean | OfficesCountOutputTypeCountOffices_camerasArgs
    offices_sentiment_analysis?: boolean | OfficesCountOutputTypeCountOffices_sentiment_analysisArgs
    offices_footfall_analysis?: boolean | OfficesCountOutputTypeCountOffices_footfall_analysisArgs
  }

  // Custom InputTypes
  /**
   * OfficesCountOutputType without action
   */
  export type OfficesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OfficesCountOutputType
     */
    select?: OfficesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OfficesCountOutputType without action
   */
  export type OfficesCountOutputTypeCountOffice_streamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: office_streamsWhereInput
  }

  /**
   * OfficesCountOutputType without action
   */
  export type OfficesCountOutputTypeCountOffices_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_attendanceWhereInput
  }

  /**
   * OfficesCountOutputType without action
   */
  export type OfficesCountOutputTypeCountOffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_camerasWhereInput
  }

  /**
   * OfficesCountOutputType without action
   */
  export type OfficesCountOutputTypeCountOffices_sentiment_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_sentiment_analysisWhereInput
  }

  /**
   * OfficesCountOutputType without action
   */
  export type OfficesCountOutputTypeCountOffices_footfall_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_footfall_analysisWhereInput
  }


  /**
   * Count Type Offices_camerasCountOutputType
   */

  export type Offices_camerasCountOutputType = {
    live_stream_favourites: number
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras: number
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras: number
  }

  export type Offices_camerasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    live_stream_favourites?: boolean | Offices_camerasCountOutputTypeCountLive_stream_favouritesArgs
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: boolean | Offices_camerasCountOutputTypeCountOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: boolean | Offices_camerasCountOutputTypeCountOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs
  }

  // Custom InputTypes
  /**
   * Offices_camerasCountOutputType without action
   */
  export type Offices_camerasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Offices_camerasCountOutputType
     */
    select?: Offices_camerasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Offices_camerasCountOutputType without action
   */
  export type Offices_camerasCountOutputTypeCountLive_stream_favouritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: live_stream_favouritesWhereInput
  }

  /**
   * Offices_camerasCountOutputType without action
   */
  export type Offices_camerasCountOutputTypeCountOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_sentiment_analysisWhereInput
  }

  /**
   * Offices_camerasCountOutputType without action
   */
  export type Offices_camerasCountOutputTypeCountOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_sentiment_analysisWhereInput
  }


  /**
   * Count Type Park_camerasCountOutputType
   */

  export type Park_camerasCountOutputType = {
    live_stream_favourites: number
    parks_behaviour_alerts: number
    parks_intrusion_detection: number
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras: number
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras: number
    parks_smoking_detection: number
    parks_landscaping: number
    parks_litter_detection: number
  }

  export type Park_camerasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    live_stream_favourites?: boolean | Park_camerasCountOutputTypeCountLive_stream_favouritesArgs
    parks_behaviour_alerts?: boolean | Park_camerasCountOutputTypeCountParks_behaviour_alertsArgs
    parks_intrusion_detection?: boolean | Park_camerasCountOutputTypeCountParks_intrusion_detectionArgs
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: boolean | Park_camerasCountOutputTypeCountParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: boolean | Park_camerasCountOutputTypeCountParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs
    parks_smoking_detection?: boolean | Park_camerasCountOutputTypeCountParks_smoking_detectionArgs
    parks_landscaping?: boolean | Park_camerasCountOutputTypeCountParks_landscapingArgs
    parks_litter_detection?: boolean | Park_camerasCountOutputTypeCountParks_litter_detectionArgs
  }

  // Custom InputTypes
  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Park_camerasCountOutputType
     */
    select?: Park_camerasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountLive_stream_favouritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: live_stream_favouritesWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_behaviour_alertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_behaviour_alertsWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_intrusion_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_intrusion_detectionWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_sentiment_analysisWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_sentiment_analysisWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_smoking_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_smoking_detectionWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_landscapingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_landscapingWhereInput
  }

  /**
   * Park_camerasCountOutputType without action
   */
  export type Park_camerasCountOutputTypeCountParks_litter_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_litter_detectionWhereInput
  }


  /**
   * Count Type Park_zonesCountOutputType
   */

  export type Park_zonesCountOutputType = {
    parks_irrigation_job_history: number
  }

  export type Park_zonesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks_irrigation_job_history?: boolean | Park_zonesCountOutputTypeCountParks_irrigation_job_historyArgs
  }

  // Custom InputTypes
  /**
   * Park_zonesCountOutputType without action
   */
  export type Park_zonesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Park_zonesCountOutputType
     */
    select?: Park_zonesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Park_zonesCountOutputType without action
   */
  export type Park_zonesCountOutputTypeCountParks_irrigation_job_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_irrigation_job_historyWhereInput
  }


  /**
   * Count Type ParksCountOutputType
   */

  export type ParksCountOutputType = {
    park_cameras: number
    park_streams: number
    park_zones: number
    parks_attendance: number
    parks_behaviour_alerts: number
    parks_intrusion_detection: number
    parks_irrigation_job_history: number
    parks_landscaping: number
    parks_litter_detection: number
    parks_sentiment_analysis: number
    parks_smoking_detection: number
    parks_footfall_analysis: number
  }

  export type ParksCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    park_cameras?: boolean | ParksCountOutputTypeCountPark_camerasArgs
    park_streams?: boolean | ParksCountOutputTypeCountPark_streamsArgs
    park_zones?: boolean | ParksCountOutputTypeCountPark_zonesArgs
    parks_attendance?: boolean | ParksCountOutputTypeCountParks_attendanceArgs
    parks_behaviour_alerts?: boolean | ParksCountOutputTypeCountParks_behaviour_alertsArgs
    parks_intrusion_detection?: boolean | ParksCountOutputTypeCountParks_intrusion_detectionArgs
    parks_irrigation_job_history?: boolean | ParksCountOutputTypeCountParks_irrigation_job_historyArgs
    parks_landscaping?: boolean | ParksCountOutputTypeCountParks_landscapingArgs
    parks_litter_detection?: boolean | ParksCountOutputTypeCountParks_litter_detectionArgs
    parks_sentiment_analysis?: boolean | ParksCountOutputTypeCountParks_sentiment_analysisArgs
    parks_smoking_detection?: boolean | ParksCountOutputTypeCountParks_smoking_detectionArgs
    parks_footfall_analysis?: boolean | ParksCountOutputTypeCountParks_footfall_analysisArgs
  }

  // Custom InputTypes
  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParksCountOutputType
     */
    select?: ParksCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountPark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: park_camerasWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountPark_streamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: park_streamsWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountPark_zonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: park_zonesWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_attendanceWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_behaviour_alertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_behaviour_alertsWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_intrusion_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_intrusion_detectionWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_irrigation_job_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_irrigation_job_historyWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_landscapingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_landscapingWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_litter_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_litter_detectionWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_sentiment_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_sentiment_analysisWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_smoking_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_smoking_detectionWhereInput
  }

  /**
   * ParksCountOutputType without action
   */
  export type ParksCountOutputTypeCountParks_footfall_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_footfall_analysisWhereInput
  }


  /**
   * Count Type Parks_intrusion_detectionCountOutputType
   */

  export type Parks_intrusion_detectionCountOutputType = {
    intranet_posting_history: number
  }

  export type Parks_intrusion_detectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    intranet_posting_history?: boolean | Parks_intrusion_detectionCountOutputTypeCountIntranet_posting_historyArgs
  }

  // Custom InputTypes
  /**
   * Parks_intrusion_detectionCountOutputType without action
   */
  export type Parks_intrusion_detectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Parks_intrusion_detectionCountOutputType
     */
    select?: Parks_intrusion_detectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Parks_intrusion_detectionCountOutputType without action
   */
  export type Parks_intrusion_detectionCountOutputTypeCountIntranet_posting_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: intranet_posting_historyWhereInput
  }


  /**
   * Count Type Parks_landscapingCountOutputType
   */

  export type Parks_landscapingCountOutputType = {
    ticket_details: number
  }

  export type Parks_landscapingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket_details?: boolean | Parks_landscapingCountOutputTypeCountTicket_detailsArgs
  }

  // Custom InputTypes
  /**
   * Parks_landscapingCountOutputType without action
   */
  export type Parks_landscapingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Parks_landscapingCountOutputType
     */
    select?: Parks_landscapingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Parks_landscapingCountOutputType without action
   */
  export type Parks_landscapingCountOutputTypeCountTicket_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticket_details_tableWhereInput
  }


  /**
   * Count Type Parks_litter_detectionCountOutputType
   */

  export type Parks_litter_detectionCountOutputType = {
    ticket_details: number
  }

  export type Parks_litter_detectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket_details?: boolean | Parks_litter_detectionCountOutputTypeCountTicket_detailsArgs
  }

  // Custom InputTypes
  /**
   * Parks_litter_detectionCountOutputType without action
   */
  export type Parks_litter_detectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Parks_litter_detectionCountOutputType
     */
    select?: Parks_litter_detectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Parks_litter_detectionCountOutputType without action
   */
  export type Parks_litter_detectionCountOutputTypeCountTicket_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticket_details_tableWhereInput
  }


  /**
   * Count Type Parks_smoking_detectionCountOutputType
   */

  export type Parks_smoking_detectionCountOutputType = {
    intranet_posting_history: number
  }

  export type Parks_smoking_detectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    intranet_posting_history?: boolean | Parks_smoking_detectionCountOutputTypeCountIntranet_posting_historyArgs
  }

  // Custom InputTypes
  /**
   * Parks_smoking_detectionCountOutputType without action
   */
  export type Parks_smoking_detectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Parks_smoking_detectionCountOutputType
     */
    select?: Parks_smoking_detectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Parks_smoking_detectionCountOutputType without action
   */
  export type Parks_smoking_detectionCountOutputTypeCountIntranet_posting_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: intranet_posting_historyWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    live_stream_favourites: number
    parks_attendance: number
    offices_attendance: number
    offices_footfall_analysis: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    live_stream_favourites?: boolean | UsersCountOutputTypeCountLive_stream_favouritesArgs
    parks_attendance?: boolean | UsersCountOutputTypeCountParks_attendanceArgs
    offices_attendance?: boolean | UsersCountOutputTypeCountOffices_attendanceArgs
    offices_footfall_analysis?: boolean | UsersCountOutputTypeCountOffices_footfall_analysisArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountLive_stream_favouritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: live_stream_favouritesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountParks_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_attendanceWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOffices_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_attendanceWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOffices_footfall_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_footfall_analysisWhereInput
  }


  /**
   * Count Type Users_rolesCountOutputType
   */

  export type Users_rolesCountOutputType = {
    users: number
    users_permissions: number
  }

  export type Users_rolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Users_rolesCountOutputTypeCountUsersArgs
    users_permissions?: boolean | Users_rolesCountOutputTypeCountUsers_permissionsArgs
  }

  // Custom InputTypes
  /**
   * Users_rolesCountOutputType without action
   */
  export type Users_rolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_rolesCountOutputType
     */
    select?: Users_rolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Users_rolesCountOutputType without action
   */
  export type Users_rolesCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }

  /**
   * Users_rolesCountOutputType without action
   */
  export type Users_rolesCountOutputTypeCountUsers_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: users_permissionsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model access_secret
   */

  export type AggregateAccess_secret = {
    _count: Access_secretCountAggregateOutputType | null
    _avg: Access_secretAvgAggregateOutputType | null
    _sum: Access_secretSumAggregateOutputType | null
    _min: Access_secretMinAggregateOutputType | null
    _max: Access_secretMaxAggregateOutputType | null
  }

  export type Access_secretAvgAggregateOutputType = {
    Id: number | null
  }

  export type Access_secretSumAggregateOutputType = {
    Id: number | null
  }

  export type Access_secretMinAggregateOutputType = {
    Id: number | null
    value: string | null
  }

  export type Access_secretMaxAggregateOutputType = {
    Id: number | null
    value: string | null
  }

  export type Access_secretCountAggregateOutputType = {
    Id: number
    value: number
    _all: number
  }


  export type Access_secretAvgAggregateInputType = {
    Id?: true
  }

  export type Access_secretSumAggregateInputType = {
    Id?: true
  }

  export type Access_secretMinAggregateInputType = {
    Id?: true
    value?: true
  }

  export type Access_secretMaxAggregateInputType = {
    Id?: true
    value?: true
  }

  export type Access_secretCountAggregateInputType = {
    Id?: true
    value?: true
    _all?: true
  }

  export type Access_secretAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which access_secret to aggregate.
     */
    where?: access_secretWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of access_secrets to fetch.
     */
    orderBy?: access_secretOrderByWithRelationInput | access_secretOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: access_secretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` access_secrets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` access_secrets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned access_secrets
    **/
    _count?: true | Access_secretCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Access_secretAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Access_secretSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Access_secretMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Access_secretMaxAggregateInputType
  }

  export type GetAccess_secretAggregateType<T extends Access_secretAggregateArgs> = {
        [P in keyof T & keyof AggregateAccess_secret]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccess_secret[P]>
      : GetScalarType<T[P], AggregateAccess_secret[P]>
  }




  export type access_secretGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: access_secretWhereInput
    orderBy?: access_secretOrderByWithAggregationInput | access_secretOrderByWithAggregationInput[]
    by: Access_secretScalarFieldEnum[] | Access_secretScalarFieldEnum
    having?: access_secretScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Access_secretCountAggregateInputType | true
    _avg?: Access_secretAvgAggregateInputType
    _sum?: Access_secretSumAggregateInputType
    _min?: Access_secretMinAggregateInputType
    _max?: Access_secretMaxAggregateInputType
  }

  export type Access_secretGroupByOutputType = {
    Id: number
    value: string | null
    _count: Access_secretCountAggregateOutputType | null
    _avg: Access_secretAvgAggregateOutputType | null
    _sum: Access_secretSumAggregateOutputType | null
    _min: Access_secretMinAggregateOutputType | null
    _max: Access_secretMaxAggregateOutputType | null
  }

  type GetAccess_secretGroupByPayload<T extends access_secretGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Access_secretGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Access_secretGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Access_secretGroupByOutputType[P]>
            : GetScalarType<T[P], Access_secretGroupByOutputType[P]>
        }
      >
    >


  export type access_secretSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    value?: boolean
  }, ExtArgs["result"]["access_secret"]>



  export type access_secretSelectScalar = {
    Id?: boolean
    value?: boolean
  }

  export type access_secretOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "value", ExtArgs["result"]["access_secret"]>

  export type $access_secretPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "access_secret"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      value: string | null
    }, ExtArgs["result"]["access_secret"]>
    composites: {}
  }

  type access_secretGetPayload<S extends boolean | null | undefined | access_secretDefaultArgs> = $Result.GetResult<Prisma.$access_secretPayload, S>

  type access_secretCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<access_secretFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Access_secretCountAggregateInputType | true
    }

  export interface access_secretDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['access_secret'], meta: { name: 'access_secret' } }
    /**
     * Find zero or one Access_secret that matches the filter.
     * @param {access_secretFindUniqueArgs} args - Arguments to find a Access_secret
     * @example
     * // Get one Access_secret
     * const access_secret = await prisma.access_secret.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends access_secretFindUniqueArgs>(args: SelectSubset<T, access_secretFindUniqueArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Access_secret that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {access_secretFindUniqueOrThrowArgs} args - Arguments to find a Access_secret
     * @example
     * // Get one Access_secret
     * const access_secret = await prisma.access_secret.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends access_secretFindUniqueOrThrowArgs>(args: SelectSubset<T, access_secretFindUniqueOrThrowArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Access_secret that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {access_secretFindFirstArgs} args - Arguments to find a Access_secret
     * @example
     * // Get one Access_secret
     * const access_secret = await prisma.access_secret.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends access_secretFindFirstArgs>(args?: SelectSubset<T, access_secretFindFirstArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Access_secret that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {access_secretFindFirstOrThrowArgs} args - Arguments to find a Access_secret
     * @example
     * // Get one Access_secret
     * const access_secret = await prisma.access_secret.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends access_secretFindFirstOrThrowArgs>(args?: SelectSubset<T, access_secretFindFirstOrThrowArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Access_secrets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {access_secretFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Access_secrets
     * const access_secrets = await prisma.access_secret.findMany()
     * 
     * // Get first 10 Access_secrets
     * const access_secrets = await prisma.access_secret.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const access_secretWithIdOnly = await prisma.access_secret.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends access_secretFindManyArgs>(args?: SelectSubset<T, access_secretFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Access_secret.
     * @param {access_secretCreateArgs} args - Arguments to create a Access_secret.
     * @example
     * // Create one Access_secret
     * const Access_secret = await prisma.access_secret.create({
     *   data: {
     *     // ... data to create a Access_secret
     *   }
     * })
     * 
     */
    create<T extends access_secretCreateArgs>(args: SelectSubset<T, access_secretCreateArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Access_secrets.
     * @param {access_secretCreateManyArgs} args - Arguments to create many Access_secrets.
     * @example
     * // Create many Access_secrets
     * const access_secret = await prisma.access_secret.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends access_secretCreateManyArgs>(args?: SelectSubset<T, access_secretCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Access_secret.
     * @param {access_secretDeleteArgs} args - Arguments to delete one Access_secret.
     * @example
     * // Delete one Access_secret
     * const Access_secret = await prisma.access_secret.delete({
     *   where: {
     *     // ... filter to delete one Access_secret
     *   }
     * })
     * 
     */
    delete<T extends access_secretDeleteArgs>(args: SelectSubset<T, access_secretDeleteArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Access_secret.
     * @param {access_secretUpdateArgs} args - Arguments to update one Access_secret.
     * @example
     * // Update one Access_secret
     * const access_secret = await prisma.access_secret.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends access_secretUpdateArgs>(args: SelectSubset<T, access_secretUpdateArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Access_secrets.
     * @param {access_secretDeleteManyArgs} args - Arguments to filter Access_secrets to delete.
     * @example
     * // Delete a few Access_secrets
     * const { count } = await prisma.access_secret.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends access_secretDeleteManyArgs>(args?: SelectSubset<T, access_secretDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Access_secrets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {access_secretUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Access_secrets
     * const access_secret = await prisma.access_secret.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends access_secretUpdateManyArgs>(args: SelectSubset<T, access_secretUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Access_secret.
     * @param {access_secretUpsertArgs} args - Arguments to update or create a Access_secret.
     * @example
     * // Update or create a Access_secret
     * const access_secret = await prisma.access_secret.upsert({
     *   create: {
     *     // ... data to create a Access_secret
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Access_secret we want to update
     *   }
     * })
     */
    upsert<T extends access_secretUpsertArgs>(args: SelectSubset<T, access_secretUpsertArgs<ExtArgs>>): Prisma__access_secretClient<$Result.GetResult<Prisma.$access_secretPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Access_secrets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {access_secretCountArgs} args - Arguments to filter Access_secrets to count.
     * @example
     * // Count the number of Access_secrets
     * const count = await prisma.access_secret.count({
     *   where: {
     *     // ... the filter for the Access_secrets we want to count
     *   }
     * })
    **/
    count<T extends access_secretCountArgs>(
      args?: Subset<T, access_secretCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Access_secretCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Access_secret.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Access_secretAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Access_secretAggregateArgs>(args: Subset<T, Access_secretAggregateArgs>): Prisma.PrismaPromise<GetAccess_secretAggregateType<T>>

    /**
     * Group by Access_secret.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {access_secretGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends access_secretGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: access_secretGroupByArgs['orderBy'] }
        : { orderBy?: access_secretGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, access_secretGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccess_secretGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the access_secret model
   */
  readonly fields: access_secretFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for access_secret.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__access_secretClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the access_secret model
   */
  interface access_secretFieldRefs {
    readonly Id: FieldRef<"access_secret", 'Int'>
    readonly value: FieldRef<"access_secret", 'String'>
  }
    

  // Custom InputTypes
  /**
   * access_secret findUnique
   */
  export type access_secretFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * Filter, which access_secret to fetch.
     */
    where: access_secretWhereUniqueInput
  }

  /**
   * access_secret findUniqueOrThrow
   */
  export type access_secretFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * Filter, which access_secret to fetch.
     */
    where: access_secretWhereUniqueInput
  }

  /**
   * access_secret findFirst
   */
  export type access_secretFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * Filter, which access_secret to fetch.
     */
    where?: access_secretWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of access_secrets to fetch.
     */
    orderBy?: access_secretOrderByWithRelationInput | access_secretOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for access_secrets.
     */
    cursor?: access_secretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` access_secrets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` access_secrets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of access_secrets.
     */
    distinct?: Access_secretScalarFieldEnum | Access_secretScalarFieldEnum[]
  }

  /**
   * access_secret findFirstOrThrow
   */
  export type access_secretFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * Filter, which access_secret to fetch.
     */
    where?: access_secretWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of access_secrets to fetch.
     */
    orderBy?: access_secretOrderByWithRelationInput | access_secretOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for access_secrets.
     */
    cursor?: access_secretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` access_secrets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` access_secrets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of access_secrets.
     */
    distinct?: Access_secretScalarFieldEnum | Access_secretScalarFieldEnum[]
  }

  /**
   * access_secret findMany
   */
  export type access_secretFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * Filter, which access_secrets to fetch.
     */
    where?: access_secretWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of access_secrets to fetch.
     */
    orderBy?: access_secretOrderByWithRelationInput | access_secretOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing access_secrets.
     */
    cursor?: access_secretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` access_secrets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` access_secrets.
     */
    skip?: number
    distinct?: Access_secretScalarFieldEnum | Access_secretScalarFieldEnum[]
  }

  /**
   * access_secret create
   */
  export type access_secretCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * The data needed to create a access_secret.
     */
    data?: XOR<access_secretCreateInput, access_secretUncheckedCreateInput>
  }

  /**
   * access_secret createMany
   */
  export type access_secretCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many access_secrets.
     */
    data: access_secretCreateManyInput | access_secretCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * access_secret update
   */
  export type access_secretUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * The data needed to update a access_secret.
     */
    data: XOR<access_secretUpdateInput, access_secretUncheckedUpdateInput>
    /**
     * Choose, which access_secret to update.
     */
    where: access_secretWhereUniqueInput
  }

  /**
   * access_secret updateMany
   */
  export type access_secretUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update access_secrets.
     */
    data: XOR<access_secretUpdateManyMutationInput, access_secretUncheckedUpdateManyInput>
    /**
     * Filter which access_secrets to update
     */
    where?: access_secretWhereInput
    /**
     * Limit how many access_secrets to update.
     */
    limit?: number
  }

  /**
   * access_secret upsert
   */
  export type access_secretUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * The filter to search for the access_secret to update in case it exists.
     */
    where: access_secretWhereUniqueInput
    /**
     * In case the access_secret found by the `where` argument doesn't exist, create a new access_secret with this data.
     */
    create: XOR<access_secretCreateInput, access_secretUncheckedCreateInput>
    /**
     * In case the access_secret was found with the provided `where` argument, update it with this data.
     */
    update: XOR<access_secretUpdateInput, access_secretUncheckedUpdateInput>
  }

  /**
   * access_secret delete
   */
  export type access_secretDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
    /**
     * Filter which access_secret to delete.
     */
    where: access_secretWhereUniqueInput
  }

  /**
   * access_secret deleteMany
   */
  export type access_secretDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which access_secrets to delete
     */
    where?: access_secretWhereInput
    /**
     * Limit how many access_secrets to delete.
     */
    limit?: number
  }

  /**
   * access_secret without action
   */
  export type access_secretDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the access_secret
     */
    select?: access_secretSelect<ExtArgs> | null
    /**
     * Omit specific fields from the access_secret
     */
    omit?: access_secretOmit<ExtArgs> | null
  }


  /**
   * Model live_stream_favourites
   */

  export type AggregateLive_stream_favourites = {
    _count: Live_stream_favouritesCountAggregateOutputType | null
    _avg: Live_stream_favouritesAvgAggregateOutputType | null
    _sum: Live_stream_favouritesSumAggregateOutputType | null
    _min: Live_stream_favouritesMinAggregateOutputType | null
    _max: Live_stream_favouritesMaxAggregateOutputType | null
  }

  export type Live_stream_favouritesAvgAggregateOutputType = {
    Id: number | null
    emp_Id: number | null
    park_camera_Id: number | null
    office_camera_Id: number | null
  }

  export type Live_stream_favouritesSumAggregateOutputType = {
    Id: number | null
    emp_Id: number | null
    park_camera_Id: number | null
    office_camera_Id: number | null
  }

  export type Live_stream_favouritesMinAggregateOutputType = {
    Id: number | null
    emp_Id: number | null
    park_camera_Id: number | null
    office_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Live_stream_favouritesMaxAggregateOutputType = {
    Id: number | null
    emp_Id: number | null
    park_camera_Id: number | null
    office_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Live_stream_favouritesCountAggregateOutputType = {
    Id: number
    emp_Id: number
    park_camera_Id: number
    office_camera_Id: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Live_stream_favouritesAvgAggregateInputType = {
    Id?: true
    emp_Id?: true
    park_camera_Id?: true
    office_camera_Id?: true
  }

  export type Live_stream_favouritesSumAggregateInputType = {
    Id?: true
    emp_Id?: true
    park_camera_Id?: true
    office_camera_Id?: true
  }

  export type Live_stream_favouritesMinAggregateInputType = {
    Id?: true
    emp_Id?: true
    park_camera_Id?: true
    office_camera_Id?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Live_stream_favouritesMaxAggregateInputType = {
    Id?: true
    emp_Id?: true
    park_camera_Id?: true
    office_camera_Id?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Live_stream_favouritesCountAggregateInputType = {
    Id?: true
    emp_Id?: true
    park_camera_Id?: true
    office_camera_Id?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Live_stream_favouritesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which live_stream_favourites to aggregate.
     */
    where?: live_stream_favouritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of live_stream_favourites to fetch.
     */
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: live_stream_favouritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` live_stream_favourites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` live_stream_favourites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned live_stream_favourites
    **/
    _count?: true | Live_stream_favouritesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Live_stream_favouritesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Live_stream_favouritesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Live_stream_favouritesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Live_stream_favouritesMaxAggregateInputType
  }

  export type GetLive_stream_favouritesAggregateType<T extends Live_stream_favouritesAggregateArgs> = {
        [P in keyof T & keyof AggregateLive_stream_favourites]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLive_stream_favourites[P]>
      : GetScalarType<T[P], AggregateLive_stream_favourites[P]>
  }




  export type live_stream_favouritesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: live_stream_favouritesWhereInput
    orderBy?: live_stream_favouritesOrderByWithAggregationInput | live_stream_favouritesOrderByWithAggregationInput[]
    by: Live_stream_favouritesScalarFieldEnum[] | Live_stream_favouritesScalarFieldEnum
    having?: live_stream_favouritesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Live_stream_favouritesCountAggregateInputType | true
    _avg?: Live_stream_favouritesAvgAggregateInputType
    _sum?: Live_stream_favouritesSumAggregateInputType
    _min?: Live_stream_favouritesMinAggregateInputType
    _max?: Live_stream_favouritesMaxAggregateInputType
  }

  export type Live_stream_favouritesGroupByOutputType = {
    Id: number
    emp_Id: number | null
    park_camera_Id: number | null
    office_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date
    _count: Live_stream_favouritesCountAggregateOutputType | null
    _avg: Live_stream_favouritesAvgAggregateOutputType | null
    _sum: Live_stream_favouritesSumAggregateOutputType | null
    _min: Live_stream_favouritesMinAggregateOutputType | null
    _max: Live_stream_favouritesMaxAggregateOutputType | null
  }

  type GetLive_stream_favouritesGroupByPayload<T extends live_stream_favouritesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Live_stream_favouritesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Live_stream_favouritesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Live_stream_favouritesGroupByOutputType[P]>
            : GetScalarType<T[P], Live_stream_favouritesGroupByOutputType[P]>
        }
      >
    >


  export type live_stream_favouritesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    emp_Id?: boolean
    park_camera_Id?: boolean
    office_camera_Id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | live_stream_favourites$usersArgs<ExtArgs>
    park_cameras?: boolean | live_stream_favourites$park_camerasArgs<ExtArgs>
    offices_cameras?: boolean | live_stream_favourites$offices_camerasArgs<ExtArgs>
  }, ExtArgs["result"]["live_stream_favourites"]>



  export type live_stream_favouritesSelectScalar = {
    Id?: boolean
    emp_Id?: boolean
    park_camera_Id?: boolean
    office_camera_Id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type live_stream_favouritesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "emp_Id" | "park_camera_Id" | "office_camera_Id" | "createdAt" | "updatedAt", ExtArgs["result"]["live_stream_favourites"]>
  export type live_stream_favouritesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | live_stream_favourites$usersArgs<ExtArgs>
    park_cameras?: boolean | live_stream_favourites$park_camerasArgs<ExtArgs>
    offices_cameras?: boolean | live_stream_favourites$offices_camerasArgs<ExtArgs>
  }

  export type $live_stream_favouritesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "live_stream_favourites"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      park_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
      offices_cameras: Prisma.$offices_camerasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      emp_Id: number | null
      park_camera_Id: number | null
      office_camera_Id: number | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["live_stream_favourites"]>
    composites: {}
  }

  type live_stream_favouritesGetPayload<S extends boolean | null | undefined | live_stream_favouritesDefaultArgs> = $Result.GetResult<Prisma.$live_stream_favouritesPayload, S>

  type live_stream_favouritesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<live_stream_favouritesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Live_stream_favouritesCountAggregateInputType | true
    }

  export interface live_stream_favouritesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['live_stream_favourites'], meta: { name: 'live_stream_favourites' } }
    /**
     * Find zero or one Live_stream_favourites that matches the filter.
     * @param {live_stream_favouritesFindUniqueArgs} args - Arguments to find a Live_stream_favourites
     * @example
     * // Get one Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends live_stream_favouritesFindUniqueArgs>(args: SelectSubset<T, live_stream_favouritesFindUniqueArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Live_stream_favourites that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {live_stream_favouritesFindUniqueOrThrowArgs} args - Arguments to find a Live_stream_favourites
     * @example
     * // Get one Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends live_stream_favouritesFindUniqueOrThrowArgs>(args: SelectSubset<T, live_stream_favouritesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Live_stream_favourites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {live_stream_favouritesFindFirstArgs} args - Arguments to find a Live_stream_favourites
     * @example
     * // Get one Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends live_stream_favouritesFindFirstArgs>(args?: SelectSubset<T, live_stream_favouritesFindFirstArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Live_stream_favourites that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {live_stream_favouritesFindFirstOrThrowArgs} args - Arguments to find a Live_stream_favourites
     * @example
     * // Get one Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends live_stream_favouritesFindFirstOrThrowArgs>(args?: SelectSubset<T, live_stream_favouritesFindFirstOrThrowArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Live_stream_favourites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {live_stream_favouritesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.findMany()
     * 
     * // Get first 10 Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const live_stream_favouritesWithIdOnly = await prisma.live_stream_favourites.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends live_stream_favouritesFindManyArgs>(args?: SelectSubset<T, live_stream_favouritesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Live_stream_favourites.
     * @param {live_stream_favouritesCreateArgs} args - Arguments to create a Live_stream_favourites.
     * @example
     * // Create one Live_stream_favourites
     * const Live_stream_favourites = await prisma.live_stream_favourites.create({
     *   data: {
     *     // ... data to create a Live_stream_favourites
     *   }
     * })
     * 
     */
    create<T extends live_stream_favouritesCreateArgs>(args: SelectSubset<T, live_stream_favouritesCreateArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Live_stream_favourites.
     * @param {live_stream_favouritesCreateManyArgs} args - Arguments to create many Live_stream_favourites.
     * @example
     * // Create many Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends live_stream_favouritesCreateManyArgs>(args?: SelectSubset<T, live_stream_favouritesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Live_stream_favourites.
     * @param {live_stream_favouritesDeleteArgs} args - Arguments to delete one Live_stream_favourites.
     * @example
     * // Delete one Live_stream_favourites
     * const Live_stream_favourites = await prisma.live_stream_favourites.delete({
     *   where: {
     *     // ... filter to delete one Live_stream_favourites
     *   }
     * })
     * 
     */
    delete<T extends live_stream_favouritesDeleteArgs>(args: SelectSubset<T, live_stream_favouritesDeleteArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Live_stream_favourites.
     * @param {live_stream_favouritesUpdateArgs} args - Arguments to update one Live_stream_favourites.
     * @example
     * // Update one Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends live_stream_favouritesUpdateArgs>(args: SelectSubset<T, live_stream_favouritesUpdateArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Live_stream_favourites.
     * @param {live_stream_favouritesDeleteManyArgs} args - Arguments to filter Live_stream_favourites to delete.
     * @example
     * // Delete a few Live_stream_favourites
     * const { count } = await prisma.live_stream_favourites.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends live_stream_favouritesDeleteManyArgs>(args?: SelectSubset<T, live_stream_favouritesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Live_stream_favourites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {live_stream_favouritesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends live_stream_favouritesUpdateManyArgs>(args: SelectSubset<T, live_stream_favouritesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Live_stream_favourites.
     * @param {live_stream_favouritesUpsertArgs} args - Arguments to update or create a Live_stream_favourites.
     * @example
     * // Update or create a Live_stream_favourites
     * const live_stream_favourites = await prisma.live_stream_favourites.upsert({
     *   create: {
     *     // ... data to create a Live_stream_favourites
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Live_stream_favourites we want to update
     *   }
     * })
     */
    upsert<T extends live_stream_favouritesUpsertArgs>(args: SelectSubset<T, live_stream_favouritesUpsertArgs<ExtArgs>>): Prisma__live_stream_favouritesClient<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Live_stream_favourites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {live_stream_favouritesCountArgs} args - Arguments to filter Live_stream_favourites to count.
     * @example
     * // Count the number of Live_stream_favourites
     * const count = await prisma.live_stream_favourites.count({
     *   where: {
     *     // ... the filter for the Live_stream_favourites we want to count
     *   }
     * })
    **/
    count<T extends live_stream_favouritesCountArgs>(
      args?: Subset<T, live_stream_favouritesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Live_stream_favouritesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Live_stream_favourites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Live_stream_favouritesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Live_stream_favouritesAggregateArgs>(args: Subset<T, Live_stream_favouritesAggregateArgs>): Prisma.PrismaPromise<GetLive_stream_favouritesAggregateType<T>>

    /**
     * Group by Live_stream_favourites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {live_stream_favouritesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends live_stream_favouritesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: live_stream_favouritesGroupByArgs['orderBy'] }
        : { orderBy?: live_stream_favouritesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, live_stream_favouritesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLive_stream_favouritesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the live_stream_favourites model
   */
  readonly fields: live_stream_favouritesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for live_stream_favourites.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__live_stream_favouritesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends live_stream_favourites$usersArgs<ExtArgs> = {}>(args?: Subset<T, live_stream_favourites$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras<T extends live_stream_favourites$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, live_stream_favourites$park_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    offices_cameras<T extends live_stream_favourites$offices_camerasArgs<ExtArgs> = {}>(args?: Subset<T, live_stream_favourites$offices_camerasArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the live_stream_favourites model
   */
  interface live_stream_favouritesFieldRefs {
    readonly Id: FieldRef<"live_stream_favourites", 'Int'>
    readonly emp_Id: FieldRef<"live_stream_favourites", 'Int'>
    readonly park_camera_Id: FieldRef<"live_stream_favourites", 'Int'>
    readonly office_camera_Id: FieldRef<"live_stream_favourites", 'Int'>
    readonly createdAt: FieldRef<"live_stream_favourites", 'DateTime'>
    readonly updatedAt: FieldRef<"live_stream_favourites", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * live_stream_favourites findUnique
   */
  export type live_stream_favouritesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * Filter, which live_stream_favourites to fetch.
     */
    where: live_stream_favouritesWhereUniqueInput
  }

  /**
   * live_stream_favourites findUniqueOrThrow
   */
  export type live_stream_favouritesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * Filter, which live_stream_favourites to fetch.
     */
    where: live_stream_favouritesWhereUniqueInput
  }

  /**
   * live_stream_favourites findFirst
   */
  export type live_stream_favouritesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * Filter, which live_stream_favourites to fetch.
     */
    where?: live_stream_favouritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of live_stream_favourites to fetch.
     */
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for live_stream_favourites.
     */
    cursor?: live_stream_favouritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` live_stream_favourites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` live_stream_favourites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of live_stream_favourites.
     */
    distinct?: Live_stream_favouritesScalarFieldEnum | Live_stream_favouritesScalarFieldEnum[]
  }

  /**
   * live_stream_favourites findFirstOrThrow
   */
  export type live_stream_favouritesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * Filter, which live_stream_favourites to fetch.
     */
    where?: live_stream_favouritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of live_stream_favourites to fetch.
     */
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for live_stream_favourites.
     */
    cursor?: live_stream_favouritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` live_stream_favourites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` live_stream_favourites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of live_stream_favourites.
     */
    distinct?: Live_stream_favouritesScalarFieldEnum | Live_stream_favouritesScalarFieldEnum[]
  }

  /**
   * live_stream_favourites findMany
   */
  export type live_stream_favouritesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * Filter, which live_stream_favourites to fetch.
     */
    where?: live_stream_favouritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of live_stream_favourites to fetch.
     */
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing live_stream_favourites.
     */
    cursor?: live_stream_favouritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` live_stream_favourites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` live_stream_favourites.
     */
    skip?: number
    distinct?: Live_stream_favouritesScalarFieldEnum | Live_stream_favouritesScalarFieldEnum[]
  }

  /**
   * live_stream_favourites create
   */
  export type live_stream_favouritesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * The data needed to create a live_stream_favourites.
     */
    data?: XOR<live_stream_favouritesCreateInput, live_stream_favouritesUncheckedCreateInput>
  }

  /**
   * live_stream_favourites createMany
   */
  export type live_stream_favouritesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many live_stream_favourites.
     */
    data: live_stream_favouritesCreateManyInput | live_stream_favouritesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * live_stream_favourites update
   */
  export type live_stream_favouritesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * The data needed to update a live_stream_favourites.
     */
    data: XOR<live_stream_favouritesUpdateInput, live_stream_favouritesUncheckedUpdateInput>
    /**
     * Choose, which live_stream_favourites to update.
     */
    where: live_stream_favouritesWhereUniqueInput
  }

  /**
   * live_stream_favourites updateMany
   */
  export type live_stream_favouritesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update live_stream_favourites.
     */
    data: XOR<live_stream_favouritesUpdateManyMutationInput, live_stream_favouritesUncheckedUpdateManyInput>
    /**
     * Filter which live_stream_favourites to update
     */
    where?: live_stream_favouritesWhereInput
    /**
     * Limit how many live_stream_favourites to update.
     */
    limit?: number
  }

  /**
   * live_stream_favourites upsert
   */
  export type live_stream_favouritesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * The filter to search for the live_stream_favourites to update in case it exists.
     */
    where: live_stream_favouritesWhereUniqueInput
    /**
     * In case the live_stream_favourites found by the `where` argument doesn't exist, create a new live_stream_favourites with this data.
     */
    create: XOR<live_stream_favouritesCreateInput, live_stream_favouritesUncheckedCreateInput>
    /**
     * In case the live_stream_favourites was found with the provided `where` argument, update it with this data.
     */
    update: XOR<live_stream_favouritesUpdateInput, live_stream_favouritesUncheckedUpdateInput>
  }

  /**
   * live_stream_favourites delete
   */
  export type live_stream_favouritesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    /**
     * Filter which live_stream_favourites to delete.
     */
    where: live_stream_favouritesWhereUniqueInput
  }

  /**
   * live_stream_favourites deleteMany
   */
  export type live_stream_favouritesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which live_stream_favourites to delete
     */
    where?: live_stream_favouritesWhereInput
    /**
     * Limit how many live_stream_favourites to delete.
     */
    limit?: number
  }

  /**
   * live_stream_favourites.users
   */
  export type live_stream_favourites$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * live_stream_favourites.park_cameras
   */
  export type live_stream_favourites$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * live_stream_favourites.offices_cameras
   */
  export type live_stream_favourites$offices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    where?: offices_camerasWhereInput
  }

  /**
   * live_stream_favourites without action
   */
  export type live_stream_favouritesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
  }


  /**
   * Model office_streams
   */

  export type AggregateOffice_streams = {
    _count: Office_streamsCountAggregateOutputType | null
    _avg: Office_streamsAvgAggregateOutputType | null
    _sum: Office_streamsSumAggregateOutputType | null
    _min: Office_streamsMinAggregateOutputType | null
    _max: Office_streamsMaxAggregateOutputType | null
  }

  export type Office_streamsAvgAggregateOutputType = {
    Id: number | null
    office_Id: number | null
  }

  export type Office_streamsSumAggregateOutputType = {
    Id: number | null
    office_Id: number | null
  }

  export type Office_streamsMinAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Office_streamsMaxAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Office_streamsCountAggregateOutputType = {
    Id: number
    office_Id: number
    stream_url: number
    stream_api_key: number
    stream_path: number
    password: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Office_streamsAvgAggregateInputType = {
    Id?: true
    office_Id?: true
  }

  export type Office_streamsSumAggregateInputType = {
    Id?: true
    office_Id?: true
  }

  export type Office_streamsMinAggregateInputType = {
    Id?: true
    office_Id?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Office_streamsMaxAggregateInputType = {
    Id?: true
    office_Id?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Office_streamsCountAggregateInputType = {
    Id?: true
    office_Id?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Office_streamsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which office_streams to aggregate.
     */
    where?: office_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of office_streams to fetch.
     */
    orderBy?: office_streamsOrderByWithRelationInput | office_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: office_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` office_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` office_streams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned office_streams
    **/
    _count?: true | Office_streamsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Office_streamsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Office_streamsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Office_streamsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Office_streamsMaxAggregateInputType
  }

  export type GetOffice_streamsAggregateType<T extends Office_streamsAggregateArgs> = {
        [P in keyof T & keyof AggregateOffice_streams]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffice_streams[P]>
      : GetScalarType<T[P], AggregateOffice_streams[P]>
  }




  export type office_streamsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: office_streamsWhereInput
    orderBy?: office_streamsOrderByWithAggregationInput | office_streamsOrderByWithAggregationInput[]
    by: Office_streamsScalarFieldEnum[] | Office_streamsScalarFieldEnum
    having?: office_streamsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Office_streamsCountAggregateInputType | true
    _avg?: Office_streamsAvgAggregateInputType
    _sum?: Office_streamsSumAggregateInputType
    _min?: Office_streamsMinAggregateInputType
    _max?: Office_streamsMaxAggregateInputType
  }

  export type Office_streamsGroupByOutputType = {
    Id: number
    office_Id: number | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Office_streamsCountAggregateOutputType | null
    _avg: Office_streamsAvgAggregateOutputType | null
    _sum: Office_streamsSumAggregateOutputType | null
    _min: Office_streamsMinAggregateOutputType | null
    _max: Office_streamsMaxAggregateOutputType | null
  }

  type GetOffice_streamsGroupByPayload<T extends office_streamsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Office_streamsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Office_streamsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Office_streamsGroupByOutputType[P]>
            : GetScalarType<T[P], Office_streamsGroupByOutputType[P]>
        }
      >
    >


  export type office_streamsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    office_Id?: boolean
    stream_url?: boolean
    stream_api_key?: boolean
    stream_path?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    offices?: boolean | office_streams$officesArgs<ExtArgs>
  }, ExtArgs["result"]["office_streams"]>



  export type office_streamsSelectScalar = {
    Id?: boolean
    office_Id?: boolean
    stream_url?: boolean
    stream_api_key?: boolean
    stream_path?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type office_streamsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "office_Id" | "stream_url" | "stream_api_key" | "stream_path" | "password" | "createdAt" | "updatedAt", ExtArgs["result"]["office_streams"]>
  export type office_streamsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offices?: boolean | office_streams$officesArgs<ExtArgs>
  }

  export type $office_streamsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "office_streams"
    objects: {
      offices: Prisma.$officesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      office_Id: number | null
      stream_url: string | null
      stream_api_key: string | null
      stream_path: string | null
      password: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["office_streams"]>
    composites: {}
  }

  type office_streamsGetPayload<S extends boolean | null | undefined | office_streamsDefaultArgs> = $Result.GetResult<Prisma.$office_streamsPayload, S>

  type office_streamsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<office_streamsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Office_streamsCountAggregateInputType | true
    }

  export interface office_streamsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['office_streams'], meta: { name: 'office_streams' } }
    /**
     * Find zero or one Office_streams that matches the filter.
     * @param {office_streamsFindUniqueArgs} args - Arguments to find a Office_streams
     * @example
     * // Get one Office_streams
     * const office_streams = await prisma.office_streams.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends office_streamsFindUniqueArgs>(args: SelectSubset<T, office_streamsFindUniqueArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Office_streams that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {office_streamsFindUniqueOrThrowArgs} args - Arguments to find a Office_streams
     * @example
     * // Get one Office_streams
     * const office_streams = await prisma.office_streams.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends office_streamsFindUniqueOrThrowArgs>(args: SelectSubset<T, office_streamsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Office_streams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {office_streamsFindFirstArgs} args - Arguments to find a Office_streams
     * @example
     * // Get one Office_streams
     * const office_streams = await prisma.office_streams.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends office_streamsFindFirstArgs>(args?: SelectSubset<T, office_streamsFindFirstArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Office_streams that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {office_streamsFindFirstOrThrowArgs} args - Arguments to find a Office_streams
     * @example
     * // Get one Office_streams
     * const office_streams = await prisma.office_streams.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends office_streamsFindFirstOrThrowArgs>(args?: SelectSubset<T, office_streamsFindFirstOrThrowArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Office_streams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {office_streamsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Office_streams
     * const office_streams = await prisma.office_streams.findMany()
     * 
     * // Get first 10 Office_streams
     * const office_streams = await prisma.office_streams.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const office_streamsWithIdOnly = await prisma.office_streams.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends office_streamsFindManyArgs>(args?: SelectSubset<T, office_streamsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Office_streams.
     * @param {office_streamsCreateArgs} args - Arguments to create a Office_streams.
     * @example
     * // Create one Office_streams
     * const Office_streams = await prisma.office_streams.create({
     *   data: {
     *     // ... data to create a Office_streams
     *   }
     * })
     * 
     */
    create<T extends office_streamsCreateArgs>(args: SelectSubset<T, office_streamsCreateArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Office_streams.
     * @param {office_streamsCreateManyArgs} args - Arguments to create many Office_streams.
     * @example
     * // Create many Office_streams
     * const office_streams = await prisma.office_streams.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends office_streamsCreateManyArgs>(args?: SelectSubset<T, office_streamsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Office_streams.
     * @param {office_streamsDeleteArgs} args - Arguments to delete one Office_streams.
     * @example
     * // Delete one Office_streams
     * const Office_streams = await prisma.office_streams.delete({
     *   where: {
     *     // ... filter to delete one Office_streams
     *   }
     * })
     * 
     */
    delete<T extends office_streamsDeleteArgs>(args: SelectSubset<T, office_streamsDeleteArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Office_streams.
     * @param {office_streamsUpdateArgs} args - Arguments to update one Office_streams.
     * @example
     * // Update one Office_streams
     * const office_streams = await prisma.office_streams.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends office_streamsUpdateArgs>(args: SelectSubset<T, office_streamsUpdateArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Office_streams.
     * @param {office_streamsDeleteManyArgs} args - Arguments to filter Office_streams to delete.
     * @example
     * // Delete a few Office_streams
     * const { count } = await prisma.office_streams.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends office_streamsDeleteManyArgs>(args?: SelectSubset<T, office_streamsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Office_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {office_streamsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Office_streams
     * const office_streams = await prisma.office_streams.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends office_streamsUpdateManyArgs>(args: SelectSubset<T, office_streamsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Office_streams.
     * @param {office_streamsUpsertArgs} args - Arguments to update or create a Office_streams.
     * @example
     * // Update or create a Office_streams
     * const office_streams = await prisma.office_streams.upsert({
     *   create: {
     *     // ... data to create a Office_streams
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Office_streams we want to update
     *   }
     * })
     */
    upsert<T extends office_streamsUpsertArgs>(args: SelectSubset<T, office_streamsUpsertArgs<ExtArgs>>): Prisma__office_streamsClient<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Office_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {office_streamsCountArgs} args - Arguments to filter Office_streams to count.
     * @example
     * // Count the number of Office_streams
     * const count = await prisma.office_streams.count({
     *   where: {
     *     // ... the filter for the Office_streams we want to count
     *   }
     * })
    **/
    count<T extends office_streamsCountArgs>(
      args?: Subset<T, office_streamsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Office_streamsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Office_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Office_streamsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Office_streamsAggregateArgs>(args: Subset<T, Office_streamsAggregateArgs>): Prisma.PrismaPromise<GetOffice_streamsAggregateType<T>>

    /**
     * Group by Office_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {office_streamsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends office_streamsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: office_streamsGroupByArgs['orderBy'] }
        : { orderBy?: office_streamsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, office_streamsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffice_streamsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the office_streams model
   */
  readonly fields: office_streamsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for office_streams.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__office_streamsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    offices<T extends office_streams$officesArgs<ExtArgs> = {}>(args?: Subset<T, office_streams$officesArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the office_streams model
   */
  interface office_streamsFieldRefs {
    readonly Id: FieldRef<"office_streams", 'Int'>
    readonly office_Id: FieldRef<"office_streams", 'Int'>
    readonly stream_url: FieldRef<"office_streams", 'String'>
    readonly stream_api_key: FieldRef<"office_streams", 'String'>
    readonly stream_path: FieldRef<"office_streams", 'String'>
    readonly password: FieldRef<"office_streams", 'String'>
    readonly createdAt: FieldRef<"office_streams", 'DateTime'>
    readonly updatedAt: FieldRef<"office_streams", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * office_streams findUnique
   */
  export type office_streamsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * Filter, which office_streams to fetch.
     */
    where: office_streamsWhereUniqueInput
  }

  /**
   * office_streams findUniqueOrThrow
   */
  export type office_streamsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * Filter, which office_streams to fetch.
     */
    where: office_streamsWhereUniqueInput
  }

  /**
   * office_streams findFirst
   */
  export type office_streamsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * Filter, which office_streams to fetch.
     */
    where?: office_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of office_streams to fetch.
     */
    orderBy?: office_streamsOrderByWithRelationInput | office_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for office_streams.
     */
    cursor?: office_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` office_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` office_streams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of office_streams.
     */
    distinct?: Office_streamsScalarFieldEnum | Office_streamsScalarFieldEnum[]
  }

  /**
   * office_streams findFirstOrThrow
   */
  export type office_streamsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * Filter, which office_streams to fetch.
     */
    where?: office_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of office_streams to fetch.
     */
    orderBy?: office_streamsOrderByWithRelationInput | office_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for office_streams.
     */
    cursor?: office_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` office_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` office_streams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of office_streams.
     */
    distinct?: Office_streamsScalarFieldEnum | Office_streamsScalarFieldEnum[]
  }

  /**
   * office_streams findMany
   */
  export type office_streamsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * Filter, which office_streams to fetch.
     */
    where?: office_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of office_streams to fetch.
     */
    orderBy?: office_streamsOrderByWithRelationInput | office_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing office_streams.
     */
    cursor?: office_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` office_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` office_streams.
     */
    skip?: number
    distinct?: Office_streamsScalarFieldEnum | Office_streamsScalarFieldEnum[]
  }

  /**
   * office_streams create
   */
  export type office_streamsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * The data needed to create a office_streams.
     */
    data?: XOR<office_streamsCreateInput, office_streamsUncheckedCreateInput>
  }

  /**
   * office_streams createMany
   */
  export type office_streamsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many office_streams.
     */
    data: office_streamsCreateManyInput | office_streamsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * office_streams update
   */
  export type office_streamsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * The data needed to update a office_streams.
     */
    data: XOR<office_streamsUpdateInput, office_streamsUncheckedUpdateInput>
    /**
     * Choose, which office_streams to update.
     */
    where: office_streamsWhereUniqueInput
  }

  /**
   * office_streams updateMany
   */
  export type office_streamsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update office_streams.
     */
    data: XOR<office_streamsUpdateManyMutationInput, office_streamsUncheckedUpdateManyInput>
    /**
     * Filter which office_streams to update
     */
    where?: office_streamsWhereInput
    /**
     * Limit how many office_streams to update.
     */
    limit?: number
  }

  /**
   * office_streams upsert
   */
  export type office_streamsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * The filter to search for the office_streams to update in case it exists.
     */
    where: office_streamsWhereUniqueInput
    /**
     * In case the office_streams found by the `where` argument doesn't exist, create a new office_streams with this data.
     */
    create: XOR<office_streamsCreateInput, office_streamsUncheckedCreateInput>
    /**
     * In case the office_streams was found with the provided `where` argument, update it with this data.
     */
    update: XOR<office_streamsUpdateInput, office_streamsUncheckedUpdateInput>
  }

  /**
   * office_streams delete
   */
  export type office_streamsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    /**
     * Filter which office_streams to delete.
     */
    where: office_streamsWhereUniqueInput
  }

  /**
   * office_streams deleteMany
   */
  export type office_streamsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which office_streams to delete
     */
    where?: office_streamsWhereInput
    /**
     * Limit how many office_streams to delete.
     */
    limit?: number
  }

  /**
   * office_streams.offices
   */
  export type office_streams$officesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    where?: officesWhereInput
  }

  /**
   * office_streams without action
   */
  export type office_streamsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
  }


  /**
   * Model offices
   */

  export type AggregateOffices = {
    _count: OfficesCountAggregateOutputType | null
    _avg: OfficesAvgAggregateOutputType | null
    _sum: OfficesSumAggregateOutputType | null
    _min: OfficesMinAggregateOutputType | null
    _max: OfficesMaxAggregateOutputType | null
  }

  export type OfficesAvgAggregateOutputType = {
    Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type OfficesSumAggregateOutputType = {
    Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type OfficesMinAggregateOutputType = {
    Id: number | null
    office_Id: string | null
    office_english_name: string | null
    office_arabic_name: string | null
    image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
  }

  export type OfficesMaxAggregateOutputType = {
    Id: number | null
    office_Id: string | null
    office_english_name: string | null
    office_arabic_name: string | null
    image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
  }

  export type OfficesCountAggregateOutputType = {
    Id: number
    office_Id: number
    office_english_name: number
    office_arabic_name: number
    image: number
    latitude: number
    longitude: number
    createdAt: number
    updatedAt: number
    location: number
    _all: number
  }


  export type OfficesAvgAggregateInputType = {
    Id?: true
    latitude?: true
    longitude?: true
  }

  export type OfficesSumAggregateInputType = {
    Id?: true
    latitude?: true
    longitude?: true
  }

  export type OfficesMinAggregateInputType = {
    Id?: true
    office_Id?: true
    office_english_name?: true
    office_arabic_name?: true
    image?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    location?: true
  }

  export type OfficesMaxAggregateInputType = {
    Id?: true
    office_Id?: true
    office_english_name?: true
    office_arabic_name?: true
    image?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    location?: true
  }

  export type OfficesCountAggregateInputType = {
    Id?: true
    office_Id?: true
    office_english_name?: true
    office_arabic_name?: true
    image?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    _all?: true
  }

  export type OfficesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices to aggregate.
     */
    where?: officesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices to fetch.
     */
    orderBy?: officesOrderByWithRelationInput | officesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: officesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offices
    **/
    _count?: true | OfficesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OfficesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OfficesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OfficesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OfficesMaxAggregateInputType
  }

  export type GetOfficesAggregateType<T extends OfficesAggregateArgs> = {
        [P in keyof T & keyof AggregateOffices]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffices[P]>
      : GetScalarType<T[P], AggregateOffices[P]>
  }




  export type officesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: officesWhereInput
    orderBy?: officesOrderByWithAggregationInput | officesOrderByWithAggregationInput[]
    by: OfficesScalarFieldEnum[] | OfficesScalarFieldEnum
    having?: officesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OfficesCountAggregateInputType | true
    _avg?: OfficesAvgAggregateInputType
    _sum?: OfficesSumAggregateInputType
    _min?: OfficesMinAggregateInputType
    _max?: OfficesMaxAggregateInputType
  }

  export type OfficesGroupByOutputType = {
    Id: number
    office_Id: string | null
    office_english_name: string | null
    office_arabic_name: string | null
    image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    createdAt: Date | null
    updatedAt: Date
    location: string | null
    _count: OfficesCountAggregateOutputType | null
    _avg: OfficesAvgAggregateOutputType | null
    _sum: OfficesSumAggregateOutputType | null
    _min: OfficesMinAggregateOutputType | null
    _max: OfficesMaxAggregateOutputType | null
  }

  type GetOfficesGroupByPayload<T extends officesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OfficesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OfficesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OfficesGroupByOutputType[P]>
            : GetScalarType<T[P], OfficesGroupByOutputType[P]>
        }
      >
    >


  export type officesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    office_Id?: boolean
    office_english_name?: boolean
    office_arabic_name?: boolean
    image?: boolean
    latitude?: boolean
    longitude?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    office_streams?: boolean | offices$office_streamsArgs<ExtArgs>
    offices_attendance?: boolean | offices$offices_attendanceArgs<ExtArgs>
    offices_cameras?: boolean | offices$offices_camerasArgs<ExtArgs>
    offices_sentiment_analysis?: boolean | offices$offices_sentiment_analysisArgs<ExtArgs>
    offices_footfall_analysis?: boolean | offices$offices_footfall_analysisArgs<ExtArgs>
    _count?: boolean | OfficesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offices"]>



  export type officesSelectScalar = {
    Id?: boolean
    office_Id?: boolean
    office_english_name?: boolean
    office_arabic_name?: boolean
    image?: boolean
    latitude?: boolean
    longitude?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
  }

  export type officesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "office_Id" | "office_english_name" | "office_arabic_name" | "image" | "latitude" | "longitude" | "createdAt" | "updatedAt" | "location", ExtArgs["result"]["offices"]>
  export type officesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    office_streams?: boolean | offices$office_streamsArgs<ExtArgs>
    offices_attendance?: boolean | offices$offices_attendanceArgs<ExtArgs>
    offices_cameras?: boolean | offices$offices_camerasArgs<ExtArgs>
    offices_sentiment_analysis?: boolean | offices$offices_sentiment_analysisArgs<ExtArgs>
    offices_footfall_analysis?: boolean | offices$offices_footfall_analysisArgs<ExtArgs>
    _count?: boolean | OfficesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $officesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offices"
    objects: {
      office_streams: Prisma.$office_streamsPayload<ExtArgs>[]
      offices_attendance: Prisma.$offices_attendancePayload<ExtArgs>[]
      offices_cameras: Prisma.$offices_camerasPayload<ExtArgs>[]
      offices_sentiment_analysis: Prisma.$offices_sentiment_analysisPayload<ExtArgs>[]
      offices_footfall_analysis: Prisma.$offices_footfall_analysisPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      office_Id: string | null
      office_english_name: string | null
      office_arabic_name: string | null
      image: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date
      location: string | null
    }, ExtArgs["result"]["offices"]>
    composites: {}
  }

  type officesGetPayload<S extends boolean | null | undefined | officesDefaultArgs> = $Result.GetResult<Prisma.$officesPayload, S>

  type officesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<officesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OfficesCountAggregateInputType | true
    }

  export interface officesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offices'], meta: { name: 'offices' } }
    /**
     * Find zero or one Offices that matches the filter.
     * @param {officesFindUniqueArgs} args - Arguments to find a Offices
     * @example
     * // Get one Offices
     * const offices = await prisma.offices.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends officesFindUniqueArgs>(args: SelectSubset<T, officesFindUniqueArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offices that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {officesFindUniqueOrThrowArgs} args - Arguments to find a Offices
     * @example
     * // Get one Offices
     * const offices = await prisma.offices.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends officesFindUniqueOrThrowArgs>(args: SelectSubset<T, officesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {officesFindFirstArgs} args - Arguments to find a Offices
     * @example
     * // Get one Offices
     * const offices = await prisma.offices.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends officesFindFirstArgs>(args?: SelectSubset<T, officesFindFirstArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {officesFindFirstOrThrowArgs} args - Arguments to find a Offices
     * @example
     * // Get one Offices
     * const offices = await prisma.offices.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends officesFindFirstOrThrowArgs>(args?: SelectSubset<T, officesFindFirstOrThrowArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {officesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offices
     * const offices = await prisma.offices.findMany()
     * 
     * // Get first 10 Offices
     * const offices = await prisma.offices.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const officesWithIdOnly = await prisma.offices.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends officesFindManyArgs>(args?: SelectSubset<T, officesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offices.
     * @param {officesCreateArgs} args - Arguments to create a Offices.
     * @example
     * // Create one Offices
     * const Offices = await prisma.offices.create({
     *   data: {
     *     // ... data to create a Offices
     *   }
     * })
     * 
     */
    create<T extends officesCreateArgs>(args: SelectSubset<T, officesCreateArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offices.
     * @param {officesCreateManyArgs} args - Arguments to create many Offices.
     * @example
     * // Create many Offices
     * const offices = await prisma.offices.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends officesCreateManyArgs>(args?: SelectSubset<T, officesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Offices.
     * @param {officesDeleteArgs} args - Arguments to delete one Offices.
     * @example
     * // Delete one Offices
     * const Offices = await prisma.offices.delete({
     *   where: {
     *     // ... filter to delete one Offices
     *   }
     * })
     * 
     */
    delete<T extends officesDeleteArgs>(args: SelectSubset<T, officesDeleteArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offices.
     * @param {officesUpdateArgs} args - Arguments to update one Offices.
     * @example
     * // Update one Offices
     * const offices = await prisma.offices.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends officesUpdateArgs>(args: SelectSubset<T, officesUpdateArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offices.
     * @param {officesDeleteManyArgs} args - Arguments to filter Offices to delete.
     * @example
     * // Delete a few Offices
     * const { count } = await prisma.offices.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends officesDeleteManyArgs>(args?: SelectSubset<T, officesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {officesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offices
     * const offices = await prisma.offices.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends officesUpdateManyArgs>(args: SelectSubset<T, officesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Offices.
     * @param {officesUpsertArgs} args - Arguments to update or create a Offices.
     * @example
     * // Update or create a Offices
     * const offices = await prisma.offices.upsert({
     *   create: {
     *     // ... data to create a Offices
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offices we want to update
     *   }
     * })
     */
    upsert<T extends officesUpsertArgs>(args: SelectSubset<T, officesUpsertArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {officesCountArgs} args - Arguments to filter Offices to count.
     * @example
     * // Count the number of Offices
     * const count = await prisma.offices.count({
     *   where: {
     *     // ... the filter for the Offices we want to count
     *   }
     * })
    **/
    count<T extends officesCountArgs>(
      args?: Subset<T, officesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OfficesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OfficesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OfficesAggregateArgs>(args: Subset<T, OfficesAggregateArgs>): Prisma.PrismaPromise<GetOfficesAggregateType<T>>

    /**
     * Group by Offices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {officesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends officesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: officesGroupByArgs['orderBy'] }
        : { orderBy?: officesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, officesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOfficesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offices model
   */
  readonly fields: officesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offices.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__officesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    office_streams<T extends offices$office_streamsArgs<ExtArgs> = {}>(args?: Subset<T, offices$office_streamsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$office_streamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_attendance<T extends offices$offices_attendanceArgs<ExtArgs> = {}>(args?: Subset<T, offices$offices_attendanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_cameras<T extends offices$offices_camerasArgs<ExtArgs> = {}>(args?: Subset<T, offices$offices_camerasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_sentiment_analysis<T extends offices$offices_sentiment_analysisArgs<ExtArgs> = {}>(args?: Subset<T, offices$offices_sentiment_analysisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_footfall_analysis<T extends offices$offices_footfall_analysisArgs<ExtArgs> = {}>(args?: Subset<T, offices$offices_footfall_analysisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offices model
   */
  interface officesFieldRefs {
    readonly Id: FieldRef<"offices", 'Int'>
    readonly office_Id: FieldRef<"offices", 'String'>
    readonly office_english_name: FieldRef<"offices", 'String'>
    readonly office_arabic_name: FieldRef<"offices", 'String'>
    readonly image: FieldRef<"offices", 'String'>
    readonly latitude: FieldRef<"offices", 'Decimal'>
    readonly longitude: FieldRef<"offices", 'Decimal'>
    readonly createdAt: FieldRef<"offices", 'DateTime'>
    readonly updatedAt: FieldRef<"offices", 'DateTime'>
    readonly location: FieldRef<"offices", 'String'>
  }
    

  // Custom InputTypes
  /**
   * offices findUnique
   */
  export type officesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * Filter, which offices to fetch.
     */
    where: officesWhereUniqueInput
  }

  /**
   * offices findUniqueOrThrow
   */
  export type officesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * Filter, which offices to fetch.
     */
    where: officesWhereUniqueInput
  }

  /**
   * offices findFirst
   */
  export type officesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * Filter, which offices to fetch.
     */
    where?: officesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices to fetch.
     */
    orderBy?: officesOrderByWithRelationInput | officesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices.
     */
    cursor?: officesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices.
     */
    distinct?: OfficesScalarFieldEnum | OfficesScalarFieldEnum[]
  }

  /**
   * offices findFirstOrThrow
   */
  export type officesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * Filter, which offices to fetch.
     */
    where?: officesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices to fetch.
     */
    orderBy?: officesOrderByWithRelationInput | officesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices.
     */
    cursor?: officesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices.
     */
    distinct?: OfficesScalarFieldEnum | OfficesScalarFieldEnum[]
  }

  /**
   * offices findMany
   */
  export type officesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * Filter, which offices to fetch.
     */
    where?: officesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices to fetch.
     */
    orderBy?: officesOrderByWithRelationInput | officesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offices.
     */
    cursor?: officesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices.
     */
    skip?: number
    distinct?: OfficesScalarFieldEnum | OfficesScalarFieldEnum[]
  }

  /**
   * offices create
   */
  export type officesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * The data needed to create a offices.
     */
    data?: XOR<officesCreateInput, officesUncheckedCreateInput>
  }

  /**
   * offices createMany
   */
  export type officesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offices.
     */
    data: officesCreateManyInput | officesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offices update
   */
  export type officesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * The data needed to update a offices.
     */
    data: XOR<officesUpdateInput, officesUncheckedUpdateInput>
    /**
     * Choose, which offices to update.
     */
    where: officesWhereUniqueInput
  }

  /**
   * offices updateMany
   */
  export type officesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offices.
     */
    data: XOR<officesUpdateManyMutationInput, officesUncheckedUpdateManyInput>
    /**
     * Filter which offices to update
     */
    where?: officesWhereInput
    /**
     * Limit how many offices to update.
     */
    limit?: number
  }

  /**
   * offices upsert
   */
  export type officesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * The filter to search for the offices to update in case it exists.
     */
    where: officesWhereUniqueInput
    /**
     * In case the offices found by the `where` argument doesn't exist, create a new offices with this data.
     */
    create: XOR<officesCreateInput, officesUncheckedCreateInput>
    /**
     * In case the offices was found with the provided `where` argument, update it with this data.
     */
    update: XOR<officesUpdateInput, officesUncheckedUpdateInput>
  }

  /**
   * offices delete
   */
  export type officesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    /**
     * Filter which offices to delete.
     */
    where: officesWhereUniqueInput
  }

  /**
   * offices deleteMany
   */
  export type officesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices to delete
     */
    where?: officesWhereInput
    /**
     * Limit how many offices to delete.
     */
    limit?: number
  }

  /**
   * offices.office_streams
   */
  export type offices$office_streamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the office_streams
     */
    select?: office_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the office_streams
     */
    omit?: office_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: office_streamsInclude<ExtArgs> | null
    where?: office_streamsWhereInput
    orderBy?: office_streamsOrderByWithRelationInput | office_streamsOrderByWithRelationInput[]
    cursor?: office_streamsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Office_streamsScalarFieldEnum | Office_streamsScalarFieldEnum[]
  }

  /**
   * offices.offices_attendance
   */
  export type offices$offices_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    where?: offices_attendanceWhereInput
    orderBy?: offices_attendanceOrderByWithRelationInput | offices_attendanceOrderByWithRelationInput[]
    cursor?: offices_attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_attendanceScalarFieldEnum | Offices_attendanceScalarFieldEnum[]
  }

  /**
   * offices.offices_cameras
   */
  export type offices$offices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    where?: offices_camerasWhereInput
    orderBy?: offices_camerasOrderByWithRelationInput | offices_camerasOrderByWithRelationInput[]
    cursor?: offices_camerasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_camerasScalarFieldEnum | Offices_camerasScalarFieldEnum[]
  }

  /**
   * offices.offices_sentiment_analysis
   */
  export type offices$offices_sentiment_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    where?: offices_sentiment_analysisWhereInput
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    cursor?: offices_sentiment_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_sentiment_analysisScalarFieldEnum | Offices_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * offices.offices_footfall_analysis
   */
  export type offices$offices_footfall_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    where?: offices_footfall_analysisWhereInput
    orderBy?: offices_footfall_analysisOrderByWithRelationInput | offices_footfall_analysisOrderByWithRelationInput[]
    cursor?: offices_footfall_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_footfall_analysisScalarFieldEnum | Offices_footfall_analysisScalarFieldEnum[]
  }

  /**
   * offices without action
   */
  export type officesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
  }


  /**
   * Model offices_attendance
   */

  export type AggregateOffices_attendance = {
    _count: Offices_attendanceCountAggregateOutputType | null
    _avg: Offices_attendanceAvgAggregateOutputType | null
    _sum: Offices_attendanceSumAggregateOutputType | null
    _min: Offices_attendanceMinAggregateOutputType | null
    _max: Offices_attendanceMaxAggregateOutputType | null
  }

  export type Offices_attendanceAvgAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    person_Id: number | null
  }

  export type Offices_attendanceSumAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    person_Id: number | null
  }

  export type Offices_attendanceMinAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    person_Id: number | null
    entry_time: Date | null
    exit_time: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Offices_attendanceMaxAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    person_Id: number | null
    entry_time: Date | null
    exit_time: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Offices_attendanceCountAggregateOutputType = {
    Id: number
    office_Id: number
    person_Id: number
    entry_time: number
    exit_time: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Offices_attendanceAvgAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
  }

  export type Offices_attendanceSumAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
  }

  export type Offices_attendanceMinAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
    entry_time?: true
    exit_time?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Offices_attendanceMaxAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
    entry_time?: true
    exit_time?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Offices_attendanceCountAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
    entry_time?: true
    exit_time?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Offices_attendanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_attendance to aggregate.
     */
    where?: offices_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_attendances to fetch.
     */
    orderBy?: offices_attendanceOrderByWithRelationInput | offices_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offices_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offices_attendances
    **/
    _count?: true | Offices_attendanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Offices_attendanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Offices_attendanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Offices_attendanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Offices_attendanceMaxAggregateInputType
  }

  export type GetOffices_attendanceAggregateType<T extends Offices_attendanceAggregateArgs> = {
        [P in keyof T & keyof AggregateOffices_attendance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffices_attendance[P]>
      : GetScalarType<T[P], AggregateOffices_attendance[P]>
  }




  export type offices_attendanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_attendanceWhereInput
    orderBy?: offices_attendanceOrderByWithAggregationInput | offices_attendanceOrderByWithAggregationInput[]
    by: Offices_attendanceScalarFieldEnum[] | Offices_attendanceScalarFieldEnum
    having?: offices_attendanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Offices_attendanceCountAggregateInputType | true
    _avg?: Offices_attendanceAvgAggregateInputType
    _sum?: Offices_attendanceSumAggregateInputType
    _min?: Offices_attendanceMinAggregateInputType
    _max?: Offices_attendanceMaxAggregateInputType
  }

  export type Offices_attendanceGroupByOutputType = {
    Id: number
    office_Id: number | null
    person_Id: number | null
    entry_time: Date | null
    exit_time: Date | null
    createdAt: Date | null
    updatedAt: Date
    _count: Offices_attendanceCountAggregateOutputType | null
    _avg: Offices_attendanceAvgAggregateOutputType | null
    _sum: Offices_attendanceSumAggregateOutputType | null
    _min: Offices_attendanceMinAggregateOutputType | null
    _max: Offices_attendanceMaxAggregateOutputType | null
  }

  type GetOffices_attendanceGroupByPayload<T extends offices_attendanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Offices_attendanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Offices_attendanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Offices_attendanceGroupByOutputType[P]>
            : GetScalarType<T[P], Offices_attendanceGroupByOutputType[P]>
        }
      >
    >


  export type offices_attendanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    office_Id?: boolean
    person_Id?: boolean
    entry_time?: boolean
    exit_time?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    office?: boolean | offices_attendance$officeArgs<ExtArgs>
    user?: boolean | offices_attendance$userArgs<ExtArgs>
  }, ExtArgs["result"]["offices_attendance"]>



  export type offices_attendanceSelectScalar = {
    Id?: boolean
    office_Id?: boolean
    person_Id?: boolean
    entry_time?: boolean
    exit_time?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type offices_attendanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "office_Id" | "person_Id" | "entry_time" | "exit_time" | "createdAt" | "updatedAt", ExtArgs["result"]["offices_attendance"]>
  export type offices_attendanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    office?: boolean | offices_attendance$officeArgs<ExtArgs>
    user?: boolean | offices_attendance$userArgs<ExtArgs>
  }

  export type $offices_attendancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offices_attendance"
    objects: {
      office: Prisma.$officesPayload<ExtArgs> | null
      user: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      office_Id: number | null
      person_Id: number | null
      entry_time: Date | null
      exit_time: Date | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["offices_attendance"]>
    composites: {}
  }

  type offices_attendanceGetPayload<S extends boolean | null | undefined | offices_attendanceDefaultArgs> = $Result.GetResult<Prisma.$offices_attendancePayload, S>

  type offices_attendanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<offices_attendanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Offices_attendanceCountAggregateInputType | true
    }

  export interface offices_attendanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offices_attendance'], meta: { name: 'offices_attendance' } }
    /**
     * Find zero or one Offices_attendance that matches the filter.
     * @param {offices_attendanceFindUniqueArgs} args - Arguments to find a Offices_attendance
     * @example
     * // Get one Offices_attendance
     * const offices_attendance = await prisma.offices_attendance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends offices_attendanceFindUniqueArgs>(args: SelectSubset<T, offices_attendanceFindUniqueArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offices_attendance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {offices_attendanceFindUniqueOrThrowArgs} args - Arguments to find a Offices_attendance
     * @example
     * // Get one Offices_attendance
     * const offices_attendance = await prisma.offices_attendance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends offices_attendanceFindUniqueOrThrowArgs>(args: SelectSubset<T, offices_attendanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_attendance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_attendanceFindFirstArgs} args - Arguments to find a Offices_attendance
     * @example
     * // Get one Offices_attendance
     * const offices_attendance = await prisma.offices_attendance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends offices_attendanceFindFirstArgs>(args?: SelectSubset<T, offices_attendanceFindFirstArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_attendance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_attendanceFindFirstOrThrowArgs} args - Arguments to find a Offices_attendance
     * @example
     * // Get one Offices_attendance
     * const offices_attendance = await prisma.offices_attendance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends offices_attendanceFindFirstOrThrowArgs>(args?: SelectSubset<T, offices_attendanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offices_attendances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_attendanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offices_attendances
     * const offices_attendances = await prisma.offices_attendance.findMany()
     * 
     * // Get first 10 Offices_attendances
     * const offices_attendances = await prisma.offices_attendance.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const offices_attendanceWithIdOnly = await prisma.offices_attendance.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends offices_attendanceFindManyArgs>(args?: SelectSubset<T, offices_attendanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offices_attendance.
     * @param {offices_attendanceCreateArgs} args - Arguments to create a Offices_attendance.
     * @example
     * // Create one Offices_attendance
     * const Offices_attendance = await prisma.offices_attendance.create({
     *   data: {
     *     // ... data to create a Offices_attendance
     *   }
     * })
     * 
     */
    create<T extends offices_attendanceCreateArgs>(args: SelectSubset<T, offices_attendanceCreateArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offices_attendances.
     * @param {offices_attendanceCreateManyArgs} args - Arguments to create many Offices_attendances.
     * @example
     * // Create many Offices_attendances
     * const offices_attendance = await prisma.offices_attendance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends offices_attendanceCreateManyArgs>(args?: SelectSubset<T, offices_attendanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Offices_attendance.
     * @param {offices_attendanceDeleteArgs} args - Arguments to delete one Offices_attendance.
     * @example
     * // Delete one Offices_attendance
     * const Offices_attendance = await prisma.offices_attendance.delete({
     *   where: {
     *     // ... filter to delete one Offices_attendance
     *   }
     * })
     * 
     */
    delete<T extends offices_attendanceDeleteArgs>(args: SelectSubset<T, offices_attendanceDeleteArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offices_attendance.
     * @param {offices_attendanceUpdateArgs} args - Arguments to update one Offices_attendance.
     * @example
     * // Update one Offices_attendance
     * const offices_attendance = await prisma.offices_attendance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends offices_attendanceUpdateArgs>(args: SelectSubset<T, offices_attendanceUpdateArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offices_attendances.
     * @param {offices_attendanceDeleteManyArgs} args - Arguments to filter Offices_attendances to delete.
     * @example
     * // Delete a few Offices_attendances
     * const { count } = await prisma.offices_attendance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends offices_attendanceDeleteManyArgs>(args?: SelectSubset<T, offices_attendanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offices_attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_attendanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offices_attendances
     * const offices_attendance = await prisma.offices_attendance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends offices_attendanceUpdateManyArgs>(args: SelectSubset<T, offices_attendanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Offices_attendance.
     * @param {offices_attendanceUpsertArgs} args - Arguments to update or create a Offices_attendance.
     * @example
     * // Update or create a Offices_attendance
     * const offices_attendance = await prisma.offices_attendance.upsert({
     *   create: {
     *     // ... data to create a Offices_attendance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offices_attendance we want to update
     *   }
     * })
     */
    upsert<T extends offices_attendanceUpsertArgs>(args: SelectSubset<T, offices_attendanceUpsertArgs<ExtArgs>>): Prisma__offices_attendanceClient<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offices_attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_attendanceCountArgs} args - Arguments to filter Offices_attendances to count.
     * @example
     * // Count the number of Offices_attendances
     * const count = await prisma.offices_attendance.count({
     *   where: {
     *     // ... the filter for the Offices_attendances we want to count
     *   }
     * })
    **/
    count<T extends offices_attendanceCountArgs>(
      args?: Subset<T, offices_attendanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Offices_attendanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offices_attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Offices_attendanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Offices_attendanceAggregateArgs>(args: Subset<T, Offices_attendanceAggregateArgs>): Prisma.PrismaPromise<GetOffices_attendanceAggregateType<T>>

    /**
     * Group by Offices_attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_attendanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offices_attendanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offices_attendanceGroupByArgs['orderBy'] }
        : { orderBy?: offices_attendanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offices_attendanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffices_attendanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offices_attendance model
   */
  readonly fields: offices_attendanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offices_attendance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offices_attendanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    office<T extends offices_attendance$officeArgs<ExtArgs> = {}>(args?: Subset<T, offices_attendance$officeArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends offices_attendance$userArgs<ExtArgs> = {}>(args?: Subset<T, offices_attendance$userArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offices_attendance model
   */
  interface offices_attendanceFieldRefs {
    readonly Id: FieldRef<"offices_attendance", 'Int'>
    readonly office_Id: FieldRef<"offices_attendance", 'Int'>
    readonly person_Id: FieldRef<"offices_attendance", 'Int'>
    readonly entry_time: FieldRef<"offices_attendance", 'DateTime'>
    readonly exit_time: FieldRef<"offices_attendance", 'DateTime'>
    readonly createdAt: FieldRef<"offices_attendance", 'DateTime'>
    readonly updatedAt: FieldRef<"offices_attendance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * offices_attendance findUnique
   */
  export type offices_attendanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which offices_attendance to fetch.
     */
    where: offices_attendanceWhereUniqueInput
  }

  /**
   * offices_attendance findUniqueOrThrow
   */
  export type offices_attendanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which offices_attendance to fetch.
     */
    where: offices_attendanceWhereUniqueInput
  }

  /**
   * offices_attendance findFirst
   */
  export type offices_attendanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which offices_attendance to fetch.
     */
    where?: offices_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_attendances to fetch.
     */
    orderBy?: offices_attendanceOrderByWithRelationInput | offices_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_attendances.
     */
    cursor?: offices_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_attendances.
     */
    distinct?: Offices_attendanceScalarFieldEnum | Offices_attendanceScalarFieldEnum[]
  }

  /**
   * offices_attendance findFirstOrThrow
   */
  export type offices_attendanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which offices_attendance to fetch.
     */
    where?: offices_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_attendances to fetch.
     */
    orderBy?: offices_attendanceOrderByWithRelationInput | offices_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_attendances.
     */
    cursor?: offices_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_attendances.
     */
    distinct?: Offices_attendanceScalarFieldEnum | Offices_attendanceScalarFieldEnum[]
  }

  /**
   * offices_attendance findMany
   */
  export type offices_attendanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which offices_attendances to fetch.
     */
    where?: offices_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_attendances to fetch.
     */
    orderBy?: offices_attendanceOrderByWithRelationInput | offices_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offices_attendances.
     */
    cursor?: offices_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_attendances.
     */
    skip?: number
    distinct?: Offices_attendanceScalarFieldEnum | Offices_attendanceScalarFieldEnum[]
  }

  /**
   * offices_attendance create
   */
  export type offices_attendanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * The data needed to create a offices_attendance.
     */
    data?: XOR<offices_attendanceCreateInput, offices_attendanceUncheckedCreateInput>
  }

  /**
   * offices_attendance createMany
   */
  export type offices_attendanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offices_attendances.
     */
    data: offices_attendanceCreateManyInput | offices_attendanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offices_attendance update
   */
  export type offices_attendanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * The data needed to update a offices_attendance.
     */
    data: XOR<offices_attendanceUpdateInput, offices_attendanceUncheckedUpdateInput>
    /**
     * Choose, which offices_attendance to update.
     */
    where: offices_attendanceWhereUniqueInput
  }

  /**
   * offices_attendance updateMany
   */
  export type offices_attendanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offices_attendances.
     */
    data: XOR<offices_attendanceUpdateManyMutationInput, offices_attendanceUncheckedUpdateManyInput>
    /**
     * Filter which offices_attendances to update
     */
    where?: offices_attendanceWhereInput
    /**
     * Limit how many offices_attendances to update.
     */
    limit?: number
  }

  /**
   * offices_attendance upsert
   */
  export type offices_attendanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * The filter to search for the offices_attendance to update in case it exists.
     */
    where: offices_attendanceWhereUniqueInput
    /**
     * In case the offices_attendance found by the `where` argument doesn't exist, create a new offices_attendance with this data.
     */
    create: XOR<offices_attendanceCreateInput, offices_attendanceUncheckedCreateInput>
    /**
     * In case the offices_attendance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offices_attendanceUpdateInput, offices_attendanceUncheckedUpdateInput>
  }

  /**
   * offices_attendance delete
   */
  export type offices_attendanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    /**
     * Filter which offices_attendance to delete.
     */
    where: offices_attendanceWhereUniqueInput
  }

  /**
   * offices_attendance deleteMany
   */
  export type offices_attendanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_attendances to delete
     */
    where?: offices_attendanceWhereInput
    /**
     * Limit how many offices_attendances to delete.
     */
    limit?: number
  }

  /**
   * offices_attendance.office
   */
  export type offices_attendance$officeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    where?: officesWhereInput
  }

  /**
   * offices_attendance.user
   */
  export type offices_attendance$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * offices_attendance without action
   */
  export type offices_attendanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
  }


  /**
   * Model offices_cameras
   */

  export type AggregateOffices_cameras = {
    _count: Offices_camerasCountAggregateOutputType | null
    _avg: Offices_camerasAvgAggregateOutputType | null
    _sum: Offices_camerasSumAggregateOutputType | null
    _min: Offices_camerasMinAggregateOutputType | null
    _max: Offices_camerasMaxAggregateOutputType | null
  }

  export type Offices_camerasAvgAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type Offices_camerasSumAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type Offices_camerasMinAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    camera_Id: string | null
    camera_english_name: string | null
    camera_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    ip_address: string | null
    last_active_date: Date | null
    last_active_time: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
    attendance: boolean | null
    footfall: boolean | null
    sentiment: boolean | null
  }

  export type Offices_camerasMaxAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    camera_Id: string | null
    camera_english_name: string | null
    camera_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    ip_address: string | null
    last_active_date: Date | null
    last_active_time: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
    attendance: boolean | null
    footfall: boolean | null
    sentiment: boolean | null
  }

  export type Offices_camerasCountAggregateOutputType = {
    Id: number
    office_Id: number
    camera_Id: number
    camera_english_name: number
    camera_arabic_name: number
    latitude: number
    longitude: number
    ip_address: number
    last_active_date: number
    last_active_time: number
    status: number
    createdAt: number
    updatedAt: number
    location: number
    attendance: number
    footfall: number
    sentiment: number
    _all: number
  }


  export type Offices_camerasAvgAggregateInputType = {
    Id?: true
    office_Id?: true
    latitude?: true
    longitude?: true
  }

  export type Offices_camerasSumAggregateInputType = {
    Id?: true
    office_Id?: true
    latitude?: true
    longitude?: true
  }

  export type Offices_camerasMinAggregateInputType = {
    Id?: true
    office_Id?: true
    camera_Id?: true
    camera_english_name?: true
    camera_arabic_name?: true
    latitude?: true
    longitude?: true
    ip_address?: true
    last_active_date?: true
    last_active_time?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    attendance?: true
    footfall?: true
    sentiment?: true
  }

  export type Offices_camerasMaxAggregateInputType = {
    Id?: true
    office_Id?: true
    camera_Id?: true
    camera_english_name?: true
    camera_arabic_name?: true
    latitude?: true
    longitude?: true
    ip_address?: true
    last_active_date?: true
    last_active_time?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    attendance?: true
    footfall?: true
    sentiment?: true
  }

  export type Offices_camerasCountAggregateInputType = {
    Id?: true
    office_Id?: true
    camera_Id?: true
    camera_english_name?: true
    camera_arabic_name?: true
    latitude?: true
    longitude?: true
    ip_address?: true
    last_active_date?: true
    last_active_time?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    attendance?: true
    footfall?: true
    sentiment?: true
    _all?: true
  }

  export type Offices_camerasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_cameras to aggregate.
     */
    where?: offices_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_cameras to fetch.
     */
    orderBy?: offices_camerasOrderByWithRelationInput | offices_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offices_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_cameras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offices_cameras
    **/
    _count?: true | Offices_camerasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Offices_camerasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Offices_camerasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Offices_camerasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Offices_camerasMaxAggregateInputType
  }

  export type GetOffices_camerasAggregateType<T extends Offices_camerasAggregateArgs> = {
        [P in keyof T & keyof AggregateOffices_cameras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffices_cameras[P]>
      : GetScalarType<T[P], AggregateOffices_cameras[P]>
  }




  export type offices_camerasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_camerasWhereInput
    orderBy?: offices_camerasOrderByWithAggregationInput | offices_camerasOrderByWithAggregationInput[]
    by: Offices_camerasScalarFieldEnum[] | Offices_camerasScalarFieldEnum
    having?: offices_camerasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Offices_camerasCountAggregateInputType | true
    _avg?: Offices_camerasAvgAggregateInputType
    _sum?: Offices_camerasSumAggregateInputType
    _min?: Offices_camerasMinAggregateInputType
    _max?: Offices_camerasMaxAggregateInputType
  }

  export type Offices_camerasGroupByOutputType = {
    Id: number
    office_Id: number | null
    camera_Id: string | null
    camera_english_name: string | null
    camera_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    ip_address: string | null
    last_active_date: Date | null
    last_active_time: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date
    location: string | null
    attendance: boolean
    footfall: boolean
    sentiment: boolean
    _count: Offices_camerasCountAggregateOutputType | null
    _avg: Offices_camerasAvgAggregateOutputType | null
    _sum: Offices_camerasSumAggregateOutputType | null
    _min: Offices_camerasMinAggregateOutputType | null
    _max: Offices_camerasMaxAggregateOutputType | null
  }

  type GetOffices_camerasGroupByPayload<T extends offices_camerasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Offices_camerasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Offices_camerasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Offices_camerasGroupByOutputType[P]>
            : GetScalarType<T[P], Offices_camerasGroupByOutputType[P]>
        }
      >
    >


  export type offices_camerasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    office_Id?: boolean
    camera_Id?: boolean
    camera_english_name?: boolean
    camera_arabic_name?: boolean
    latitude?: boolean
    longitude?: boolean
    ip_address?: boolean
    last_active_date?: boolean
    last_active_time?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: boolean | offices_cameras$live_stream_favouritesArgs<ExtArgs>
    offices?: boolean | offices_cameras$officesArgs<ExtArgs>
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: boolean | offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs>
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: boolean | offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs>
    _count?: boolean | Offices_camerasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offices_cameras"]>



  export type offices_camerasSelectScalar = {
    Id?: boolean
    office_Id?: boolean
    camera_Id?: boolean
    camera_english_name?: boolean
    camera_arabic_name?: boolean
    latitude?: boolean
    longitude?: boolean
    ip_address?: boolean
    last_active_date?: boolean
    last_active_time?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
  }

  export type offices_camerasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "office_Id" | "camera_Id" | "camera_english_name" | "camera_arabic_name" | "latitude" | "longitude" | "ip_address" | "last_active_date" | "last_active_time" | "status" | "createdAt" | "updatedAt" | "location" | "attendance" | "footfall" | "sentiment", ExtArgs["result"]["offices_cameras"]>
  export type offices_camerasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    live_stream_favourites?: boolean | offices_cameras$live_stream_favouritesArgs<ExtArgs>
    offices?: boolean | offices_cameras$officesArgs<ExtArgs>
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: boolean | offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs>
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: boolean | offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs>
    _count?: boolean | Offices_camerasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $offices_camerasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offices_cameras"
    objects: {
      live_stream_favourites: Prisma.$live_stream_favouritesPayload<ExtArgs>[]
      offices: Prisma.$officesPayload<ExtArgs> | null
      offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras: Prisma.$offices_sentiment_analysisPayload<ExtArgs>[]
      offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras: Prisma.$offices_sentiment_analysisPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      office_Id: number | null
      camera_Id: string | null
      camera_english_name: string | null
      camera_arabic_name: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      ip_address: string | null
      last_active_date: Date | null
      last_active_time: Date | null
      status: string | null
      createdAt: Date | null
      updatedAt: Date
      location: string | null
      attendance: boolean
      footfall: boolean
      sentiment: boolean
    }, ExtArgs["result"]["offices_cameras"]>
    composites: {}
  }

  type offices_camerasGetPayload<S extends boolean | null | undefined | offices_camerasDefaultArgs> = $Result.GetResult<Prisma.$offices_camerasPayload, S>

  type offices_camerasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<offices_camerasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Offices_camerasCountAggregateInputType | true
    }

  export interface offices_camerasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offices_cameras'], meta: { name: 'offices_cameras' } }
    /**
     * Find zero or one Offices_cameras that matches the filter.
     * @param {offices_camerasFindUniqueArgs} args - Arguments to find a Offices_cameras
     * @example
     * // Get one Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends offices_camerasFindUniqueArgs>(args: SelectSubset<T, offices_camerasFindUniqueArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offices_cameras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {offices_camerasFindUniqueOrThrowArgs} args - Arguments to find a Offices_cameras
     * @example
     * // Get one Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends offices_camerasFindUniqueOrThrowArgs>(args: SelectSubset<T, offices_camerasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_cameras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_camerasFindFirstArgs} args - Arguments to find a Offices_cameras
     * @example
     * // Get one Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends offices_camerasFindFirstArgs>(args?: SelectSubset<T, offices_camerasFindFirstArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_cameras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_camerasFindFirstOrThrowArgs} args - Arguments to find a Offices_cameras
     * @example
     * // Get one Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends offices_camerasFindFirstOrThrowArgs>(args?: SelectSubset<T, offices_camerasFindFirstOrThrowArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offices_cameras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_camerasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.findMany()
     * 
     * // Get first 10 Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const offices_camerasWithIdOnly = await prisma.offices_cameras.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends offices_camerasFindManyArgs>(args?: SelectSubset<T, offices_camerasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offices_cameras.
     * @param {offices_camerasCreateArgs} args - Arguments to create a Offices_cameras.
     * @example
     * // Create one Offices_cameras
     * const Offices_cameras = await prisma.offices_cameras.create({
     *   data: {
     *     // ... data to create a Offices_cameras
     *   }
     * })
     * 
     */
    create<T extends offices_camerasCreateArgs>(args: SelectSubset<T, offices_camerasCreateArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offices_cameras.
     * @param {offices_camerasCreateManyArgs} args - Arguments to create many Offices_cameras.
     * @example
     * // Create many Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends offices_camerasCreateManyArgs>(args?: SelectSubset<T, offices_camerasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Offices_cameras.
     * @param {offices_camerasDeleteArgs} args - Arguments to delete one Offices_cameras.
     * @example
     * // Delete one Offices_cameras
     * const Offices_cameras = await prisma.offices_cameras.delete({
     *   where: {
     *     // ... filter to delete one Offices_cameras
     *   }
     * })
     * 
     */
    delete<T extends offices_camerasDeleteArgs>(args: SelectSubset<T, offices_camerasDeleteArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offices_cameras.
     * @param {offices_camerasUpdateArgs} args - Arguments to update one Offices_cameras.
     * @example
     * // Update one Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends offices_camerasUpdateArgs>(args: SelectSubset<T, offices_camerasUpdateArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offices_cameras.
     * @param {offices_camerasDeleteManyArgs} args - Arguments to filter Offices_cameras to delete.
     * @example
     * // Delete a few Offices_cameras
     * const { count } = await prisma.offices_cameras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends offices_camerasDeleteManyArgs>(args?: SelectSubset<T, offices_camerasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offices_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_camerasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends offices_camerasUpdateManyArgs>(args: SelectSubset<T, offices_camerasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Offices_cameras.
     * @param {offices_camerasUpsertArgs} args - Arguments to update or create a Offices_cameras.
     * @example
     * // Update or create a Offices_cameras
     * const offices_cameras = await prisma.offices_cameras.upsert({
     *   create: {
     *     // ... data to create a Offices_cameras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offices_cameras we want to update
     *   }
     * })
     */
    upsert<T extends offices_camerasUpsertArgs>(args: SelectSubset<T, offices_camerasUpsertArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offices_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_camerasCountArgs} args - Arguments to filter Offices_cameras to count.
     * @example
     * // Count the number of Offices_cameras
     * const count = await prisma.offices_cameras.count({
     *   where: {
     *     // ... the filter for the Offices_cameras we want to count
     *   }
     * })
    **/
    count<T extends offices_camerasCountArgs>(
      args?: Subset<T, offices_camerasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Offices_camerasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offices_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Offices_camerasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Offices_camerasAggregateArgs>(args: Subset<T, Offices_camerasAggregateArgs>): Prisma.PrismaPromise<GetOffices_camerasAggregateType<T>>

    /**
     * Group by Offices_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_camerasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offices_camerasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offices_camerasGroupByArgs['orderBy'] }
        : { orderBy?: offices_camerasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offices_camerasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffices_camerasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offices_cameras model
   */
  readonly fields: offices_camerasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offices_cameras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offices_camerasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    live_stream_favourites<T extends offices_cameras$live_stream_favouritesArgs<ExtArgs> = {}>(args?: Subset<T, offices_cameras$live_stream_favouritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices<T extends offices_cameras$officesArgs<ExtArgs> = {}>(args?: Subset<T, offices_cameras$officesArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras<T extends offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs> = {}>(args?: Subset<T, offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras<T extends offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs> = {}>(args?: Subset<T, offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offices_cameras model
   */
  interface offices_camerasFieldRefs {
    readonly Id: FieldRef<"offices_cameras", 'Int'>
    readonly office_Id: FieldRef<"offices_cameras", 'Int'>
    readonly camera_Id: FieldRef<"offices_cameras", 'String'>
    readonly camera_english_name: FieldRef<"offices_cameras", 'String'>
    readonly camera_arabic_name: FieldRef<"offices_cameras", 'String'>
    readonly latitude: FieldRef<"offices_cameras", 'Decimal'>
    readonly longitude: FieldRef<"offices_cameras", 'Decimal'>
    readonly ip_address: FieldRef<"offices_cameras", 'String'>
    readonly last_active_date: FieldRef<"offices_cameras", 'DateTime'>
    readonly last_active_time: FieldRef<"offices_cameras", 'DateTime'>
    readonly status: FieldRef<"offices_cameras", 'String'>
    readonly createdAt: FieldRef<"offices_cameras", 'DateTime'>
    readonly updatedAt: FieldRef<"offices_cameras", 'DateTime'>
    readonly location: FieldRef<"offices_cameras", 'String'>
    readonly attendance: FieldRef<"offices_cameras", 'Boolean'>
    readonly footfall: FieldRef<"offices_cameras", 'Boolean'>
    readonly sentiment: FieldRef<"offices_cameras", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * offices_cameras findUnique
   */
  export type offices_camerasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * Filter, which offices_cameras to fetch.
     */
    where: offices_camerasWhereUniqueInput
  }

  /**
   * offices_cameras findUniqueOrThrow
   */
  export type offices_camerasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * Filter, which offices_cameras to fetch.
     */
    where: offices_camerasWhereUniqueInput
  }

  /**
   * offices_cameras findFirst
   */
  export type offices_camerasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * Filter, which offices_cameras to fetch.
     */
    where?: offices_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_cameras to fetch.
     */
    orderBy?: offices_camerasOrderByWithRelationInput | offices_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_cameras.
     */
    cursor?: offices_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_cameras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_cameras.
     */
    distinct?: Offices_camerasScalarFieldEnum | Offices_camerasScalarFieldEnum[]
  }

  /**
   * offices_cameras findFirstOrThrow
   */
  export type offices_camerasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * Filter, which offices_cameras to fetch.
     */
    where?: offices_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_cameras to fetch.
     */
    orderBy?: offices_camerasOrderByWithRelationInput | offices_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_cameras.
     */
    cursor?: offices_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_cameras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_cameras.
     */
    distinct?: Offices_camerasScalarFieldEnum | Offices_camerasScalarFieldEnum[]
  }

  /**
   * offices_cameras findMany
   */
  export type offices_camerasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * Filter, which offices_cameras to fetch.
     */
    where?: offices_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_cameras to fetch.
     */
    orderBy?: offices_camerasOrderByWithRelationInput | offices_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offices_cameras.
     */
    cursor?: offices_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_cameras.
     */
    skip?: number
    distinct?: Offices_camerasScalarFieldEnum | Offices_camerasScalarFieldEnum[]
  }

  /**
   * offices_cameras create
   */
  export type offices_camerasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * The data needed to create a offices_cameras.
     */
    data?: XOR<offices_camerasCreateInput, offices_camerasUncheckedCreateInput>
  }

  /**
   * offices_cameras createMany
   */
  export type offices_camerasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offices_cameras.
     */
    data: offices_camerasCreateManyInput | offices_camerasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offices_cameras update
   */
  export type offices_camerasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * The data needed to update a offices_cameras.
     */
    data: XOR<offices_camerasUpdateInput, offices_camerasUncheckedUpdateInput>
    /**
     * Choose, which offices_cameras to update.
     */
    where: offices_camerasWhereUniqueInput
  }

  /**
   * offices_cameras updateMany
   */
  export type offices_camerasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offices_cameras.
     */
    data: XOR<offices_camerasUpdateManyMutationInput, offices_camerasUncheckedUpdateManyInput>
    /**
     * Filter which offices_cameras to update
     */
    where?: offices_camerasWhereInput
    /**
     * Limit how many offices_cameras to update.
     */
    limit?: number
  }

  /**
   * offices_cameras upsert
   */
  export type offices_camerasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * The filter to search for the offices_cameras to update in case it exists.
     */
    where: offices_camerasWhereUniqueInput
    /**
     * In case the offices_cameras found by the `where` argument doesn't exist, create a new offices_cameras with this data.
     */
    create: XOR<offices_camerasCreateInput, offices_camerasUncheckedCreateInput>
    /**
     * In case the offices_cameras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offices_camerasUpdateInput, offices_camerasUncheckedUpdateInput>
  }

  /**
   * offices_cameras delete
   */
  export type offices_camerasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    /**
     * Filter which offices_cameras to delete.
     */
    where: offices_camerasWhereUniqueInput
  }

  /**
   * offices_cameras deleteMany
   */
  export type offices_camerasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_cameras to delete
     */
    where?: offices_camerasWhereInput
    /**
     * Limit how many offices_cameras to delete.
     */
    limit?: number
  }

  /**
   * offices_cameras.live_stream_favourites
   */
  export type offices_cameras$live_stream_favouritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    where?: live_stream_favouritesWhereInput
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    cursor?: live_stream_favouritesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Live_stream_favouritesScalarFieldEnum | Live_stream_favouritesScalarFieldEnum[]
  }

  /**
   * offices_cameras.offices
   */
  export type offices_cameras$officesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    where?: officesWhereInput
  }

  /**
   * offices_cameras.offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras
   */
  export type offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    where?: offices_sentiment_analysisWhereInput
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    cursor?: offices_sentiment_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_sentiment_analysisScalarFieldEnum | Offices_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * offices_cameras.offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras
   */
  export type offices_cameras$offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    where?: offices_sentiment_analysisWhereInput
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    cursor?: offices_sentiment_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_sentiment_analysisScalarFieldEnum | Offices_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * offices_cameras without action
   */
  export type offices_camerasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
  }


  /**
   * Model offices_sentiment_analysis
   */

  export type AggregateOffices_sentiment_analysis = {
    _count: Offices_sentiment_analysisCountAggregateOutputType | null
    _avg: Offices_sentiment_analysisAvgAggregateOutputType | null
    _sum: Offices_sentiment_analysisSumAggregateOutputType | null
    _min: Offices_sentiment_analysisMinAggregateOutputType | null
    _max: Offices_sentiment_analysisMaxAggregateOutputType | null
  }

  export type Offices_sentiment_analysisAvgAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    entry_camera_Id: number | null
    exit_camera_Id: number | null
  }

  export type Offices_sentiment_analysisSumAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    entry_camera_Id: number | null
    exit_camera_Id: number | null
  }

  export type Offices_sentiment_analysisMinAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    person_Id: string | null
    detection_Id: string | null
    person_name: string | null
    person_image: string | null
    gender: string | null
    check_in_image: string | null
    sentiment_of: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date: Date | null
    check_in_time: Date | null
    check_in_sentiment: string | null
    entry_camera_Id: number | null
    check_out_date: Date | null
    check_out_time: Date | null
    check_out_capture: string | null
    check_out_sentiment: string | null
    exit_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Offices_sentiment_analysisMaxAggregateOutputType = {
    Id: number | null
    office_Id: number | null
    person_Id: string | null
    detection_Id: string | null
    person_name: string | null
    person_image: string | null
    gender: string | null
    check_in_image: string | null
    sentiment_of: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date: Date | null
    check_in_time: Date | null
    check_in_sentiment: string | null
    entry_camera_Id: number | null
    check_out_date: Date | null
    check_out_time: Date | null
    check_out_capture: string | null
    check_out_sentiment: string | null
    exit_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Offices_sentiment_analysisCountAggregateOutputType = {
    Id: number
    office_Id: number
    person_Id: number
    detection_Id: number
    person_name: number
    person_image: number
    gender: number
    check_in_image: number
    sentiment_of: number
    check_in_date: number
    check_in_time: number
    check_in_sentiment: number
    entry_camera_Id: number
    check_out_date: number
    check_out_time: number
    check_out_capture: number
    check_out_sentiment: number
    exit_camera_Id: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Offices_sentiment_analysisAvgAggregateInputType = {
    Id?: true
    office_Id?: true
    entry_camera_Id?: true
    exit_camera_Id?: true
  }

  export type Offices_sentiment_analysisSumAggregateInputType = {
    Id?: true
    office_Id?: true
    entry_camera_Id?: true
    exit_camera_Id?: true
  }

  export type Offices_sentiment_analysisMinAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
    detection_Id?: true
    person_name?: true
    person_image?: true
    gender?: true
    check_in_image?: true
    sentiment_of?: true
    check_in_date?: true
    check_in_time?: true
    check_in_sentiment?: true
    entry_camera_Id?: true
    check_out_date?: true
    check_out_time?: true
    check_out_capture?: true
    check_out_sentiment?: true
    exit_camera_Id?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Offices_sentiment_analysisMaxAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
    detection_Id?: true
    person_name?: true
    person_image?: true
    gender?: true
    check_in_image?: true
    sentiment_of?: true
    check_in_date?: true
    check_in_time?: true
    check_in_sentiment?: true
    entry_camera_Id?: true
    check_out_date?: true
    check_out_time?: true
    check_out_capture?: true
    check_out_sentiment?: true
    exit_camera_Id?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Offices_sentiment_analysisCountAggregateInputType = {
    Id?: true
    office_Id?: true
    person_Id?: true
    detection_Id?: true
    person_name?: true
    person_image?: true
    gender?: true
    check_in_image?: true
    sentiment_of?: true
    check_in_date?: true
    check_in_time?: true
    check_in_sentiment?: true
    entry_camera_Id?: true
    check_out_date?: true
    check_out_time?: true
    check_out_capture?: true
    check_out_sentiment?: true
    exit_camera_Id?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Offices_sentiment_analysisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_sentiment_analysis to aggregate.
     */
    where?: offices_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_sentiment_analyses to fetch.
     */
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offices_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_sentiment_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offices_sentiment_analyses
    **/
    _count?: true | Offices_sentiment_analysisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Offices_sentiment_analysisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Offices_sentiment_analysisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Offices_sentiment_analysisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Offices_sentiment_analysisMaxAggregateInputType
  }

  export type GetOffices_sentiment_analysisAggregateType<T extends Offices_sentiment_analysisAggregateArgs> = {
        [P in keyof T & keyof AggregateOffices_sentiment_analysis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffices_sentiment_analysis[P]>
      : GetScalarType<T[P], AggregateOffices_sentiment_analysis[P]>
  }




  export type offices_sentiment_analysisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_sentiment_analysisWhereInput
    orderBy?: offices_sentiment_analysisOrderByWithAggregationInput | offices_sentiment_analysisOrderByWithAggregationInput[]
    by: Offices_sentiment_analysisScalarFieldEnum[] | Offices_sentiment_analysisScalarFieldEnum
    having?: offices_sentiment_analysisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Offices_sentiment_analysisCountAggregateInputType | true
    _avg?: Offices_sentiment_analysisAvgAggregateInputType
    _sum?: Offices_sentiment_analysisSumAggregateInputType
    _min?: Offices_sentiment_analysisMinAggregateInputType
    _max?: Offices_sentiment_analysisMaxAggregateInputType
  }

  export type Offices_sentiment_analysisGroupByOutputType = {
    Id: number
    office_Id: number | null
    person_Id: string | null
    detection_Id: string | null
    person_name: string | null
    person_image: string | null
    gender: string | null
    check_in_image: string | null
    sentiment_of: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date: Date | null
    check_in_time: Date | null
    check_in_sentiment: string | null
    entry_camera_Id: number | null
    check_out_date: Date | null
    check_out_time: Date | null
    check_out_capture: string | null
    check_out_sentiment: string | null
    exit_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date
    _count: Offices_sentiment_analysisCountAggregateOutputType | null
    _avg: Offices_sentiment_analysisAvgAggregateOutputType | null
    _sum: Offices_sentiment_analysisSumAggregateOutputType | null
    _min: Offices_sentiment_analysisMinAggregateOutputType | null
    _max: Offices_sentiment_analysisMaxAggregateOutputType | null
  }

  type GetOffices_sentiment_analysisGroupByPayload<T extends offices_sentiment_analysisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Offices_sentiment_analysisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Offices_sentiment_analysisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Offices_sentiment_analysisGroupByOutputType[P]>
            : GetScalarType<T[P], Offices_sentiment_analysisGroupByOutputType[P]>
        }
      >
    >


  export type offices_sentiment_analysisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    office_Id?: boolean
    person_Id?: boolean
    detection_Id?: boolean
    person_name?: boolean
    person_image?: boolean
    gender?: boolean
    check_in_image?: boolean
    sentiment_of?: boolean
    check_in_date?: boolean
    check_in_time?: boolean
    check_in_sentiment?: boolean
    entry_camera_Id?: boolean
    check_out_date?: boolean
    check_out_time?: boolean
    check_out_capture?: boolean
    check_out_sentiment?: boolean
    exit_camera_Id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    offices?: boolean | offices_sentiment_analysis$officesArgs<ExtArgs>
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: boolean | offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs>
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: boolean | offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs>
  }, ExtArgs["result"]["offices_sentiment_analysis"]>



  export type offices_sentiment_analysisSelectScalar = {
    Id?: boolean
    office_Id?: boolean
    person_Id?: boolean
    detection_Id?: boolean
    person_name?: boolean
    person_image?: boolean
    gender?: boolean
    check_in_image?: boolean
    sentiment_of?: boolean
    check_in_date?: boolean
    check_in_time?: boolean
    check_in_sentiment?: boolean
    entry_camera_Id?: boolean
    check_out_date?: boolean
    check_out_time?: boolean
    check_out_capture?: boolean
    check_out_sentiment?: boolean
    exit_camera_Id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type offices_sentiment_analysisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "office_Id" | "person_Id" | "detection_Id" | "person_name" | "person_image" | "gender" | "check_in_image" | "sentiment_of" | "check_in_date" | "check_in_time" | "check_in_sentiment" | "entry_camera_Id" | "check_out_date" | "check_out_time" | "check_out_capture" | "check_out_sentiment" | "exit_camera_Id" | "createdAt" | "updatedAt", ExtArgs["result"]["offices_sentiment_analysis"]>
  export type offices_sentiment_analysisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offices?: boolean | offices_sentiment_analysis$officesArgs<ExtArgs>
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: boolean | offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs>
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: boolean | offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs>
  }

  export type $offices_sentiment_analysisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offices_sentiment_analysis"
    objects: {
      offices: Prisma.$officesPayload<ExtArgs> | null
      offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras: Prisma.$offices_camerasPayload<ExtArgs> | null
      offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras: Prisma.$offices_camerasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      office_Id: number | null
      person_Id: string | null
      detection_Id: string | null
      person_name: string | null
      person_image: string | null
      gender: string | null
      check_in_image: string | null
      sentiment_of: $Enums.offices_sentiment_analysis_sentiment_of | null
      check_in_date: Date | null
      check_in_time: Date | null
      check_in_sentiment: string | null
      entry_camera_Id: number | null
      check_out_date: Date | null
      check_out_time: Date | null
      check_out_capture: string | null
      check_out_sentiment: string | null
      exit_camera_Id: number | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["offices_sentiment_analysis"]>
    composites: {}
  }

  type offices_sentiment_analysisGetPayload<S extends boolean | null | undefined | offices_sentiment_analysisDefaultArgs> = $Result.GetResult<Prisma.$offices_sentiment_analysisPayload, S>

  type offices_sentiment_analysisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<offices_sentiment_analysisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Offices_sentiment_analysisCountAggregateInputType | true
    }

  export interface offices_sentiment_analysisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offices_sentiment_analysis'], meta: { name: 'offices_sentiment_analysis' } }
    /**
     * Find zero or one Offices_sentiment_analysis that matches the filter.
     * @param {offices_sentiment_analysisFindUniqueArgs} args - Arguments to find a Offices_sentiment_analysis
     * @example
     * // Get one Offices_sentiment_analysis
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends offices_sentiment_analysisFindUniqueArgs>(args: SelectSubset<T, offices_sentiment_analysisFindUniqueArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offices_sentiment_analysis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {offices_sentiment_analysisFindUniqueOrThrowArgs} args - Arguments to find a Offices_sentiment_analysis
     * @example
     * // Get one Offices_sentiment_analysis
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends offices_sentiment_analysisFindUniqueOrThrowArgs>(args: SelectSubset<T, offices_sentiment_analysisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_sentiment_analysis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_sentiment_analysisFindFirstArgs} args - Arguments to find a Offices_sentiment_analysis
     * @example
     * // Get one Offices_sentiment_analysis
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends offices_sentiment_analysisFindFirstArgs>(args?: SelectSubset<T, offices_sentiment_analysisFindFirstArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_sentiment_analysis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_sentiment_analysisFindFirstOrThrowArgs} args - Arguments to find a Offices_sentiment_analysis
     * @example
     * // Get one Offices_sentiment_analysis
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends offices_sentiment_analysisFindFirstOrThrowArgs>(args?: SelectSubset<T, offices_sentiment_analysisFindFirstOrThrowArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offices_sentiment_analyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_sentiment_analysisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offices_sentiment_analyses
     * const offices_sentiment_analyses = await prisma.offices_sentiment_analysis.findMany()
     * 
     * // Get first 10 Offices_sentiment_analyses
     * const offices_sentiment_analyses = await prisma.offices_sentiment_analysis.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const offices_sentiment_analysisWithIdOnly = await prisma.offices_sentiment_analysis.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends offices_sentiment_analysisFindManyArgs>(args?: SelectSubset<T, offices_sentiment_analysisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offices_sentiment_analysis.
     * @param {offices_sentiment_analysisCreateArgs} args - Arguments to create a Offices_sentiment_analysis.
     * @example
     * // Create one Offices_sentiment_analysis
     * const Offices_sentiment_analysis = await prisma.offices_sentiment_analysis.create({
     *   data: {
     *     // ... data to create a Offices_sentiment_analysis
     *   }
     * })
     * 
     */
    create<T extends offices_sentiment_analysisCreateArgs>(args: SelectSubset<T, offices_sentiment_analysisCreateArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offices_sentiment_analyses.
     * @param {offices_sentiment_analysisCreateManyArgs} args - Arguments to create many Offices_sentiment_analyses.
     * @example
     * // Create many Offices_sentiment_analyses
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends offices_sentiment_analysisCreateManyArgs>(args?: SelectSubset<T, offices_sentiment_analysisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Offices_sentiment_analysis.
     * @param {offices_sentiment_analysisDeleteArgs} args - Arguments to delete one Offices_sentiment_analysis.
     * @example
     * // Delete one Offices_sentiment_analysis
     * const Offices_sentiment_analysis = await prisma.offices_sentiment_analysis.delete({
     *   where: {
     *     // ... filter to delete one Offices_sentiment_analysis
     *   }
     * })
     * 
     */
    delete<T extends offices_sentiment_analysisDeleteArgs>(args: SelectSubset<T, offices_sentiment_analysisDeleteArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offices_sentiment_analysis.
     * @param {offices_sentiment_analysisUpdateArgs} args - Arguments to update one Offices_sentiment_analysis.
     * @example
     * // Update one Offices_sentiment_analysis
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends offices_sentiment_analysisUpdateArgs>(args: SelectSubset<T, offices_sentiment_analysisUpdateArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offices_sentiment_analyses.
     * @param {offices_sentiment_analysisDeleteManyArgs} args - Arguments to filter Offices_sentiment_analyses to delete.
     * @example
     * // Delete a few Offices_sentiment_analyses
     * const { count } = await prisma.offices_sentiment_analysis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends offices_sentiment_analysisDeleteManyArgs>(args?: SelectSubset<T, offices_sentiment_analysisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offices_sentiment_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_sentiment_analysisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offices_sentiment_analyses
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends offices_sentiment_analysisUpdateManyArgs>(args: SelectSubset<T, offices_sentiment_analysisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Offices_sentiment_analysis.
     * @param {offices_sentiment_analysisUpsertArgs} args - Arguments to update or create a Offices_sentiment_analysis.
     * @example
     * // Update or create a Offices_sentiment_analysis
     * const offices_sentiment_analysis = await prisma.offices_sentiment_analysis.upsert({
     *   create: {
     *     // ... data to create a Offices_sentiment_analysis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offices_sentiment_analysis we want to update
     *   }
     * })
     */
    upsert<T extends offices_sentiment_analysisUpsertArgs>(args: SelectSubset<T, offices_sentiment_analysisUpsertArgs<ExtArgs>>): Prisma__offices_sentiment_analysisClient<$Result.GetResult<Prisma.$offices_sentiment_analysisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offices_sentiment_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_sentiment_analysisCountArgs} args - Arguments to filter Offices_sentiment_analyses to count.
     * @example
     * // Count the number of Offices_sentiment_analyses
     * const count = await prisma.offices_sentiment_analysis.count({
     *   where: {
     *     // ... the filter for the Offices_sentiment_analyses we want to count
     *   }
     * })
    **/
    count<T extends offices_sentiment_analysisCountArgs>(
      args?: Subset<T, offices_sentiment_analysisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Offices_sentiment_analysisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offices_sentiment_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Offices_sentiment_analysisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Offices_sentiment_analysisAggregateArgs>(args: Subset<T, Offices_sentiment_analysisAggregateArgs>): Prisma.PrismaPromise<GetOffices_sentiment_analysisAggregateType<T>>

    /**
     * Group by Offices_sentiment_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_sentiment_analysisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offices_sentiment_analysisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offices_sentiment_analysisGroupByArgs['orderBy'] }
        : { orderBy?: offices_sentiment_analysisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offices_sentiment_analysisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffices_sentiment_analysisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offices_sentiment_analysis model
   */
  readonly fields: offices_sentiment_analysisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offices_sentiment_analysis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offices_sentiment_analysisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    offices<T extends offices_sentiment_analysis$officesArgs<ExtArgs> = {}>(args?: Subset<T, offices_sentiment_analysis$officesArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras<T extends offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs> = {}>(args?: Subset<T, offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras<T extends offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs> = {}>(args?: Subset<T, offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs>>): Prisma__offices_camerasClient<$Result.GetResult<Prisma.$offices_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offices_sentiment_analysis model
   */
  interface offices_sentiment_analysisFieldRefs {
    readonly Id: FieldRef<"offices_sentiment_analysis", 'Int'>
    readonly office_Id: FieldRef<"offices_sentiment_analysis", 'Int'>
    readonly person_Id: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly detection_Id: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly person_name: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly person_image: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly gender: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly check_in_image: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly sentiment_of: FieldRef<"offices_sentiment_analysis", 'offices_sentiment_analysis_sentiment_of'>
    readonly check_in_date: FieldRef<"offices_sentiment_analysis", 'DateTime'>
    readonly check_in_time: FieldRef<"offices_sentiment_analysis", 'DateTime'>
    readonly check_in_sentiment: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly entry_camera_Id: FieldRef<"offices_sentiment_analysis", 'Int'>
    readonly check_out_date: FieldRef<"offices_sentiment_analysis", 'DateTime'>
    readonly check_out_time: FieldRef<"offices_sentiment_analysis", 'DateTime'>
    readonly check_out_capture: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly check_out_sentiment: FieldRef<"offices_sentiment_analysis", 'String'>
    readonly exit_camera_Id: FieldRef<"offices_sentiment_analysis", 'Int'>
    readonly createdAt: FieldRef<"offices_sentiment_analysis", 'DateTime'>
    readonly updatedAt: FieldRef<"offices_sentiment_analysis", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * offices_sentiment_analysis findUnique
   */
  export type offices_sentiment_analysisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_sentiment_analysis to fetch.
     */
    where: offices_sentiment_analysisWhereUniqueInput
  }

  /**
   * offices_sentiment_analysis findUniqueOrThrow
   */
  export type offices_sentiment_analysisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_sentiment_analysis to fetch.
     */
    where: offices_sentiment_analysisWhereUniqueInput
  }

  /**
   * offices_sentiment_analysis findFirst
   */
  export type offices_sentiment_analysisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_sentiment_analysis to fetch.
     */
    where?: offices_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_sentiment_analyses to fetch.
     */
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_sentiment_analyses.
     */
    cursor?: offices_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_sentiment_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_sentiment_analyses.
     */
    distinct?: Offices_sentiment_analysisScalarFieldEnum | Offices_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * offices_sentiment_analysis findFirstOrThrow
   */
  export type offices_sentiment_analysisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_sentiment_analysis to fetch.
     */
    where?: offices_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_sentiment_analyses to fetch.
     */
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_sentiment_analyses.
     */
    cursor?: offices_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_sentiment_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_sentiment_analyses.
     */
    distinct?: Offices_sentiment_analysisScalarFieldEnum | Offices_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * offices_sentiment_analysis findMany
   */
  export type offices_sentiment_analysisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_sentiment_analyses to fetch.
     */
    where?: offices_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_sentiment_analyses to fetch.
     */
    orderBy?: offices_sentiment_analysisOrderByWithRelationInput | offices_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offices_sentiment_analyses.
     */
    cursor?: offices_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_sentiment_analyses.
     */
    skip?: number
    distinct?: Offices_sentiment_analysisScalarFieldEnum | Offices_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * offices_sentiment_analysis create
   */
  export type offices_sentiment_analysisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * The data needed to create a offices_sentiment_analysis.
     */
    data?: XOR<offices_sentiment_analysisCreateInput, offices_sentiment_analysisUncheckedCreateInput>
  }

  /**
   * offices_sentiment_analysis createMany
   */
  export type offices_sentiment_analysisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offices_sentiment_analyses.
     */
    data: offices_sentiment_analysisCreateManyInput | offices_sentiment_analysisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offices_sentiment_analysis update
   */
  export type offices_sentiment_analysisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * The data needed to update a offices_sentiment_analysis.
     */
    data: XOR<offices_sentiment_analysisUpdateInput, offices_sentiment_analysisUncheckedUpdateInput>
    /**
     * Choose, which offices_sentiment_analysis to update.
     */
    where: offices_sentiment_analysisWhereUniqueInput
  }

  /**
   * offices_sentiment_analysis updateMany
   */
  export type offices_sentiment_analysisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offices_sentiment_analyses.
     */
    data: XOR<offices_sentiment_analysisUpdateManyMutationInput, offices_sentiment_analysisUncheckedUpdateManyInput>
    /**
     * Filter which offices_sentiment_analyses to update
     */
    where?: offices_sentiment_analysisWhereInput
    /**
     * Limit how many offices_sentiment_analyses to update.
     */
    limit?: number
  }

  /**
   * offices_sentiment_analysis upsert
   */
  export type offices_sentiment_analysisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * The filter to search for the offices_sentiment_analysis to update in case it exists.
     */
    where: offices_sentiment_analysisWhereUniqueInput
    /**
     * In case the offices_sentiment_analysis found by the `where` argument doesn't exist, create a new offices_sentiment_analysis with this data.
     */
    create: XOR<offices_sentiment_analysisCreateInput, offices_sentiment_analysisUncheckedCreateInput>
    /**
     * In case the offices_sentiment_analysis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offices_sentiment_analysisUpdateInput, offices_sentiment_analysisUncheckedUpdateInput>
  }

  /**
   * offices_sentiment_analysis delete
   */
  export type offices_sentiment_analysisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter which offices_sentiment_analysis to delete.
     */
    where: offices_sentiment_analysisWhereUniqueInput
  }

  /**
   * offices_sentiment_analysis deleteMany
   */
  export type offices_sentiment_analysisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_sentiment_analyses to delete
     */
    where?: offices_sentiment_analysisWhereInput
    /**
     * Limit how many offices_sentiment_analyses to delete.
     */
    limit?: number
  }

  /**
   * offices_sentiment_analysis.offices
   */
  export type offices_sentiment_analysis$officesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices
     */
    select?: officesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices
     */
    omit?: officesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: officesInclude<ExtArgs> | null
    where?: officesWhereInput
  }

  /**
   * offices_sentiment_analysis.offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras
   */
  export type offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    where?: offices_camerasWhereInput
  }

  /**
   * offices_sentiment_analysis.offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras
   */
  export type offices_sentiment_analysis$offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_cameras
     */
    select?: offices_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_cameras
     */
    omit?: offices_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_camerasInclude<ExtArgs> | null
    where?: offices_camerasWhereInput
  }

  /**
   * offices_sentiment_analysis without action
   */
  export type offices_sentiment_analysisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_sentiment_analysis
     */
    select?: offices_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_sentiment_analysis
     */
    omit?: offices_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_sentiment_analysisInclude<ExtArgs> | null
  }


  /**
   * Model park_cameras
   */

  export type AggregatePark_cameras = {
    _count: Park_camerasCountAggregateOutputType | null
    _avg: Park_camerasAvgAggregateOutputType | null
    _sum: Park_camerasSumAggregateOutputType | null
    _min: Park_camerasMinAggregateOutputType | null
    _max: Park_camerasMaxAggregateOutputType | null
  }

  export type Park_camerasAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type Park_camerasSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type Park_camerasMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: string | null
    camera_english_name: string | null
    camera_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    ip_address: string | null
    last_active_date: Date | null
    last_active_time: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
    attendance: boolean | null
    footfall: boolean | null
    sentiment: boolean | null
    behaviour: boolean | null
    irrigation: boolean | null
    landscaping: boolean | null
    litter_detection: boolean | null
    smoking_detection: boolean | null
    intrusion: boolean | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
  }

  export type Park_camerasMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: string | null
    camera_english_name: string | null
    camera_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    ip_address: string | null
    last_active_date: Date | null
    last_active_time: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
    attendance: boolean | null
    footfall: boolean | null
    sentiment: boolean | null
    behaviour: boolean | null
    irrigation: boolean | null
    landscaping: boolean | null
    litter_detection: boolean | null
    smoking_detection: boolean | null
    intrusion: boolean | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
  }

  export type Park_camerasCountAggregateOutputType = {
    Id: number
    park_Id: number
    camera_Id: number
    camera_english_name: number
    camera_arabic_name: number
    latitude: number
    longitude: number
    ip_address: number
    last_active_date: number
    last_active_time: number
    status: number
    createdAt: number
    updatedAt: number
    location: number
    attendance: number
    footfall: number
    sentiment: number
    behaviour: number
    irrigation: number
    landscaping: number
    litter_detection: number
    smoking_detection: number
    intrusion: number
    stream_url: number
    stream_api_key: number
    stream_path: number
    password: number
    _all: number
  }


  export type Park_camerasAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    latitude?: true
    longitude?: true
  }

  export type Park_camerasSumAggregateInputType = {
    Id?: true
    park_Id?: true
    latitude?: true
    longitude?: true
  }

  export type Park_camerasMinAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
    camera_english_name?: true
    camera_arabic_name?: true
    latitude?: true
    longitude?: true
    ip_address?: true
    last_active_date?: true
    last_active_time?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    attendance?: true
    footfall?: true
    sentiment?: true
    behaviour?: true
    irrigation?: true
    landscaping?: true
    litter_detection?: true
    smoking_detection?: true
    intrusion?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
  }

  export type Park_camerasMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
    camera_english_name?: true
    camera_arabic_name?: true
    latitude?: true
    longitude?: true
    ip_address?: true
    last_active_date?: true
    last_active_time?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    attendance?: true
    footfall?: true
    sentiment?: true
    behaviour?: true
    irrigation?: true
    landscaping?: true
    litter_detection?: true
    smoking_detection?: true
    intrusion?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
  }

  export type Park_camerasCountAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
    camera_english_name?: true
    camera_arabic_name?: true
    latitude?: true
    longitude?: true
    ip_address?: true
    last_active_date?: true
    last_active_time?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    attendance?: true
    footfall?: true
    sentiment?: true
    behaviour?: true
    irrigation?: true
    landscaping?: true
    litter_detection?: true
    smoking_detection?: true
    intrusion?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    _all?: true
  }

  export type Park_camerasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which park_cameras to aggregate.
     */
    where?: park_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_cameras to fetch.
     */
    orderBy?: park_camerasOrderByWithRelationInput | park_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: park_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_cameras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned park_cameras
    **/
    _count?: true | Park_camerasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Park_camerasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Park_camerasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Park_camerasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Park_camerasMaxAggregateInputType
  }

  export type GetPark_camerasAggregateType<T extends Park_camerasAggregateArgs> = {
        [P in keyof T & keyof AggregatePark_cameras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePark_cameras[P]>
      : GetScalarType<T[P], AggregatePark_cameras[P]>
  }




  export type park_camerasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: park_camerasWhereInput
    orderBy?: park_camerasOrderByWithAggregationInput | park_camerasOrderByWithAggregationInput[]
    by: Park_camerasScalarFieldEnum[] | Park_camerasScalarFieldEnum
    having?: park_camerasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Park_camerasCountAggregateInputType | true
    _avg?: Park_camerasAvgAggregateInputType
    _sum?: Park_camerasSumAggregateInputType
    _min?: Park_camerasMinAggregateInputType
    _max?: Park_camerasMaxAggregateInputType
  }

  export type Park_camerasGroupByOutputType = {
    Id: number
    park_Id: number | null
    camera_Id: string | null
    camera_english_name: string | null
    camera_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    ip_address: string | null
    last_active_date: Date | null
    last_active_time: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date
    location: string | null
    attendance: boolean | null
    footfall: boolean | null
    sentiment: boolean | null
    behaviour: boolean | null
    irrigation: boolean | null
    landscaping: boolean | null
    litter_detection: boolean | null
    smoking_detection: boolean | null
    intrusion: boolean | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    _count: Park_camerasCountAggregateOutputType | null
    _avg: Park_camerasAvgAggregateOutputType | null
    _sum: Park_camerasSumAggregateOutputType | null
    _min: Park_camerasMinAggregateOutputType | null
    _max: Park_camerasMaxAggregateOutputType | null
  }

  type GetPark_camerasGroupByPayload<T extends park_camerasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Park_camerasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Park_camerasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Park_camerasGroupByOutputType[P]>
            : GetScalarType<T[P], Park_camerasGroupByOutputType[P]>
        }
      >
    >


  export type park_camerasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    camera_Id?: boolean
    camera_english_name?: boolean
    camera_arabic_name?: boolean
    latitude?: boolean
    longitude?: boolean
    ip_address?: boolean
    last_active_date?: boolean
    last_active_time?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    behaviour?: boolean
    irrigation?: boolean
    landscaping?: boolean
    litter_detection?: boolean
    smoking_detection?: boolean
    intrusion?: boolean
    stream_url?: boolean
    stream_api_key?: boolean
    stream_path?: boolean
    password?: boolean
    live_stream_favourites?: boolean | park_cameras$live_stream_favouritesArgs<ExtArgs>
    parks?: boolean | park_cameras$parksArgs<ExtArgs>
    parks_behaviour_alerts?: boolean | park_cameras$parks_behaviour_alertsArgs<ExtArgs>
    parks_intrusion_detection?: boolean | park_cameras$parks_intrusion_detectionArgs<ExtArgs>
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: boolean | park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs>
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: boolean | park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs>
    parks_smoking_detection?: boolean | park_cameras$parks_smoking_detectionArgs<ExtArgs>
    parks_landscaping?: boolean | park_cameras$parks_landscapingArgs<ExtArgs>
    parks_litter_detection?: boolean | park_cameras$parks_litter_detectionArgs<ExtArgs>
    _count?: boolean | Park_camerasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["park_cameras"]>



  export type park_camerasSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    camera_Id?: boolean
    camera_english_name?: boolean
    camera_arabic_name?: boolean
    latitude?: boolean
    longitude?: boolean
    ip_address?: boolean
    last_active_date?: boolean
    last_active_time?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    behaviour?: boolean
    irrigation?: boolean
    landscaping?: boolean
    litter_detection?: boolean
    smoking_detection?: boolean
    intrusion?: boolean
    stream_url?: boolean
    stream_api_key?: boolean
    stream_path?: boolean
    password?: boolean
  }

  export type park_camerasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "camera_Id" | "camera_english_name" | "camera_arabic_name" | "latitude" | "longitude" | "ip_address" | "last_active_date" | "last_active_time" | "status" | "createdAt" | "updatedAt" | "location" | "attendance" | "footfall" | "sentiment" | "behaviour" | "irrigation" | "landscaping" | "litter_detection" | "smoking_detection" | "intrusion" | "stream_url" | "stream_api_key" | "stream_path" | "password", ExtArgs["result"]["park_cameras"]>
  export type park_camerasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    live_stream_favourites?: boolean | park_cameras$live_stream_favouritesArgs<ExtArgs>
    parks?: boolean | park_cameras$parksArgs<ExtArgs>
    parks_behaviour_alerts?: boolean | park_cameras$parks_behaviour_alertsArgs<ExtArgs>
    parks_intrusion_detection?: boolean | park_cameras$parks_intrusion_detectionArgs<ExtArgs>
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: boolean | park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs>
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: boolean | park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs>
    parks_smoking_detection?: boolean | park_cameras$parks_smoking_detectionArgs<ExtArgs>
    parks_landscaping?: boolean | park_cameras$parks_landscapingArgs<ExtArgs>
    parks_litter_detection?: boolean | park_cameras$parks_litter_detectionArgs<ExtArgs>
    _count?: boolean | Park_camerasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $park_camerasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "park_cameras"
    objects: {
      live_stream_favourites: Prisma.$live_stream_favouritesPayload<ExtArgs>[]
      parks: Prisma.$parksPayload<ExtArgs> | null
      parks_behaviour_alerts: Prisma.$parks_behaviour_alertsPayload<ExtArgs>[]
      parks_intrusion_detection: Prisma.$parks_intrusion_detectionPayload<ExtArgs>[]
      parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras: Prisma.$parks_sentiment_analysisPayload<ExtArgs>[]
      parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras: Prisma.$parks_sentiment_analysisPayload<ExtArgs>[]
      parks_smoking_detection: Prisma.$parks_smoking_detectionPayload<ExtArgs>[]
      parks_landscaping: Prisma.$parks_landscapingPayload<ExtArgs>[]
      parks_litter_detection: Prisma.$parks_litter_detectionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      camera_Id: string | null
      camera_english_name: string | null
      camera_arabic_name: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      ip_address: string | null
      last_active_date: Date | null
      last_active_time: Date | null
      status: string | null
      createdAt: Date | null
      updatedAt: Date
      location: string | null
      attendance: boolean | null
      footfall: boolean | null
      sentiment: boolean | null
      behaviour: boolean | null
      irrigation: boolean | null
      landscaping: boolean | null
      litter_detection: boolean | null
      smoking_detection: boolean | null
      intrusion: boolean | null
      stream_url: string | null
      stream_api_key: string | null
      stream_path: string | null
      password: string | null
    }, ExtArgs["result"]["park_cameras"]>
    composites: {}
  }

  type park_camerasGetPayload<S extends boolean | null | undefined | park_camerasDefaultArgs> = $Result.GetResult<Prisma.$park_camerasPayload, S>

  type park_camerasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<park_camerasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Park_camerasCountAggregateInputType | true
    }

  export interface park_camerasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['park_cameras'], meta: { name: 'park_cameras' } }
    /**
     * Find zero or one Park_cameras that matches the filter.
     * @param {park_camerasFindUniqueArgs} args - Arguments to find a Park_cameras
     * @example
     * // Get one Park_cameras
     * const park_cameras = await prisma.park_cameras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends park_camerasFindUniqueArgs>(args: SelectSubset<T, park_camerasFindUniqueArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Park_cameras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {park_camerasFindUniqueOrThrowArgs} args - Arguments to find a Park_cameras
     * @example
     * // Get one Park_cameras
     * const park_cameras = await prisma.park_cameras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends park_camerasFindUniqueOrThrowArgs>(args: SelectSubset<T, park_camerasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Park_cameras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_camerasFindFirstArgs} args - Arguments to find a Park_cameras
     * @example
     * // Get one Park_cameras
     * const park_cameras = await prisma.park_cameras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends park_camerasFindFirstArgs>(args?: SelectSubset<T, park_camerasFindFirstArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Park_cameras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_camerasFindFirstOrThrowArgs} args - Arguments to find a Park_cameras
     * @example
     * // Get one Park_cameras
     * const park_cameras = await prisma.park_cameras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends park_camerasFindFirstOrThrowArgs>(args?: SelectSubset<T, park_camerasFindFirstOrThrowArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Park_cameras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_camerasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Park_cameras
     * const park_cameras = await prisma.park_cameras.findMany()
     * 
     * // Get first 10 Park_cameras
     * const park_cameras = await prisma.park_cameras.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const park_camerasWithIdOnly = await prisma.park_cameras.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends park_camerasFindManyArgs>(args?: SelectSubset<T, park_camerasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Park_cameras.
     * @param {park_camerasCreateArgs} args - Arguments to create a Park_cameras.
     * @example
     * // Create one Park_cameras
     * const Park_cameras = await prisma.park_cameras.create({
     *   data: {
     *     // ... data to create a Park_cameras
     *   }
     * })
     * 
     */
    create<T extends park_camerasCreateArgs>(args: SelectSubset<T, park_camerasCreateArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Park_cameras.
     * @param {park_camerasCreateManyArgs} args - Arguments to create many Park_cameras.
     * @example
     * // Create many Park_cameras
     * const park_cameras = await prisma.park_cameras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends park_camerasCreateManyArgs>(args?: SelectSubset<T, park_camerasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Park_cameras.
     * @param {park_camerasDeleteArgs} args - Arguments to delete one Park_cameras.
     * @example
     * // Delete one Park_cameras
     * const Park_cameras = await prisma.park_cameras.delete({
     *   where: {
     *     // ... filter to delete one Park_cameras
     *   }
     * })
     * 
     */
    delete<T extends park_camerasDeleteArgs>(args: SelectSubset<T, park_camerasDeleteArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Park_cameras.
     * @param {park_camerasUpdateArgs} args - Arguments to update one Park_cameras.
     * @example
     * // Update one Park_cameras
     * const park_cameras = await prisma.park_cameras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends park_camerasUpdateArgs>(args: SelectSubset<T, park_camerasUpdateArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Park_cameras.
     * @param {park_camerasDeleteManyArgs} args - Arguments to filter Park_cameras to delete.
     * @example
     * // Delete a few Park_cameras
     * const { count } = await prisma.park_cameras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends park_camerasDeleteManyArgs>(args?: SelectSubset<T, park_camerasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Park_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_camerasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Park_cameras
     * const park_cameras = await prisma.park_cameras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends park_camerasUpdateManyArgs>(args: SelectSubset<T, park_camerasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Park_cameras.
     * @param {park_camerasUpsertArgs} args - Arguments to update or create a Park_cameras.
     * @example
     * // Update or create a Park_cameras
     * const park_cameras = await prisma.park_cameras.upsert({
     *   create: {
     *     // ... data to create a Park_cameras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Park_cameras we want to update
     *   }
     * })
     */
    upsert<T extends park_camerasUpsertArgs>(args: SelectSubset<T, park_camerasUpsertArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Park_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_camerasCountArgs} args - Arguments to filter Park_cameras to count.
     * @example
     * // Count the number of Park_cameras
     * const count = await prisma.park_cameras.count({
     *   where: {
     *     // ... the filter for the Park_cameras we want to count
     *   }
     * })
    **/
    count<T extends park_camerasCountArgs>(
      args?: Subset<T, park_camerasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Park_camerasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Park_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Park_camerasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Park_camerasAggregateArgs>(args: Subset<T, Park_camerasAggregateArgs>): Prisma.PrismaPromise<GetPark_camerasAggregateType<T>>

    /**
     * Group by Park_cameras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_camerasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends park_camerasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: park_camerasGroupByArgs['orderBy'] }
        : { orderBy?: park_camerasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, park_camerasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPark_camerasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the park_cameras model
   */
  readonly fields: park_camerasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for park_cameras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__park_camerasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    live_stream_favourites<T extends park_cameras$live_stream_favouritesArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$live_stream_favouritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks<T extends park_cameras$parksArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    parks_behaviour_alerts<T extends park_cameras$parks_behaviour_alertsArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_behaviour_alertsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_intrusion_detection<T extends park_cameras$parks_intrusion_detectionArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_intrusion_detectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras<T extends park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras<T extends park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_smoking_detection<T extends park_cameras$parks_smoking_detectionArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_smoking_detectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_landscaping<T extends park_cameras$parks_landscapingArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_landscapingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_litter_detection<T extends park_cameras$parks_litter_detectionArgs<ExtArgs> = {}>(args?: Subset<T, park_cameras$parks_litter_detectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the park_cameras model
   */
  interface park_camerasFieldRefs {
    readonly Id: FieldRef<"park_cameras", 'Int'>
    readonly park_Id: FieldRef<"park_cameras", 'Int'>
    readonly camera_Id: FieldRef<"park_cameras", 'String'>
    readonly camera_english_name: FieldRef<"park_cameras", 'String'>
    readonly camera_arabic_name: FieldRef<"park_cameras", 'String'>
    readonly latitude: FieldRef<"park_cameras", 'Decimal'>
    readonly longitude: FieldRef<"park_cameras", 'Decimal'>
    readonly ip_address: FieldRef<"park_cameras", 'String'>
    readonly last_active_date: FieldRef<"park_cameras", 'DateTime'>
    readonly last_active_time: FieldRef<"park_cameras", 'DateTime'>
    readonly status: FieldRef<"park_cameras", 'String'>
    readonly createdAt: FieldRef<"park_cameras", 'DateTime'>
    readonly updatedAt: FieldRef<"park_cameras", 'DateTime'>
    readonly location: FieldRef<"park_cameras", 'String'>
    readonly attendance: FieldRef<"park_cameras", 'Boolean'>
    readonly footfall: FieldRef<"park_cameras", 'Boolean'>
    readonly sentiment: FieldRef<"park_cameras", 'Boolean'>
    readonly behaviour: FieldRef<"park_cameras", 'Boolean'>
    readonly irrigation: FieldRef<"park_cameras", 'Boolean'>
    readonly landscaping: FieldRef<"park_cameras", 'Boolean'>
    readonly litter_detection: FieldRef<"park_cameras", 'Boolean'>
    readonly smoking_detection: FieldRef<"park_cameras", 'Boolean'>
    readonly intrusion: FieldRef<"park_cameras", 'Boolean'>
    readonly stream_url: FieldRef<"park_cameras", 'String'>
    readonly stream_api_key: FieldRef<"park_cameras", 'String'>
    readonly stream_path: FieldRef<"park_cameras", 'String'>
    readonly password: FieldRef<"park_cameras", 'String'>
  }
    

  // Custom InputTypes
  /**
   * park_cameras findUnique
   */
  export type park_camerasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * Filter, which park_cameras to fetch.
     */
    where: park_camerasWhereUniqueInput
  }

  /**
   * park_cameras findUniqueOrThrow
   */
  export type park_camerasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * Filter, which park_cameras to fetch.
     */
    where: park_camerasWhereUniqueInput
  }

  /**
   * park_cameras findFirst
   */
  export type park_camerasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * Filter, which park_cameras to fetch.
     */
    where?: park_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_cameras to fetch.
     */
    orderBy?: park_camerasOrderByWithRelationInput | park_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for park_cameras.
     */
    cursor?: park_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_cameras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of park_cameras.
     */
    distinct?: Park_camerasScalarFieldEnum | Park_camerasScalarFieldEnum[]
  }

  /**
   * park_cameras findFirstOrThrow
   */
  export type park_camerasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * Filter, which park_cameras to fetch.
     */
    where?: park_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_cameras to fetch.
     */
    orderBy?: park_camerasOrderByWithRelationInput | park_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for park_cameras.
     */
    cursor?: park_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_cameras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of park_cameras.
     */
    distinct?: Park_camerasScalarFieldEnum | Park_camerasScalarFieldEnum[]
  }

  /**
   * park_cameras findMany
   */
  export type park_camerasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * Filter, which park_cameras to fetch.
     */
    where?: park_camerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_cameras to fetch.
     */
    orderBy?: park_camerasOrderByWithRelationInput | park_camerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing park_cameras.
     */
    cursor?: park_camerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_cameras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_cameras.
     */
    skip?: number
    distinct?: Park_camerasScalarFieldEnum | Park_camerasScalarFieldEnum[]
  }

  /**
   * park_cameras create
   */
  export type park_camerasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * The data needed to create a park_cameras.
     */
    data?: XOR<park_camerasCreateInput, park_camerasUncheckedCreateInput>
  }

  /**
   * park_cameras createMany
   */
  export type park_camerasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many park_cameras.
     */
    data: park_camerasCreateManyInput | park_camerasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * park_cameras update
   */
  export type park_camerasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * The data needed to update a park_cameras.
     */
    data: XOR<park_camerasUpdateInput, park_camerasUncheckedUpdateInput>
    /**
     * Choose, which park_cameras to update.
     */
    where: park_camerasWhereUniqueInput
  }

  /**
   * park_cameras updateMany
   */
  export type park_camerasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update park_cameras.
     */
    data: XOR<park_camerasUpdateManyMutationInput, park_camerasUncheckedUpdateManyInput>
    /**
     * Filter which park_cameras to update
     */
    where?: park_camerasWhereInput
    /**
     * Limit how many park_cameras to update.
     */
    limit?: number
  }

  /**
   * park_cameras upsert
   */
  export type park_camerasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * The filter to search for the park_cameras to update in case it exists.
     */
    where: park_camerasWhereUniqueInput
    /**
     * In case the park_cameras found by the `where` argument doesn't exist, create a new park_cameras with this data.
     */
    create: XOR<park_camerasCreateInput, park_camerasUncheckedCreateInput>
    /**
     * In case the park_cameras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<park_camerasUpdateInput, park_camerasUncheckedUpdateInput>
  }

  /**
   * park_cameras delete
   */
  export type park_camerasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    /**
     * Filter which park_cameras to delete.
     */
    where: park_camerasWhereUniqueInput
  }

  /**
   * park_cameras deleteMany
   */
  export type park_camerasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which park_cameras to delete
     */
    where?: park_camerasWhereInput
    /**
     * Limit how many park_cameras to delete.
     */
    limit?: number
  }

  /**
   * park_cameras.live_stream_favourites
   */
  export type park_cameras$live_stream_favouritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    where?: live_stream_favouritesWhereInput
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    cursor?: live_stream_favouritesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Live_stream_favouritesScalarFieldEnum | Live_stream_favouritesScalarFieldEnum[]
  }

  /**
   * park_cameras.parks
   */
  export type park_cameras$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * park_cameras.parks_behaviour_alerts
   */
  export type park_cameras$parks_behaviour_alertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    where?: parks_behaviour_alertsWhereInput
    orderBy?: parks_behaviour_alertsOrderByWithRelationInput | parks_behaviour_alertsOrderByWithRelationInput[]
    cursor?: parks_behaviour_alertsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_behaviour_alertsScalarFieldEnum | Parks_behaviour_alertsScalarFieldEnum[]
  }

  /**
   * park_cameras.parks_intrusion_detection
   */
  export type park_cameras$parks_intrusion_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    where?: parks_intrusion_detectionWhereInput
    orderBy?: parks_intrusion_detectionOrderByWithRelationInput | parks_intrusion_detectionOrderByWithRelationInput[]
    cursor?: parks_intrusion_detectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_intrusion_detectionScalarFieldEnum | Parks_intrusion_detectionScalarFieldEnum[]
  }

  /**
   * park_cameras.parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras
   */
  export type park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    where?: parks_sentiment_analysisWhereInput
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    cursor?: parks_sentiment_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_sentiment_analysisScalarFieldEnum | Parks_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * park_cameras.parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras
   */
  export type park_cameras$parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    where?: parks_sentiment_analysisWhereInput
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    cursor?: parks_sentiment_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_sentiment_analysisScalarFieldEnum | Parks_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * park_cameras.parks_smoking_detection
   */
  export type park_cameras$parks_smoking_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    where?: parks_smoking_detectionWhereInput
    orderBy?: parks_smoking_detectionOrderByWithRelationInput | parks_smoking_detectionOrderByWithRelationInput[]
    cursor?: parks_smoking_detectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_smoking_detectionScalarFieldEnum | Parks_smoking_detectionScalarFieldEnum[]
  }

  /**
   * park_cameras.parks_landscaping
   */
  export type park_cameras$parks_landscapingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    where?: parks_landscapingWhereInput
    orderBy?: parks_landscapingOrderByWithRelationInput | parks_landscapingOrderByWithRelationInput[]
    cursor?: parks_landscapingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_landscapingScalarFieldEnum | Parks_landscapingScalarFieldEnum[]
  }

  /**
   * park_cameras.parks_litter_detection
   */
  export type park_cameras$parks_litter_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    where?: parks_litter_detectionWhereInput
    orderBy?: parks_litter_detectionOrderByWithRelationInput | parks_litter_detectionOrderByWithRelationInput[]
    cursor?: parks_litter_detectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_litter_detectionScalarFieldEnum | Parks_litter_detectionScalarFieldEnum[]
  }

  /**
   * park_cameras without action
   */
  export type park_camerasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
  }


  /**
   * Model park_streams
   */

  export type AggregatePark_streams = {
    _count: Park_streamsCountAggregateOutputType | null
    _avg: Park_streamsAvgAggregateOutputType | null
    _sum: Park_streamsSumAggregateOutputType | null
    _min: Park_streamsMinAggregateOutputType | null
    _max: Park_streamsMaxAggregateOutputType | null
  }

  export type Park_streamsAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
  }

  export type Park_streamsSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
  }

  export type Park_streamsMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Park_streamsMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Park_streamsCountAggregateOutputType = {
    Id: number
    park_Id: number
    stream_url: number
    stream_api_key: number
    stream_path: number
    password: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Park_streamsAvgAggregateInputType = {
    Id?: true
    park_Id?: true
  }

  export type Park_streamsSumAggregateInputType = {
    Id?: true
    park_Id?: true
  }

  export type Park_streamsMinAggregateInputType = {
    Id?: true
    park_Id?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Park_streamsMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Park_streamsCountAggregateInputType = {
    Id?: true
    park_Id?: true
    stream_url?: true
    stream_api_key?: true
    stream_path?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Park_streamsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which park_streams to aggregate.
     */
    where?: park_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_streams to fetch.
     */
    orderBy?: park_streamsOrderByWithRelationInput | park_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: park_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_streams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned park_streams
    **/
    _count?: true | Park_streamsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Park_streamsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Park_streamsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Park_streamsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Park_streamsMaxAggregateInputType
  }

  export type GetPark_streamsAggregateType<T extends Park_streamsAggregateArgs> = {
        [P in keyof T & keyof AggregatePark_streams]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePark_streams[P]>
      : GetScalarType<T[P], AggregatePark_streams[P]>
  }




  export type park_streamsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: park_streamsWhereInput
    orderBy?: park_streamsOrderByWithAggregationInput | park_streamsOrderByWithAggregationInput[]
    by: Park_streamsScalarFieldEnum[] | Park_streamsScalarFieldEnum
    having?: park_streamsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Park_streamsCountAggregateInputType | true
    _avg?: Park_streamsAvgAggregateInputType
    _sum?: Park_streamsSumAggregateInputType
    _min?: Park_streamsMinAggregateInputType
    _max?: Park_streamsMaxAggregateInputType
  }

  export type Park_streamsGroupByOutputType = {
    Id: number
    park_Id: number | null
    stream_url: string | null
    stream_api_key: string | null
    stream_path: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Park_streamsCountAggregateOutputType | null
    _avg: Park_streamsAvgAggregateOutputType | null
    _sum: Park_streamsSumAggregateOutputType | null
    _min: Park_streamsMinAggregateOutputType | null
    _max: Park_streamsMaxAggregateOutputType | null
  }

  type GetPark_streamsGroupByPayload<T extends park_streamsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Park_streamsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Park_streamsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Park_streamsGroupByOutputType[P]>
            : GetScalarType<T[P], Park_streamsGroupByOutputType[P]>
        }
      >
    >


  export type park_streamsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    stream_url?: boolean
    stream_api_key?: boolean
    stream_path?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | park_streams$parksArgs<ExtArgs>
  }, ExtArgs["result"]["park_streams"]>



  export type park_streamsSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    stream_url?: boolean
    stream_api_key?: boolean
    stream_path?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type park_streamsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "stream_url" | "stream_api_key" | "stream_path" | "password" | "createdAt" | "updatedAt", ExtArgs["result"]["park_streams"]>
  export type park_streamsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | park_streams$parksArgs<ExtArgs>
  }

  export type $park_streamsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "park_streams"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      stream_url: string | null
      stream_api_key: string | null
      stream_path: string | null
      password: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["park_streams"]>
    composites: {}
  }

  type park_streamsGetPayload<S extends boolean | null | undefined | park_streamsDefaultArgs> = $Result.GetResult<Prisma.$park_streamsPayload, S>

  type park_streamsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<park_streamsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Park_streamsCountAggregateInputType | true
    }

  export interface park_streamsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['park_streams'], meta: { name: 'park_streams' } }
    /**
     * Find zero or one Park_streams that matches the filter.
     * @param {park_streamsFindUniqueArgs} args - Arguments to find a Park_streams
     * @example
     * // Get one Park_streams
     * const park_streams = await prisma.park_streams.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends park_streamsFindUniqueArgs>(args: SelectSubset<T, park_streamsFindUniqueArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Park_streams that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {park_streamsFindUniqueOrThrowArgs} args - Arguments to find a Park_streams
     * @example
     * // Get one Park_streams
     * const park_streams = await prisma.park_streams.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends park_streamsFindUniqueOrThrowArgs>(args: SelectSubset<T, park_streamsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Park_streams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_streamsFindFirstArgs} args - Arguments to find a Park_streams
     * @example
     * // Get one Park_streams
     * const park_streams = await prisma.park_streams.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends park_streamsFindFirstArgs>(args?: SelectSubset<T, park_streamsFindFirstArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Park_streams that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_streamsFindFirstOrThrowArgs} args - Arguments to find a Park_streams
     * @example
     * // Get one Park_streams
     * const park_streams = await prisma.park_streams.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends park_streamsFindFirstOrThrowArgs>(args?: SelectSubset<T, park_streamsFindFirstOrThrowArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Park_streams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_streamsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Park_streams
     * const park_streams = await prisma.park_streams.findMany()
     * 
     * // Get first 10 Park_streams
     * const park_streams = await prisma.park_streams.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const park_streamsWithIdOnly = await prisma.park_streams.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends park_streamsFindManyArgs>(args?: SelectSubset<T, park_streamsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Park_streams.
     * @param {park_streamsCreateArgs} args - Arguments to create a Park_streams.
     * @example
     * // Create one Park_streams
     * const Park_streams = await prisma.park_streams.create({
     *   data: {
     *     // ... data to create a Park_streams
     *   }
     * })
     * 
     */
    create<T extends park_streamsCreateArgs>(args: SelectSubset<T, park_streamsCreateArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Park_streams.
     * @param {park_streamsCreateManyArgs} args - Arguments to create many Park_streams.
     * @example
     * // Create many Park_streams
     * const park_streams = await prisma.park_streams.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends park_streamsCreateManyArgs>(args?: SelectSubset<T, park_streamsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Park_streams.
     * @param {park_streamsDeleteArgs} args - Arguments to delete one Park_streams.
     * @example
     * // Delete one Park_streams
     * const Park_streams = await prisma.park_streams.delete({
     *   where: {
     *     // ... filter to delete one Park_streams
     *   }
     * })
     * 
     */
    delete<T extends park_streamsDeleteArgs>(args: SelectSubset<T, park_streamsDeleteArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Park_streams.
     * @param {park_streamsUpdateArgs} args - Arguments to update one Park_streams.
     * @example
     * // Update one Park_streams
     * const park_streams = await prisma.park_streams.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends park_streamsUpdateArgs>(args: SelectSubset<T, park_streamsUpdateArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Park_streams.
     * @param {park_streamsDeleteManyArgs} args - Arguments to filter Park_streams to delete.
     * @example
     * // Delete a few Park_streams
     * const { count } = await prisma.park_streams.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends park_streamsDeleteManyArgs>(args?: SelectSubset<T, park_streamsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Park_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_streamsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Park_streams
     * const park_streams = await prisma.park_streams.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends park_streamsUpdateManyArgs>(args: SelectSubset<T, park_streamsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Park_streams.
     * @param {park_streamsUpsertArgs} args - Arguments to update or create a Park_streams.
     * @example
     * // Update or create a Park_streams
     * const park_streams = await prisma.park_streams.upsert({
     *   create: {
     *     // ... data to create a Park_streams
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Park_streams we want to update
     *   }
     * })
     */
    upsert<T extends park_streamsUpsertArgs>(args: SelectSubset<T, park_streamsUpsertArgs<ExtArgs>>): Prisma__park_streamsClient<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Park_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_streamsCountArgs} args - Arguments to filter Park_streams to count.
     * @example
     * // Count the number of Park_streams
     * const count = await prisma.park_streams.count({
     *   where: {
     *     // ... the filter for the Park_streams we want to count
     *   }
     * })
    **/
    count<T extends park_streamsCountArgs>(
      args?: Subset<T, park_streamsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Park_streamsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Park_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Park_streamsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Park_streamsAggregateArgs>(args: Subset<T, Park_streamsAggregateArgs>): Prisma.PrismaPromise<GetPark_streamsAggregateType<T>>

    /**
     * Group by Park_streams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_streamsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends park_streamsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: park_streamsGroupByArgs['orderBy'] }
        : { orderBy?: park_streamsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, park_streamsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPark_streamsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the park_streams model
   */
  readonly fields: park_streamsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for park_streams.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__park_streamsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends park_streams$parksArgs<ExtArgs> = {}>(args?: Subset<T, park_streams$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the park_streams model
   */
  interface park_streamsFieldRefs {
    readonly Id: FieldRef<"park_streams", 'Int'>
    readonly park_Id: FieldRef<"park_streams", 'Int'>
    readonly stream_url: FieldRef<"park_streams", 'String'>
    readonly stream_api_key: FieldRef<"park_streams", 'String'>
    readonly stream_path: FieldRef<"park_streams", 'String'>
    readonly password: FieldRef<"park_streams", 'String'>
    readonly createdAt: FieldRef<"park_streams", 'DateTime'>
    readonly updatedAt: FieldRef<"park_streams", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * park_streams findUnique
   */
  export type park_streamsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * Filter, which park_streams to fetch.
     */
    where: park_streamsWhereUniqueInput
  }

  /**
   * park_streams findUniqueOrThrow
   */
  export type park_streamsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * Filter, which park_streams to fetch.
     */
    where: park_streamsWhereUniqueInput
  }

  /**
   * park_streams findFirst
   */
  export type park_streamsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * Filter, which park_streams to fetch.
     */
    where?: park_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_streams to fetch.
     */
    orderBy?: park_streamsOrderByWithRelationInput | park_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for park_streams.
     */
    cursor?: park_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_streams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of park_streams.
     */
    distinct?: Park_streamsScalarFieldEnum | Park_streamsScalarFieldEnum[]
  }

  /**
   * park_streams findFirstOrThrow
   */
  export type park_streamsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * Filter, which park_streams to fetch.
     */
    where?: park_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_streams to fetch.
     */
    orderBy?: park_streamsOrderByWithRelationInput | park_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for park_streams.
     */
    cursor?: park_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_streams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of park_streams.
     */
    distinct?: Park_streamsScalarFieldEnum | Park_streamsScalarFieldEnum[]
  }

  /**
   * park_streams findMany
   */
  export type park_streamsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * Filter, which park_streams to fetch.
     */
    where?: park_streamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_streams to fetch.
     */
    orderBy?: park_streamsOrderByWithRelationInput | park_streamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing park_streams.
     */
    cursor?: park_streamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_streams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_streams.
     */
    skip?: number
    distinct?: Park_streamsScalarFieldEnum | Park_streamsScalarFieldEnum[]
  }

  /**
   * park_streams create
   */
  export type park_streamsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * The data needed to create a park_streams.
     */
    data?: XOR<park_streamsCreateInput, park_streamsUncheckedCreateInput>
  }

  /**
   * park_streams createMany
   */
  export type park_streamsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many park_streams.
     */
    data: park_streamsCreateManyInput | park_streamsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * park_streams update
   */
  export type park_streamsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * The data needed to update a park_streams.
     */
    data: XOR<park_streamsUpdateInput, park_streamsUncheckedUpdateInput>
    /**
     * Choose, which park_streams to update.
     */
    where: park_streamsWhereUniqueInput
  }

  /**
   * park_streams updateMany
   */
  export type park_streamsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update park_streams.
     */
    data: XOR<park_streamsUpdateManyMutationInput, park_streamsUncheckedUpdateManyInput>
    /**
     * Filter which park_streams to update
     */
    where?: park_streamsWhereInput
    /**
     * Limit how many park_streams to update.
     */
    limit?: number
  }

  /**
   * park_streams upsert
   */
  export type park_streamsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * The filter to search for the park_streams to update in case it exists.
     */
    where: park_streamsWhereUniqueInput
    /**
     * In case the park_streams found by the `where` argument doesn't exist, create a new park_streams with this data.
     */
    create: XOR<park_streamsCreateInput, park_streamsUncheckedCreateInput>
    /**
     * In case the park_streams was found with the provided `where` argument, update it with this data.
     */
    update: XOR<park_streamsUpdateInput, park_streamsUncheckedUpdateInput>
  }

  /**
   * park_streams delete
   */
  export type park_streamsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    /**
     * Filter which park_streams to delete.
     */
    where: park_streamsWhereUniqueInput
  }

  /**
   * park_streams deleteMany
   */
  export type park_streamsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which park_streams to delete
     */
    where?: park_streamsWhereInput
    /**
     * Limit how many park_streams to delete.
     */
    limit?: number
  }

  /**
   * park_streams.parks
   */
  export type park_streams$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * park_streams without action
   */
  export type park_streamsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
  }


  /**
   * Model TermsPrivacy
   */

  export type AggregateTermsPrivacy = {
    _count: TermsPrivacyCountAggregateOutputType | null
    _avg: TermsPrivacyAvgAggregateOutputType | null
    _sum: TermsPrivacySumAggregateOutputType | null
    _min: TermsPrivacyMinAggregateOutputType | null
    _max: TermsPrivacyMaxAggregateOutputType | null
  }

  export type TermsPrivacyAvgAggregateOutputType = {
    id: number | null
  }

  export type TermsPrivacySumAggregateOutputType = {
    id: number | null
  }

  export type TermsPrivacyMinAggregateOutputType = {
    id: number | null
    terms: string | null
    privacyPolicy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TermsPrivacyMaxAggregateOutputType = {
    id: number | null
    terms: string | null
    privacyPolicy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TermsPrivacyCountAggregateOutputType = {
    id: number
    terms: number
    privacyPolicy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TermsPrivacyAvgAggregateInputType = {
    id?: true
  }

  export type TermsPrivacySumAggregateInputType = {
    id?: true
  }

  export type TermsPrivacyMinAggregateInputType = {
    id?: true
    terms?: true
    privacyPolicy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TermsPrivacyMaxAggregateInputType = {
    id?: true
    terms?: true
    privacyPolicy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TermsPrivacyCountAggregateInputType = {
    id?: true
    terms?: true
    privacyPolicy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TermsPrivacyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TermsPrivacy to aggregate.
     */
    where?: TermsPrivacyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TermsPrivacies to fetch.
     */
    orderBy?: TermsPrivacyOrderByWithRelationInput | TermsPrivacyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TermsPrivacyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TermsPrivacies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TermsPrivacies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TermsPrivacies
    **/
    _count?: true | TermsPrivacyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TermsPrivacyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TermsPrivacySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TermsPrivacyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TermsPrivacyMaxAggregateInputType
  }

  export type GetTermsPrivacyAggregateType<T extends TermsPrivacyAggregateArgs> = {
        [P in keyof T & keyof AggregateTermsPrivacy]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTermsPrivacy[P]>
      : GetScalarType<T[P], AggregateTermsPrivacy[P]>
  }




  export type TermsPrivacyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TermsPrivacyWhereInput
    orderBy?: TermsPrivacyOrderByWithAggregationInput | TermsPrivacyOrderByWithAggregationInput[]
    by: TermsPrivacyScalarFieldEnum[] | TermsPrivacyScalarFieldEnum
    having?: TermsPrivacyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TermsPrivacyCountAggregateInputType | true
    _avg?: TermsPrivacyAvgAggregateInputType
    _sum?: TermsPrivacySumAggregateInputType
    _min?: TermsPrivacyMinAggregateInputType
    _max?: TermsPrivacyMaxAggregateInputType
  }

  export type TermsPrivacyGroupByOutputType = {
    id: number
    terms: string | null
    privacyPolicy: string | null
    createdAt: Date
    updatedAt: Date
    _count: TermsPrivacyCountAggregateOutputType | null
    _avg: TermsPrivacyAvgAggregateOutputType | null
    _sum: TermsPrivacySumAggregateOutputType | null
    _min: TermsPrivacyMinAggregateOutputType | null
    _max: TermsPrivacyMaxAggregateOutputType | null
  }

  type GetTermsPrivacyGroupByPayload<T extends TermsPrivacyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TermsPrivacyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TermsPrivacyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TermsPrivacyGroupByOutputType[P]>
            : GetScalarType<T[P], TermsPrivacyGroupByOutputType[P]>
        }
      >
    >


  export type TermsPrivacySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    terms?: boolean
    privacyPolicy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["termsPrivacy"]>



  export type TermsPrivacySelectScalar = {
    id?: boolean
    terms?: boolean
    privacyPolicy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TermsPrivacyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "terms" | "privacyPolicy" | "createdAt" | "updatedAt", ExtArgs["result"]["termsPrivacy"]>

  export type $TermsPrivacyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TermsPrivacy"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      terms: string | null
      privacyPolicy: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["termsPrivacy"]>
    composites: {}
  }

  type TermsPrivacyGetPayload<S extends boolean | null | undefined | TermsPrivacyDefaultArgs> = $Result.GetResult<Prisma.$TermsPrivacyPayload, S>

  type TermsPrivacyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TermsPrivacyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TermsPrivacyCountAggregateInputType | true
    }

  export interface TermsPrivacyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TermsPrivacy'], meta: { name: 'TermsPrivacy' } }
    /**
     * Find zero or one TermsPrivacy that matches the filter.
     * @param {TermsPrivacyFindUniqueArgs} args - Arguments to find a TermsPrivacy
     * @example
     * // Get one TermsPrivacy
     * const termsPrivacy = await prisma.termsPrivacy.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TermsPrivacyFindUniqueArgs>(args: SelectSubset<T, TermsPrivacyFindUniqueArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TermsPrivacy that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TermsPrivacyFindUniqueOrThrowArgs} args - Arguments to find a TermsPrivacy
     * @example
     * // Get one TermsPrivacy
     * const termsPrivacy = await prisma.termsPrivacy.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TermsPrivacyFindUniqueOrThrowArgs>(args: SelectSubset<T, TermsPrivacyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TermsPrivacy that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyFindFirstArgs} args - Arguments to find a TermsPrivacy
     * @example
     * // Get one TermsPrivacy
     * const termsPrivacy = await prisma.termsPrivacy.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TermsPrivacyFindFirstArgs>(args?: SelectSubset<T, TermsPrivacyFindFirstArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TermsPrivacy that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyFindFirstOrThrowArgs} args - Arguments to find a TermsPrivacy
     * @example
     * // Get one TermsPrivacy
     * const termsPrivacy = await prisma.termsPrivacy.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TermsPrivacyFindFirstOrThrowArgs>(args?: SelectSubset<T, TermsPrivacyFindFirstOrThrowArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TermsPrivacies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TermsPrivacies
     * const termsPrivacies = await prisma.termsPrivacy.findMany()
     * 
     * // Get first 10 TermsPrivacies
     * const termsPrivacies = await prisma.termsPrivacy.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const termsPrivacyWithIdOnly = await prisma.termsPrivacy.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TermsPrivacyFindManyArgs>(args?: SelectSubset<T, TermsPrivacyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TermsPrivacy.
     * @param {TermsPrivacyCreateArgs} args - Arguments to create a TermsPrivacy.
     * @example
     * // Create one TermsPrivacy
     * const TermsPrivacy = await prisma.termsPrivacy.create({
     *   data: {
     *     // ... data to create a TermsPrivacy
     *   }
     * })
     * 
     */
    create<T extends TermsPrivacyCreateArgs>(args: SelectSubset<T, TermsPrivacyCreateArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TermsPrivacies.
     * @param {TermsPrivacyCreateManyArgs} args - Arguments to create many TermsPrivacies.
     * @example
     * // Create many TermsPrivacies
     * const termsPrivacy = await prisma.termsPrivacy.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TermsPrivacyCreateManyArgs>(args?: SelectSubset<T, TermsPrivacyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TermsPrivacy.
     * @param {TermsPrivacyDeleteArgs} args - Arguments to delete one TermsPrivacy.
     * @example
     * // Delete one TermsPrivacy
     * const TermsPrivacy = await prisma.termsPrivacy.delete({
     *   where: {
     *     // ... filter to delete one TermsPrivacy
     *   }
     * })
     * 
     */
    delete<T extends TermsPrivacyDeleteArgs>(args: SelectSubset<T, TermsPrivacyDeleteArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TermsPrivacy.
     * @param {TermsPrivacyUpdateArgs} args - Arguments to update one TermsPrivacy.
     * @example
     * // Update one TermsPrivacy
     * const termsPrivacy = await prisma.termsPrivacy.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TermsPrivacyUpdateArgs>(args: SelectSubset<T, TermsPrivacyUpdateArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TermsPrivacies.
     * @param {TermsPrivacyDeleteManyArgs} args - Arguments to filter TermsPrivacies to delete.
     * @example
     * // Delete a few TermsPrivacies
     * const { count } = await prisma.termsPrivacy.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TermsPrivacyDeleteManyArgs>(args?: SelectSubset<T, TermsPrivacyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TermsPrivacies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TermsPrivacies
     * const termsPrivacy = await prisma.termsPrivacy.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TermsPrivacyUpdateManyArgs>(args: SelectSubset<T, TermsPrivacyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TermsPrivacy.
     * @param {TermsPrivacyUpsertArgs} args - Arguments to update or create a TermsPrivacy.
     * @example
     * // Update or create a TermsPrivacy
     * const termsPrivacy = await prisma.termsPrivacy.upsert({
     *   create: {
     *     // ... data to create a TermsPrivacy
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TermsPrivacy we want to update
     *   }
     * })
     */
    upsert<T extends TermsPrivacyUpsertArgs>(args: SelectSubset<T, TermsPrivacyUpsertArgs<ExtArgs>>): Prisma__TermsPrivacyClient<$Result.GetResult<Prisma.$TermsPrivacyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TermsPrivacies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyCountArgs} args - Arguments to filter TermsPrivacies to count.
     * @example
     * // Count the number of TermsPrivacies
     * const count = await prisma.termsPrivacy.count({
     *   where: {
     *     // ... the filter for the TermsPrivacies we want to count
     *   }
     * })
    **/
    count<T extends TermsPrivacyCountArgs>(
      args?: Subset<T, TermsPrivacyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TermsPrivacyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TermsPrivacy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TermsPrivacyAggregateArgs>(args: Subset<T, TermsPrivacyAggregateArgs>): Prisma.PrismaPromise<GetTermsPrivacyAggregateType<T>>

    /**
     * Group by TermsPrivacy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TermsPrivacyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TermsPrivacyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TermsPrivacyGroupByArgs['orderBy'] }
        : { orderBy?: TermsPrivacyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TermsPrivacyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTermsPrivacyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TermsPrivacy model
   */
  readonly fields: TermsPrivacyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TermsPrivacy.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TermsPrivacyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TermsPrivacy model
   */
  interface TermsPrivacyFieldRefs {
    readonly id: FieldRef<"TermsPrivacy", 'Int'>
    readonly terms: FieldRef<"TermsPrivacy", 'String'>
    readonly privacyPolicy: FieldRef<"TermsPrivacy", 'String'>
    readonly createdAt: FieldRef<"TermsPrivacy", 'DateTime'>
    readonly updatedAt: FieldRef<"TermsPrivacy", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TermsPrivacy findUnique
   */
  export type TermsPrivacyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * Filter, which TermsPrivacy to fetch.
     */
    where: TermsPrivacyWhereUniqueInput
  }

  /**
   * TermsPrivacy findUniqueOrThrow
   */
  export type TermsPrivacyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * Filter, which TermsPrivacy to fetch.
     */
    where: TermsPrivacyWhereUniqueInput
  }

  /**
   * TermsPrivacy findFirst
   */
  export type TermsPrivacyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * Filter, which TermsPrivacy to fetch.
     */
    where?: TermsPrivacyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TermsPrivacies to fetch.
     */
    orderBy?: TermsPrivacyOrderByWithRelationInput | TermsPrivacyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TermsPrivacies.
     */
    cursor?: TermsPrivacyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TermsPrivacies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TermsPrivacies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TermsPrivacies.
     */
    distinct?: TermsPrivacyScalarFieldEnum | TermsPrivacyScalarFieldEnum[]
  }

  /**
   * TermsPrivacy findFirstOrThrow
   */
  export type TermsPrivacyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * Filter, which TermsPrivacy to fetch.
     */
    where?: TermsPrivacyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TermsPrivacies to fetch.
     */
    orderBy?: TermsPrivacyOrderByWithRelationInput | TermsPrivacyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TermsPrivacies.
     */
    cursor?: TermsPrivacyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TermsPrivacies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TermsPrivacies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TermsPrivacies.
     */
    distinct?: TermsPrivacyScalarFieldEnum | TermsPrivacyScalarFieldEnum[]
  }

  /**
   * TermsPrivacy findMany
   */
  export type TermsPrivacyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * Filter, which TermsPrivacies to fetch.
     */
    where?: TermsPrivacyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TermsPrivacies to fetch.
     */
    orderBy?: TermsPrivacyOrderByWithRelationInput | TermsPrivacyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TermsPrivacies.
     */
    cursor?: TermsPrivacyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TermsPrivacies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TermsPrivacies.
     */
    skip?: number
    distinct?: TermsPrivacyScalarFieldEnum | TermsPrivacyScalarFieldEnum[]
  }

  /**
   * TermsPrivacy create
   */
  export type TermsPrivacyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * The data needed to create a TermsPrivacy.
     */
    data: XOR<TermsPrivacyCreateInput, TermsPrivacyUncheckedCreateInput>
  }

  /**
   * TermsPrivacy createMany
   */
  export type TermsPrivacyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TermsPrivacies.
     */
    data: TermsPrivacyCreateManyInput | TermsPrivacyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TermsPrivacy update
   */
  export type TermsPrivacyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * The data needed to update a TermsPrivacy.
     */
    data: XOR<TermsPrivacyUpdateInput, TermsPrivacyUncheckedUpdateInput>
    /**
     * Choose, which TermsPrivacy to update.
     */
    where: TermsPrivacyWhereUniqueInput
  }

  /**
   * TermsPrivacy updateMany
   */
  export type TermsPrivacyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TermsPrivacies.
     */
    data: XOR<TermsPrivacyUpdateManyMutationInput, TermsPrivacyUncheckedUpdateManyInput>
    /**
     * Filter which TermsPrivacies to update
     */
    where?: TermsPrivacyWhereInput
    /**
     * Limit how many TermsPrivacies to update.
     */
    limit?: number
  }

  /**
   * TermsPrivacy upsert
   */
  export type TermsPrivacyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * The filter to search for the TermsPrivacy to update in case it exists.
     */
    where: TermsPrivacyWhereUniqueInput
    /**
     * In case the TermsPrivacy found by the `where` argument doesn't exist, create a new TermsPrivacy with this data.
     */
    create: XOR<TermsPrivacyCreateInput, TermsPrivacyUncheckedCreateInput>
    /**
     * In case the TermsPrivacy was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TermsPrivacyUpdateInput, TermsPrivacyUncheckedUpdateInput>
  }

  /**
   * TermsPrivacy delete
   */
  export type TermsPrivacyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
    /**
     * Filter which TermsPrivacy to delete.
     */
    where: TermsPrivacyWhereUniqueInput
  }

  /**
   * TermsPrivacy deleteMany
   */
  export type TermsPrivacyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TermsPrivacies to delete
     */
    where?: TermsPrivacyWhereInput
    /**
     * Limit how many TermsPrivacies to delete.
     */
    limit?: number
  }

  /**
   * TermsPrivacy without action
   */
  export type TermsPrivacyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TermsPrivacy
     */
    select?: TermsPrivacySelect<ExtArgs> | null
    /**
     * Omit specific fields from the TermsPrivacy
     */
    omit?: TermsPrivacyOmit<ExtArgs> | null
  }


  /**
   * Model FAQ
   */

  export type AggregateFAQ = {
    _count: FAQCountAggregateOutputType | null
    _avg: FAQAvgAggregateOutputType | null
    _sum: FAQSumAggregateOutputType | null
    _min: FAQMinAggregateOutputType | null
    _max: FAQMaxAggregateOutputType | null
  }

  export type FAQAvgAggregateOutputType = {
    id: number | null
  }

  export type FAQSumAggregateOutputType = {
    id: number | null
  }

  export type FAQMinAggregateOutputType = {
    id: number | null
    question: string | null
    answer: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FAQMaxAggregateOutputType = {
    id: number | null
    question: string | null
    answer: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FAQCountAggregateOutputType = {
    id: number
    question: number
    answer: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FAQAvgAggregateInputType = {
    id?: true
  }

  export type FAQSumAggregateInputType = {
    id?: true
  }

  export type FAQMinAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FAQMaxAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FAQCountAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FAQAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FAQ to aggregate.
     */
    where?: FAQWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FAQS to fetch.
     */
    orderBy?: FAQOrderByWithRelationInput | FAQOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FAQWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FAQS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FAQS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FAQS
    **/
    _count?: true | FAQCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FAQAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FAQSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FAQMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FAQMaxAggregateInputType
  }

  export type GetFAQAggregateType<T extends FAQAggregateArgs> = {
        [P in keyof T & keyof AggregateFAQ]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFAQ[P]>
      : GetScalarType<T[P], AggregateFAQ[P]>
  }




  export type FAQGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FAQWhereInput
    orderBy?: FAQOrderByWithAggregationInput | FAQOrderByWithAggregationInput[]
    by: FAQScalarFieldEnum[] | FAQScalarFieldEnum
    having?: FAQScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FAQCountAggregateInputType | true
    _avg?: FAQAvgAggregateInputType
    _sum?: FAQSumAggregateInputType
    _min?: FAQMinAggregateInputType
    _max?: FAQMaxAggregateInputType
  }

  export type FAQGroupByOutputType = {
    id: number
    question: string
    answer: string
    createdAt: Date
    updatedAt: Date
    _count: FAQCountAggregateOutputType | null
    _avg: FAQAvgAggregateOutputType | null
    _sum: FAQSumAggregateOutputType | null
    _min: FAQMinAggregateOutputType | null
    _max: FAQMaxAggregateOutputType | null
  }

  type GetFAQGroupByPayload<T extends FAQGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FAQGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FAQGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FAQGroupByOutputType[P]>
            : GetScalarType<T[P], FAQGroupByOutputType[P]>
        }
      >
    >


  export type FAQSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    question?: boolean
    answer?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["fAQ"]>



  export type FAQSelectScalar = {
    id?: boolean
    question?: boolean
    answer?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FAQOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "question" | "answer" | "createdAt" | "updatedAt", ExtArgs["result"]["fAQ"]>

  export type $FAQPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FAQ"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      question: string
      answer: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fAQ"]>
    composites: {}
  }

  type FAQGetPayload<S extends boolean | null | undefined | FAQDefaultArgs> = $Result.GetResult<Prisma.$FAQPayload, S>

  type FAQCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FAQFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FAQCountAggregateInputType | true
    }

  export interface FAQDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FAQ'], meta: { name: 'FAQ' } }
    /**
     * Find zero or one FAQ that matches the filter.
     * @param {FAQFindUniqueArgs} args - Arguments to find a FAQ
     * @example
     * // Get one FAQ
     * const fAQ = await prisma.fAQ.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FAQFindUniqueArgs>(args: SelectSubset<T, FAQFindUniqueArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FAQ that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FAQFindUniqueOrThrowArgs} args - Arguments to find a FAQ
     * @example
     * // Get one FAQ
     * const fAQ = await prisma.fAQ.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FAQFindUniqueOrThrowArgs>(args: SelectSubset<T, FAQFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FAQ that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQFindFirstArgs} args - Arguments to find a FAQ
     * @example
     * // Get one FAQ
     * const fAQ = await prisma.fAQ.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FAQFindFirstArgs>(args?: SelectSubset<T, FAQFindFirstArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FAQ that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQFindFirstOrThrowArgs} args - Arguments to find a FAQ
     * @example
     * // Get one FAQ
     * const fAQ = await prisma.fAQ.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FAQFindFirstOrThrowArgs>(args?: SelectSubset<T, FAQFindFirstOrThrowArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FAQS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FAQS
     * const fAQS = await prisma.fAQ.findMany()
     * 
     * // Get first 10 FAQS
     * const fAQS = await prisma.fAQ.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fAQWithIdOnly = await prisma.fAQ.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FAQFindManyArgs>(args?: SelectSubset<T, FAQFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FAQ.
     * @param {FAQCreateArgs} args - Arguments to create a FAQ.
     * @example
     * // Create one FAQ
     * const FAQ = await prisma.fAQ.create({
     *   data: {
     *     // ... data to create a FAQ
     *   }
     * })
     * 
     */
    create<T extends FAQCreateArgs>(args: SelectSubset<T, FAQCreateArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FAQS.
     * @param {FAQCreateManyArgs} args - Arguments to create many FAQS.
     * @example
     * // Create many FAQS
     * const fAQ = await prisma.fAQ.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FAQCreateManyArgs>(args?: SelectSubset<T, FAQCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FAQ.
     * @param {FAQDeleteArgs} args - Arguments to delete one FAQ.
     * @example
     * // Delete one FAQ
     * const FAQ = await prisma.fAQ.delete({
     *   where: {
     *     // ... filter to delete one FAQ
     *   }
     * })
     * 
     */
    delete<T extends FAQDeleteArgs>(args: SelectSubset<T, FAQDeleteArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FAQ.
     * @param {FAQUpdateArgs} args - Arguments to update one FAQ.
     * @example
     * // Update one FAQ
     * const fAQ = await prisma.fAQ.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FAQUpdateArgs>(args: SelectSubset<T, FAQUpdateArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FAQS.
     * @param {FAQDeleteManyArgs} args - Arguments to filter FAQS to delete.
     * @example
     * // Delete a few FAQS
     * const { count } = await prisma.fAQ.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FAQDeleteManyArgs>(args?: SelectSubset<T, FAQDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FAQS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FAQS
     * const fAQ = await prisma.fAQ.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FAQUpdateManyArgs>(args: SelectSubset<T, FAQUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FAQ.
     * @param {FAQUpsertArgs} args - Arguments to update or create a FAQ.
     * @example
     * // Update or create a FAQ
     * const fAQ = await prisma.fAQ.upsert({
     *   create: {
     *     // ... data to create a FAQ
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FAQ we want to update
     *   }
     * })
     */
    upsert<T extends FAQUpsertArgs>(args: SelectSubset<T, FAQUpsertArgs<ExtArgs>>): Prisma__FAQClient<$Result.GetResult<Prisma.$FAQPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FAQS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQCountArgs} args - Arguments to filter FAQS to count.
     * @example
     * // Count the number of FAQS
     * const count = await prisma.fAQ.count({
     *   where: {
     *     // ... the filter for the FAQS we want to count
     *   }
     * })
    **/
    count<T extends FAQCountArgs>(
      args?: Subset<T, FAQCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FAQCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FAQ.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FAQAggregateArgs>(args: Subset<T, FAQAggregateArgs>): Prisma.PrismaPromise<GetFAQAggregateType<T>>

    /**
     * Group by FAQ.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FAQGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FAQGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FAQGroupByArgs['orderBy'] }
        : { orderBy?: FAQGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FAQGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFAQGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FAQ model
   */
  readonly fields: FAQFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FAQ.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FAQClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FAQ model
   */
  interface FAQFieldRefs {
    readonly id: FieldRef<"FAQ", 'Int'>
    readonly question: FieldRef<"FAQ", 'String'>
    readonly answer: FieldRef<"FAQ", 'String'>
    readonly createdAt: FieldRef<"FAQ", 'DateTime'>
    readonly updatedAt: FieldRef<"FAQ", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FAQ findUnique
   */
  export type FAQFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * Filter, which FAQ to fetch.
     */
    where: FAQWhereUniqueInput
  }

  /**
   * FAQ findUniqueOrThrow
   */
  export type FAQFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * Filter, which FAQ to fetch.
     */
    where: FAQWhereUniqueInput
  }

  /**
   * FAQ findFirst
   */
  export type FAQFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * Filter, which FAQ to fetch.
     */
    where?: FAQWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FAQS to fetch.
     */
    orderBy?: FAQOrderByWithRelationInput | FAQOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FAQS.
     */
    cursor?: FAQWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FAQS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FAQS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FAQS.
     */
    distinct?: FAQScalarFieldEnum | FAQScalarFieldEnum[]
  }

  /**
   * FAQ findFirstOrThrow
   */
  export type FAQFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * Filter, which FAQ to fetch.
     */
    where?: FAQWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FAQS to fetch.
     */
    orderBy?: FAQOrderByWithRelationInput | FAQOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FAQS.
     */
    cursor?: FAQWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FAQS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FAQS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FAQS.
     */
    distinct?: FAQScalarFieldEnum | FAQScalarFieldEnum[]
  }

  /**
   * FAQ findMany
   */
  export type FAQFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * Filter, which FAQS to fetch.
     */
    where?: FAQWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FAQS to fetch.
     */
    orderBy?: FAQOrderByWithRelationInput | FAQOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FAQS.
     */
    cursor?: FAQWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FAQS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FAQS.
     */
    skip?: number
    distinct?: FAQScalarFieldEnum | FAQScalarFieldEnum[]
  }

  /**
   * FAQ create
   */
  export type FAQCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * The data needed to create a FAQ.
     */
    data: XOR<FAQCreateInput, FAQUncheckedCreateInput>
  }

  /**
   * FAQ createMany
   */
  export type FAQCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FAQS.
     */
    data: FAQCreateManyInput | FAQCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FAQ update
   */
  export type FAQUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * The data needed to update a FAQ.
     */
    data: XOR<FAQUpdateInput, FAQUncheckedUpdateInput>
    /**
     * Choose, which FAQ to update.
     */
    where: FAQWhereUniqueInput
  }

  /**
   * FAQ updateMany
   */
  export type FAQUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FAQS.
     */
    data: XOR<FAQUpdateManyMutationInput, FAQUncheckedUpdateManyInput>
    /**
     * Filter which FAQS to update
     */
    where?: FAQWhereInput
    /**
     * Limit how many FAQS to update.
     */
    limit?: number
  }

  /**
   * FAQ upsert
   */
  export type FAQUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * The filter to search for the FAQ to update in case it exists.
     */
    where: FAQWhereUniqueInput
    /**
     * In case the FAQ found by the `where` argument doesn't exist, create a new FAQ with this data.
     */
    create: XOR<FAQCreateInput, FAQUncheckedCreateInput>
    /**
     * In case the FAQ was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FAQUpdateInput, FAQUncheckedUpdateInput>
  }

  /**
   * FAQ delete
   */
  export type FAQDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
    /**
     * Filter which FAQ to delete.
     */
    where: FAQWhereUniqueInput
  }

  /**
   * FAQ deleteMany
   */
  export type FAQDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FAQS to delete
     */
    where?: FAQWhereInput
    /**
     * Limit how many FAQS to delete.
     */
    limit?: number
  }

  /**
   * FAQ without action
   */
  export type FAQDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FAQ
     */
    select?: FAQSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FAQ
     */
    omit?: FAQOmit<ExtArgs> | null
  }


  /**
   * Model park_zones
   */

  export type AggregatePark_zones = {
    _count: Park_zonesCountAggregateOutputType | null
    _avg: Park_zonesAvgAggregateOutputType | null
    _sum: Park_zonesSumAggregateOutputType | null
    _min: Park_zonesMinAggregateOutputType | null
    _max: Park_zonesMaxAggregateOutputType | null
  }

  export type Park_zonesAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type Park_zonesSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type Park_zonesMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    zone_Id: string | null
    zone_english_name: string | null
    zone_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    device_ip: string | null
    web_api: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
  }

  export type Park_zonesMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    zone_Id: string | null
    zone_english_name: string | null
    zone_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    device_ip: string | null
    web_api: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
  }

  export type Park_zonesCountAggregateOutputType = {
    Id: number
    park_Id: number
    zone_Id: number
    zone_english_name: number
    zone_arabic_name: number
    latitude: number
    longitude: number
    device_ip: number
    web_api: number
    status: number
    createdAt: number
    updatedAt: number
    location: number
    _all: number
  }


  export type Park_zonesAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    latitude?: true
    longitude?: true
  }

  export type Park_zonesSumAggregateInputType = {
    Id?: true
    park_Id?: true
    latitude?: true
    longitude?: true
  }

  export type Park_zonesMinAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
    zone_english_name?: true
    zone_arabic_name?: true
    latitude?: true
    longitude?: true
    device_ip?: true
    web_api?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
  }

  export type Park_zonesMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
    zone_english_name?: true
    zone_arabic_name?: true
    latitude?: true
    longitude?: true
    device_ip?: true
    web_api?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
  }

  export type Park_zonesCountAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
    zone_english_name?: true
    zone_arabic_name?: true
    latitude?: true
    longitude?: true
    device_ip?: true
    web_api?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    _all?: true
  }

  export type Park_zonesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which park_zones to aggregate.
     */
    where?: park_zonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_zones to fetch.
     */
    orderBy?: park_zonesOrderByWithRelationInput | park_zonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: park_zonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_zones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_zones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned park_zones
    **/
    _count?: true | Park_zonesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Park_zonesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Park_zonesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Park_zonesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Park_zonesMaxAggregateInputType
  }

  export type GetPark_zonesAggregateType<T extends Park_zonesAggregateArgs> = {
        [P in keyof T & keyof AggregatePark_zones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePark_zones[P]>
      : GetScalarType<T[P], AggregatePark_zones[P]>
  }




  export type park_zonesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: park_zonesWhereInput
    orderBy?: park_zonesOrderByWithAggregationInput | park_zonesOrderByWithAggregationInput[]
    by: Park_zonesScalarFieldEnum[] | Park_zonesScalarFieldEnum
    having?: park_zonesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Park_zonesCountAggregateInputType | true
    _avg?: Park_zonesAvgAggregateInputType
    _sum?: Park_zonesSumAggregateInputType
    _min?: Park_zonesMinAggregateInputType
    _max?: Park_zonesMaxAggregateInputType
  }

  export type Park_zonesGroupByOutputType = {
    Id: number
    park_Id: number | null
    zone_Id: string | null
    zone_english_name: string | null
    zone_arabic_name: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    device_ip: string | null
    web_api: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date
    location: string | null
    _count: Park_zonesCountAggregateOutputType | null
    _avg: Park_zonesAvgAggregateOutputType | null
    _sum: Park_zonesSumAggregateOutputType | null
    _min: Park_zonesMinAggregateOutputType | null
    _max: Park_zonesMaxAggregateOutputType | null
  }

  type GetPark_zonesGroupByPayload<T extends park_zonesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Park_zonesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Park_zonesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Park_zonesGroupByOutputType[P]>
            : GetScalarType<T[P], Park_zonesGroupByOutputType[P]>
        }
      >
    >


  export type park_zonesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    zone_Id?: boolean
    zone_english_name?: boolean
    zone_arabic_name?: boolean
    latitude?: boolean
    longitude?: boolean
    device_ip?: boolean
    web_api?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    parks?: boolean | park_zones$parksArgs<ExtArgs>
    parks_irrigation_job_history?: boolean | park_zones$parks_irrigation_job_historyArgs<ExtArgs>
    _count?: boolean | Park_zonesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["park_zones"]>



  export type park_zonesSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    zone_Id?: boolean
    zone_english_name?: boolean
    zone_arabic_name?: boolean
    latitude?: boolean
    longitude?: boolean
    device_ip?: boolean
    web_api?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
  }

  export type park_zonesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "zone_Id" | "zone_english_name" | "zone_arabic_name" | "latitude" | "longitude" | "device_ip" | "web_api" | "status" | "createdAt" | "updatedAt" | "location", ExtArgs["result"]["park_zones"]>
  export type park_zonesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | park_zones$parksArgs<ExtArgs>
    parks_irrigation_job_history?: boolean | park_zones$parks_irrigation_job_historyArgs<ExtArgs>
    _count?: boolean | Park_zonesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $park_zonesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "park_zones"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      parks_irrigation_job_history: Prisma.$parks_irrigation_job_historyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      zone_Id: string | null
      zone_english_name: string | null
      zone_arabic_name: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      device_ip: string | null
      web_api: string | null
      status: string | null
      createdAt: Date | null
      updatedAt: Date
      location: string | null
    }, ExtArgs["result"]["park_zones"]>
    composites: {}
  }

  type park_zonesGetPayload<S extends boolean | null | undefined | park_zonesDefaultArgs> = $Result.GetResult<Prisma.$park_zonesPayload, S>

  type park_zonesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<park_zonesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Park_zonesCountAggregateInputType | true
    }

  export interface park_zonesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['park_zones'], meta: { name: 'park_zones' } }
    /**
     * Find zero or one Park_zones that matches the filter.
     * @param {park_zonesFindUniqueArgs} args - Arguments to find a Park_zones
     * @example
     * // Get one Park_zones
     * const park_zones = await prisma.park_zones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends park_zonesFindUniqueArgs>(args: SelectSubset<T, park_zonesFindUniqueArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Park_zones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {park_zonesFindUniqueOrThrowArgs} args - Arguments to find a Park_zones
     * @example
     * // Get one Park_zones
     * const park_zones = await prisma.park_zones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends park_zonesFindUniqueOrThrowArgs>(args: SelectSubset<T, park_zonesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Park_zones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_zonesFindFirstArgs} args - Arguments to find a Park_zones
     * @example
     * // Get one Park_zones
     * const park_zones = await prisma.park_zones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends park_zonesFindFirstArgs>(args?: SelectSubset<T, park_zonesFindFirstArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Park_zones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_zonesFindFirstOrThrowArgs} args - Arguments to find a Park_zones
     * @example
     * // Get one Park_zones
     * const park_zones = await prisma.park_zones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends park_zonesFindFirstOrThrowArgs>(args?: SelectSubset<T, park_zonesFindFirstOrThrowArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Park_zones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_zonesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Park_zones
     * const park_zones = await prisma.park_zones.findMany()
     * 
     * // Get first 10 Park_zones
     * const park_zones = await prisma.park_zones.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const park_zonesWithIdOnly = await prisma.park_zones.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends park_zonesFindManyArgs>(args?: SelectSubset<T, park_zonesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Park_zones.
     * @param {park_zonesCreateArgs} args - Arguments to create a Park_zones.
     * @example
     * // Create one Park_zones
     * const Park_zones = await prisma.park_zones.create({
     *   data: {
     *     // ... data to create a Park_zones
     *   }
     * })
     * 
     */
    create<T extends park_zonesCreateArgs>(args: SelectSubset<T, park_zonesCreateArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Park_zones.
     * @param {park_zonesCreateManyArgs} args - Arguments to create many Park_zones.
     * @example
     * // Create many Park_zones
     * const park_zones = await prisma.park_zones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends park_zonesCreateManyArgs>(args?: SelectSubset<T, park_zonesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Park_zones.
     * @param {park_zonesDeleteArgs} args - Arguments to delete one Park_zones.
     * @example
     * // Delete one Park_zones
     * const Park_zones = await prisma.park_zones.delete({
     *   where: {
     *     // ... filter to delete one Park_zones
     *   }
     * })
     * 
     */
    delete<T extends park_zonesDeleteArgs>(args: SelectSubset<T, park_zonesDeleteArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Park_zones.
     * @param {park_zonesUpdateArgs} args - Arguments to update one Park_zones.
     * @example
     * // Update one Park_zones
     * const park_zones = await prisma.park_zones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends park_zonesUpdateArgs>(args: SelectSubset<T, park_zonesUpdateArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Park_zones.
     * @param {park_zonesDeleteManyArgs} args - Arguments to filter Park_zones to delete.
     * @example
     * // Delete a few Park_zones
     * const { count } = await prisma.park_zones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends park_zonesDeleteManyArgs>(args?: SelectSubset<T, park_zonesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Park_zones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_zonesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Park_zones
     * const park_zones = await prisma.park_zones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends park_zonesUpdateManyArgs>(args: SelectSubset<T, park_zonesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Park_zones.
     * @param {park_zonesUpsertArgs} args - Arguments to update or create a Park_zones.
     * @example
     * // Update or create a Park_zones
     * const park_zones = await prisma.park_zones.upsert({
     *   create: {
     *     // ... data to create a Park_zones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Park_zones we want to update
     *   }
     * })
     */
    upsert<T extends park_zonesUpsertArgs>(args: SelectSubset<T, park_zonesUpsertArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Park_zones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_zonesCountArgs} args - Arguments to filter Park_zones to count.
     * @example
     * // Count the number of Park_zones
     * const count = await prisma.park_zones.count({
     *   where: {
     *     // ... the filter for the Park_zones we want to count
     *   }
     * })
    **/
    count<T extends park_zonesCountArgs>(
      args?: Subset<T, park_zonesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Park_zonesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Park_zones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Park_zonesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Park_zonesAggregateArgs>(args: Subset<T, Park_zonesAggregateArgs>): Prisma.PrismaPromise<GetPark_zonesAggregateType<T>>

    /**
     * Group by Park_zones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {park_zonesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends park_zonesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: park_zonesGroupByArgs['orderBy'] }
        : { orderBy?: park_zonesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, park_zonesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPark_zonesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the park_zones model
   */
  readonly fields: park_zonesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for park_zones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__park_zonesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends park_zones$parksArgs<ExtArgs> = {}>(args?: Subset<T, park_zones$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    parks_irrigation_job_history<T extends park_zones$parks_irrigation_job_historyArgs<ExtArgs> = {}>(args?: Subset<T, park_zones$parks_irrigation_job_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the park_zones model
   */
  interface park_zonesFieldRefs {
    readonly Id: FieldRef<"park_zones", 'Int'>
    readonly park_Id: FieldRef<"park_zones", 'Int'>
    readonly zone_Id: FieldRef<"park_zones", 'String'>
    readonly zone_english_name: FieldRef<"park_zones", 'String'>
    readonly zone_arabic_name: FieldRef<"park_zones", 'String'>
    readonly latitude: FieldRef<"park_zones", 'Decimal'>
    readonly longitude: FieldRef<"park_zones", 'Decimal'>
    readonly device_ip: FieldRef<"park_zones", 'String'>
    readonly web_api: FieldRef<"park_zones", 'String'>
    readonly status: FieldRef<"park_zones", 'String'>
    readonly createdAt: FieldRef<"park_zones", 'DateTime'>
    readonly updatedAt: FieldRef<"park_zones", 'DateTime'>
    readonly location: FieldRef<"park_zones", 'String'>
  }
    

  // Custom InputTypes
  /**
   * park_zones findUnique
   */
  export type park_zonesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * Filter, which park_zones to fetch.
     */
    where: park_zonesWhereUniqueInput
  }

  /**
   * park_zones findUniqueOrThrow
   */
  export type park_zonesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * Filter, which park_zones to fetch.
     */
    where: park_zonesWhereUniqueInput
  }

  /**
   * park_zones findFirst
   */
  export type park_zonesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * Filter, which park_zones to fetch.
     */
    where?: park_zonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_zones to fetch.
     */
    orderBy?: park_zonesOrderByWithRelationInput | park_zonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for park_zones.
     */
    cursor?: park_zonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_zones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_zones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of park_zones.
     */
    distinct?: Park_zonesScalarFieldEnum | Park_zonesScalarFieldEnum[]
  }

  /**
   * park_zones findFirstOrThrow
   */
  export type park_zonesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * Filter, which park_zones to fetch.
     */
    where?: park_zonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_zones to fetch.
     */
    orderBy?: park_zonesOrderByWithRelationInput | park_zonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for park_zones.
     */
    cursor?: park_zonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_zones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_zones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of park_zones.
     */
    distinct?: Park_zonesScalarFieldEnum | Park_zonesScalarFieldEnum[]
  }

  /**
   * park_zones findMany
   */
  export type park_zonesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * Filter, which park_zones to fetch.
     */
    where?: park_zonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of park_zones to fetch.
     */
    orderBy?: park_zonesOrderByWithRelationInput | park_zonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing park_zones.
     */
    cursor?: park_zonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` park_zones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` park_zones.
     */
    skip?: number
    distinct?: Park_zonesScalarFieldEnum | Park_zonesScalarFieldEnum[]
  }

  /**
   * park_zones create
   */
  export type park_zonesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * The data needed to create a park_zones.
     */
    data?: XOR<park_zonesCreateInput, park_zonesUncheckedCreateInput>
  }

  /**
   * park_zones createMany
   */
  export type park_zonesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many park_zones.
     */
    data: park_zonesCreateManyInput | park_zonesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * park_zones update
   */
  export type park_zonesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * The data needed to update a park_zones.
     */
    data: XOR<park_zonesUpdateInput, park_zonesUncheckedUpdateInput>
    /**
     * Choose, which park_zones to update.
     */
    where: park_zonesWhereUniqueInput
  }

  /**
   * park_zones updateMany
   */
  export type park_zonesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update park_zones.
     */
    data: XOR<park_zonesUpdateManyMutationInput, park_zonesUncheckedUpdateManyInput>
    /**
     * Filter which park_zones to update
     */
    where?: park_zonesWhereInput
    /**
     * Limit how many park_zones to update.
     */
    limit?: number
  }

  /**
   * park_zones upsert
   */
  export type park_zonesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * The filter to search for the park_zones to update in case it exists.
     */
    where: park_zonesWhereUniqueInput
    /**
     * In case the park_zones found by the `where` argument doesn't exist, create a new park_zones with this data.
     */
    create: XOR<park_zonesCreateInput, park_zonesUncheckedCreateInput>
    /**
     * In case the park_zones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<park_zonesUpdateInput, park_zonesUncheckedUpdateInput>
  }

  /**
   * park_zones delete
   */
  export type park_zonesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    /**
     * Filter which park_zones to delete.
     */
    where: park_zonesWhereUniqueInput
  }

  /**
   * park_zones deleteMany
   */
  export type park_zonesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which park_zones to delete
     */
    where?: park_zonesWhereInput
    /**
     * Limit how many park_zones to delete.
     */
    limit?: number
  }

  /**
   * park_zones.parks
   */
  export type park_zones$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * park_zones.parks_irrigation_job_history
   */
  export type park_zones$parks_irrigation_job_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    where?: parks_irrigation_job_historyWhereInput
    orderBy?: parks_irrigation_job_historyOrderByWithRelationInput | parks_irrigation_job_historyOrderByWithRelationInput[]
    cursor?: parks_irrigation_job_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_irrigation_job_historyScalarFieldEnum | Parks_irrigation_job_historyScalarFieldEnum[]
  }

  /**
   * park_zones without action
   */
  export type park_zonesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
  }


  /**
   * Model parks
   */

  export type AggregateParks = {
    _count: ParksCountAggregateOutputType | null
    _avg: ParksAvgAggregateOutputType | null
    _sum: ParksSumAggregateOutputType | null
    _min: ParksMinAggregateOutputType | null
    _max: ParksMaxAggregateOutputType | null
  }

  export type ParksAvgAggregateOutputType = {
    Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type ParksSumAggregateOutputType = {
    Id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type ParksMinAggregateOutputType = {
    Id: number | null
    park_Id: string | null
    park_english_name: string | null
    park_arabic_name: string | null
    image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
  }

  export type ParksMaxAggregateOutputType = {
    Id: number | null
    park_Id: string | null
    park_english_name: string | null
    park_arabic_name: string | null
    image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
  }

  export type ParksCountAggregateOutputType = {
    Id: number
    park_Id: number
    park_english_name: number
    park_arabic_name: number
    image: number
    latitude: number
    longitude: number
    createdAt: number
    updatedAt: number
    location: number
    _all: number
  }


  export type ParksAvgAggregateInputType = {
    Id?: true
    latitude?: true
    longitude?: true
  }

  export type ParksSumAggregateInputType = {
    Id?: true
    latitude?: true
    longitude?: true
  }

  export type ParksMinAggregateInputType = {
    Id?: true
    park_Id?: true
    park_english_name?: true
    park_arabic_name?: true
    image?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    location?: true
  }

  export type ParksMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    park_english_name?: true
    park_arabic_name?: true
    image?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    location?: true
  }

  export type ParksCountAggregateInputType = {
    Id?: true
    park_Id?: true
    park_english_name?: true
    park_arabic_name?: true
    image?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    _all?: true
  }

  export type ParksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks to aggregate.
     */
    where?: parksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks to fetch.
     */
    orderBy?: parksOrderByWithRelationInput | parksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks
    **/
    _count?: true | ParksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ParksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ParksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ParksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ParksMaxAggregateInputType
  }

  export type GetParksAggregateType<T extends ParksAggregateArgs> = {
        [P in keyof T & keyof AggregateParks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks[P]>
      : GetScalarType<T[P], AggregateParks[P]>
  }




  export type parksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parksWhereInput
    orderBy?: parksOrderByWithAggregationInput | parksOrderByWithAggregationInput[]
    by: ParksScalarFieldEnum[] | ParksScalarFieldEnum
    having?: parksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ParksCountAggregateInputType | true
    _avg?: ParksAvgAggregateInputType
    _sum?: ParksSumAggregateInputType
    _min?: ParksMinAggregateInputType
    _max?: ParksMaxAggregateInputType
  }

  export type ParksGroupByOutputType = {
    Id: number
    park_Id: string | null
    park_english_name: string | null
    park_arabic_name: string | null
    image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    createdAt: Date | null
    updatedAt: Date
    location: string | null
    _count: ParksCountAggregateOutputType | null
    _avg: ParksAvgAggregateOutputType | null
    _sum: ParksSumAggregateOutputType | null
    _min: ParksMinAggregateOutputType | null
    _max: ParksMaxAggregateOutputType | null
  }

  type GetParksGroupByPayload<T extends parksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ParksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ParksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ParksGroupByOutputType[P]>
            : GetScalarType<T[P], ParksGroupByOutputType[P]>
        }
      >
    >


  export type parksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    park_english_name?: boolean
    park_arabic_name?: boolean
    image?: boolean
    latitude?: boolean
    longitude?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    park_cameras?: boolean | parks$park_camerasArgs<ExtArgs>
    park_streams?: boolean | parks$park_streamsArgs<ExtArgs>
    park_zones?: boolean | parks$park_zonesArgs<ExtArgs>
    parks_attendance?: boolean | parks$parks_attendanceArgs<ExtArgs>
    parks_behaviour_alerts?: boolean | parks$parks_behaviour_alertsArgs<ExtArgs>
    parks_intrusion_detection?: boolean | parks$parks_intrusion_detectionArgs<ExtArgs>
    parks_irrigation_job_history?: boolean | parks$parks_irrigation_job_historyArgs<ExtArgs>
    parks_landscaping?: boolean | parks$parks_landscapingArgs<ExtArgs>
    parks_litter_detection?: boolean | parks$parks_litter_detectionArgs<ExtArgs>
    parks_sentiment_analysis?: boolean | parks$parks_sentiment_analysisArgs<ExtArgs>
    parks_smoking_detection?: boolean | parks$parks_smoking_detectionArgs<ExtArgs>
    parks_footfall_analysis?: boolean | parks$parks_footfall_analysisArgs<ExtArgs>
    _count?: boolean | ParksCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parks"]>



  export type parksSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    park_english_name?: boolean
    park_arabic_name?: boolean
    image?: boolean
    latitude?: boolean
    longitude?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
  }

  export type parksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "park_english_name" | "park_arabic_name" | "image" | "latitude" | "longitude" | "createdAt" | "updatedAt" | "location", ExtArgs["result"]["parks"]>
  export type parksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    park_cameras?: boolean | parks$park_camerasArgs<ExtArgs>
    park_streams?: boolean | parks$park_streamsArgs<ExtArgs>
    park_zones?: boolean | parks$park_zonesArgs<ExtArgs>
    parks_attendance?: boolean | parks$parks_attendanceArgs<ExtArgs>
    parks_behaviour_alerts?: boolean | parks$parks_behaviour_alertsArgs<ExtArgs>
    parks_intrusion_detection?: boolean | parks$parks_intrusion_detectionArgs<ExtArgs>
    parks_irrigation_job_history?: boolean | parks$parks_irrigation_job_historyArgs<ExtArgs>
    parks_landscaping?: boolean | parks$parks_landscapingArgs<ExtArgs>
    parks_litter_detection?: boolean | parks$parks_litter_detectionArgs<ExtArgs>
    parks_sentiment_analysis?: boolean | parks$parks_sentiment_analysisArgs<ExtArgs>
    parks_smoking_detection?: boolean | parks$parks_smoking_detectionArgs<ExtArgs>
    parks_footfall_analysis?: boolean | parks$parks_footfall_analysisArgs<ExtArgs>
    _count?: boolean | ParksCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $parksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks"
    objects: {
      park_cameras: Prisma.$park_camerasPayload<ExtArgs>[]
      park_streams: Prisma.$park_streamsPayload<ExtArgs>[]
      park_zones: Prisma.$park_zonesPayload<ExtArgs>[]
      parks_attendance: Prisma.$parks_attendancePayload<ExtArgs>[]
      parks_behaviour_alerts: Prisma.$parks_behaviour_alertsPayload<ExtArgs>[]
      parks_intrusion_detection: Prisma.$parks_intrusion_detectionPayload<ExtArgs>[]
      parks_irrigation_job_history: Prisma.$parks_irrigation_job_historyPayload<ExtArgs>[]
      parks_landscaping: Prisma.$parks_landscapingPayload<ExtArgs>[]
      parks_litter_detection: Prisma.$parks_litter_detectionPayload<ExtArgs>[]
      parks_sentiment_analysis: Prisma.$parks_sentiment_analysisPayload<ExtArgs>[]
      parks_smoking_detection: Prisma.$parks_smoking_detectionPayload<ExtArgs>[]
      parks_footfall_analysis: Prisma.$parks_footfall_analysisPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: string | null
      park_english_name: string | null
      park_arabic_name: string | null
      image: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date
      location: string | null
    }, ExtArgs["result"]["parks"]>
    composites: {}
  }

  type parksGetPayload<S extends boolean | null | undefined | parksDefaultArgs> = $Result.GetResult<Prisma.$parksPayload, S>

  type parksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ParksCountAggregateInputType | true
    }

  export interface parksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks'], meta: { name: 'parks' } }
    /**
     * Find zero or one Parks that matches the filter.
     * @param {parksFindUniqueArgs} args - Arguments to find a Parks
     * @example
     * // Get one Parks
     * const parks = await prisma.parks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parksFindUniqueArgs>(args: SelectSubset<T, parksFindUniqueArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parksFindUniqueOrThrowArgs} args - Arguments to find a Parks
     * @example
     * // Get one Parks
     * const parks = await prisma.parks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parksFindUniqueOrThrowArgs>(args: SelectSubset<T, parksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parksFindFirstArgs} args - Arguments to find a Parks
     * @example
     * // Get one Parks
     * const parks = await prisma.parks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parksFindFirstArgs>(args?: SelectSubset<T, parksFindFirstArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parksFindFirstOrThrowArgs} args - Arguments to find a Parks
     * @example
     * // Get one Parks
     * const parks = await prisma.parks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parksFindFirstOrThrowArgs>(args?: SelectSubset<T, parksFindFirstOrThrowArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks
     * const parks = await prisma.parks.findMany()
     * 
     * // Get first 10 Parks
     * const parks = await prisma.parks.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parksWithIdOnly = await prisma.parks.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parksFindManyArgs>(args?: SelectSubset<T, parksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks.
     * @param {parksCreateArgs} args - Arguments to create a Parks.
     * @example
     * // Create one Parks
     * const Parks = await prisma.parks.create({
     *   data: {
     *     // ... data to create a Parks
     *   }
     * })
     * 
     */
    create<T extends parksCreateArgs>(args: SelectSubset<T, parksCreateArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks.
     * @param {parksCreateManyArgs} args - Arguments to create many Parks.
     * @example
     * // Create many Parks
     * const parks = await prisma.parks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parksCreateManyArgs>(args?: SelectSubset<T, parksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks.
     * @param {parksDeleteArgs} args - Arguments to delete one Parks.
     * @example
     * // Delete one Parks
     * const Parks = await prisma.parks.delete({
     *   where: {
     *     // ... filter to delete one Parks
     *   }
     * })
     * 
     */
    delete<T extends parksDeleteArgs>(args: SelectSubset<T, parksDeleteArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks.
     * @param {parksUpdateArgs} args - Arguments to update one Parks.
     * @example
     * // Update one Parks
     * const parks = await prisma.parks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parksUpdateArgs>(args: SelectSubset<T, parksUpdateArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks.
     * @param {parksDeleteManyArgs} args - Arguments to filter Parks to delete.
     * @example
     * // Delete a few Parks
     * const { count } = await prisma.parks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parksDeleteManyArgs>(args?: SelectSubset<T, parksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks
     * const parks = await prisma.parks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parksUpdateManyArgs>(args: SelectSubset<T, parksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks.
     * @param {parksUpsertArgs} args - Arguments to update or create a Parks.
     * @example
     * // Update or create a Parks
     * const parks = await prisma.parks.upsert({
     *   create: {
     *     // ... data to create a Parks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks we want to update
     *   }
     * })
     */
    upsert<T extends parksUpsertArgs>(args: SelectSubset<T, parksUpsertArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parksCountArgs} args - Arguments to filter Parks to count.
     * @example
     * // Count the number of Parks
     * const count = await prisma.parks.count({
     *   where: {
     *     // ... the filter for the Parks we want to count
     *   }
     * })
    **/
    count<T extends parksCountArgs>(
      args?: Subset<T, parksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ParksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ParksAggregateArgs>(args: Subset<T, ParksAggregateArgs>): Prisma.PrismaPromise<GetParksAggregateType<T>>

    /**
     * Group by Parks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parksGroupByArgs['orderBy'] }
        : { orderBy?: parksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks model
   */
  readonly fields: parksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    park_cameras<T extends parks$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks$park_camerasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    park_streams<T extends parks$park_streamsArgs<ExtArgs> = {}>(args?: Subset<T, parks$park_streamsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$park_streamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    park_zones<T extends parks$park_zonesArgs<ExtArgs> = {}>(args?: Subset<T, parks$park_zonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_attendance<T extends parks$parks_attendanceArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_attendanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_behaviour_alerts<T extends parks$parks_behaviour_alertsArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_behaviour_alertsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_intrusion_detection<T extends parks$parks_intrusion_detectionArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_intrusion_detectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_irrigation_job_history<T extends parks$parks_irrigation_job_historyArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_irrigation_job_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_landscaping<T extends parks$parks_landscapingArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_landscapingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_litter_detection<T extends parks$parks_litter_detectionArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_litter_detectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_sentiment_analysis<T extends parks$parks_sentiment_analysisArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_sentiment_analysisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_smoking_detection<T extends parks$parks_smoking_detectionArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_smoking_detectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_footfall_analysis<T extends parks$parks_footfall_analysisArgs<ExtArgs> = {}>(args?: Subset<T, parks$parks_footfall_analysisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks model
   */
  interface parksFieldRefs {
    readonly Id: FieldRef<"parks", 'Int'>
    readonly park_Id: FieldRef<"parks", 'String'>
    readonly park_english_name: FieldRef<"parks", 'String'>
    readonly park_arabic_name: FieldRef<"parks", 'String'>
    readonly image: FieldRef<"parks", 'String'>
    readonly latitude: FieldRef<"parks", 'Decimal'>
    readonly longitude: FieldRef<"parks", 'Decimal'>
    readonly createdAt: FieldRef<"parks", 'DateTime'>
    readonly updatedAt: FieldRef<"parks", 'DateTime'>
    readonly location: FieldRef<"parks", 'String'>
  }
    

  // Custom InputTypes
  /**
   * parks findUnique
   */
  export type parksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * Filter, which parks to fetch.
     */
    where: parksWhereUniqueInput
  }

  /**
   * parks findUniqueOrThrow
   */
  export type parksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * Filter, which parks to fetch.
     */
    where: parksWhereUniqueInput
  }

  /**
   * parks findFirst
   */
  export type parksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * Filter, which parks to fetch.
     */
    where?: parksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks to fetch.
     */
    orderBy?: parksOrderByWithRelationInput | parksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks.
     */
    cursor?: parksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks.
     */
    distinct?: ParksScalarFieldEnum | ParksScalarFieldEnum[]
  }

  /**
   * parks findFirstOrThrow
   */
  export type parksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * Filter, which parks to fetch.
     */
    where?: parksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks to fetch.
     */
    orderBy?: parksOrderByWithRelationInput | parksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks.
     */
    cursor?: parksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks.
     */
    distinct?: ParksScalarFieldEnum | ParksScalarFieldEnum[]
  }

  /**
   * parks findMany
   */
  export type parksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * Filter, which parks to fetch.
     */
    where?: parksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks to fetch.
     */
    orderBy?: parksOrderByWithRelationInput | parksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks.
     */
    cursor?: parksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks.
     */
    skip?: number
    distinct?: ParksScalarFieldEnum | ParksScalarFieldEnum[]
  }

  /**
   * parks create
   */
  export type parksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * The data needed to create a parks.
     */
    data?: XOR<parksCreateInput, parksUncheckedCreateInput>
  }

  /**
   * parks createMany
   */
  export type parksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks.
     */
    data: parksCreateManyInput | parksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks update
   */
  export type parksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * The data needed to update a parks.
     */
    data: XOR<parksUpdateInput, parksUncheckedUpdateInput>
    /**
     * Choose, which parks to update.
     */
    where: parksWhereUniqueInput
  }

  /**
   * parks updateMany
   */
  export type parksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks.
     */
    data: XOR<parksUpdateManyMutationInput, parksUncheckedUpdateManyInput>
    /**
     * Filter which parks to update
     */
    where?: parksWhereInput
    /**
     * Limit how many parks to update.
     */
    limit?: number
  }

  /**
   * parks upsert
   */
  export type parksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * The filter to search for the parks to update in case it exists.
     */
    where: parksWhereUniqueInput
    /**
     * In case the parks found by the `where` argument doesn't exist, create a new parks with this data.
     */
    create: XOR<parksCreateInput, parksUncheckedCreateInput>
    /**
     * In case the parks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parksUpdateInput, parksUncheckedUpdateInput>
  }

  /**
   * parks delete
   */
  export type parksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    /**
     * Filter which parks to delete.
     */
    where: parksWhereUniqueInput
  }

  /**
   * parks deleteMany
   */
  export type parksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks to delete
     */
    where?: parksWhereInput
    /**
     * Limit how many parks to delete.
     */
    limit?: number
  }

  /**
   * parks.park_cameras
   */
  export type parks$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
    orderBy?: park_camerasOrderByWithRelationInput | park_camerasOrderByWithRelationInput[]
    cursor?: park_camerasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Park_camerasScalarFieldEnum | Park_camerasScalarFieldEnum[]
  }

  /**
   * parks.park_streams
   */
  export type parks$park_streamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_streams
     */
    select?: park_streamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_streams
     */
    omit?: park_streamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_streamsInclude<ExtArgs> | null
    where?: park_streamsWhereInput
    orderBy?: park_streamsOrderByWithRelationInput | park_streamsOrderByWithRelationInput[]
    cursor?: park_streamsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Park_streamsScalarFieldEnum | Park_streamsScalarFieldEnum[]
  }

  /**
   * parks.park_zones
   */
  export type parks$park_zonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    where?: park_zonesWhereInput
    orderBy?: park_zonesOrderByWithRelationInput | park_zonesOrderByWithRelationInput[]
    cursor?: park_zonesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Park_zonesScalarFieldEnum | Park_zonesScalarFieldEnum[]
  }

  /**
   * parks.parks_attendance
   */
  export type parks$parks_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    where?: parks_attendanceWhereInput
    orderBy?: parks_attendanceOrderByWithRelationInput | parks_attendanceOrderByWithRelationInput[]
    cursor?: parks_attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_attendanceScalarFieldEnum | Parks_attendanceScalarFieldEnum[]
  }

  /**
   * parks.parks_behaviour_alerts
   */
  export type parks$parks_behaviour_alertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    where?: parks_behaviour_alertsWhereInput
    orderBy?: parks_behaviour_alertsOrderByWithRelationInput | parks_behaviour_alertsOrderByWithRelationInput[]
    cursor?: parks_behaviour_alertsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_behaviour_alertsScalarFieldEnum | Parks_behaviour_alertsScalarFieldEnum[]
  }

  /**
   * parks.parks_intrusion_detection
   */
  export type parks$parks_intrusion_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    where?: parks_intrusion_detectionWhereInput
    orderBy?: parks_intrusion_detectionOrderByWithRelationInput | parks_intrusion_detectionOrderByWithRelationInput[]
    cursor?: parks_intrusion_detectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_intrusion_detectionScalarFieldEnum | Parks_intrusion_detectionScalarFieldEnum[]
  }

  /**
   * parks.parks_irrigation_job_history
   */
  export type parks$parks_irrigation_job_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    where?: parks_irrigation_job_historyWhereInput
    orderBy?: parks_irrigation_job_historyOrderByWithRelationInput | parks_irrigation_job_historyOrderByWithRelationInput[]
    cursor?: parks_irrigation_job_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_irrigation_job_historyScalarFieldEnum | Parks_irrigation_job_historyScalarFieldEnum[]
  }

  /**
   * parks.parks_landscaping
   */
  export type parks$parks_landscapingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    where?: parks_landscapingWhereInput
    orderBy?: parks_landscapingOrderByWithRelationInput | parks_landscapingOrderByWithRelationInput[]
    cursor?: parks_landscapingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_landscapingScalarFieldEnum | Parks_landscapingScalarFieldEnum[]
  }

  /**
   * parks.parks_litter_detection
   */
  export type parks$parks_litter_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    where?: parks_litter_detectionWhereInput
    orderBy?: parks_litter_detectionOrderByWithRelationInput | parks_litter_detectionOrderByWithRelationInput[]
    cursor?: parks_litter_detectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_litter_detectionScalarFieldEnum | Parks_litter_detectionScalarFieldEnum[]
  }

  /**
   * parks.parks_sentiment_analysis
   */
  export type parks$parks_sentiment_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    where?: parks_sentiment_analysisWhereInput
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    cursor?: parks_sentiment_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_sentiment_analysisScalarFieldEnum | Parks_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * parks.parks_smoking_detection
   */
  export type parks$parks_smoking_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    where?: parks_smoking_detectionWhereInput
    orderBy?: parks_smoking_detectionOrderByWithRelationInput | parks_smoking_detectionOrderByWithRelationInput[]
    cursor?: parks_smoking_detectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_smoking_detectionScalarFieldEnum | Parks_smoking_detectionScalarFieldEnum[]
  }

  /**
   * parks.parks_footfall_analysis
   */
  export type parks$parks_footfall_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    where?: parks_footfall_analysisWhereInput
    orderBy?: parks_footfall_analysisOrderByWithRelationInput | parks_footfall_analysisOrderByWithRelationInput[]
    cursor?: parks_footfall_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_footfall_analysisScalarFieldEnum | Parks_footfall_analysisScalarFieldEnum[]
  }

  /**
   * parks without action
   */
  export type parksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
  }


  /**
   * Model parks_attendance
   */

  export type AggregateParks_attendance = {
    _count: Parks_attendanceCountAggregateOutputType | null
    _avg: Parks_attendanceAvgAggregateOutputType | null
    _sum: Parks_attendanceSumAggregateOutputType | null
    _min: Parks_attendanceMinAggregateOutputType | null
    _max: Parks_attendanceMaxAggregateOutputType | null
  }

  export type Parks_attendanceAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: number | null
  }

  export type Parks_attendanceSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: number | null
  }

  export type Parks_attendanceMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: number | null
    entry_time: Date | null
    exit_time: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_attendanceMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: number | null
    entry_time: Date | null
    exit_time: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_attendanceCountAggregateOutputType = {
    Id: number
    park_Id: number
    person_Id: number
    entry_time: number
    exit_time: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_attendanceAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
  }

  export type Parks_attendanceSumAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
  }

  export type Parks_attendanceMinAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    entry_time?: true
    exit_time?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_attendanceMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    entry_time?: true
    exit_time?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_attendanceCountAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    entry_time?: true
    exit_time?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_attendanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_attendance to aggregate.
     */
    where?: parks_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_attendances to fetch.
     */
    orderBy?: parks_attendanceOrderByWithRelationInput | parks_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_attendances
    **/
    _count?: true | Parks_attendanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_attendanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_attendanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_attendanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_attendanceMaxAggregateInputType
  }

  export type GetParks_attendanceAggregateType<T extends Parks_attendanceAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_attendance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_attendance[P]>
      : GetScalarType<T[P], AggregateParks_attendance[P]>
  }




  export type parks_attendanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_attendanceWhereInput
    orderBy?: parks_attendanceOrderByWithAggregationInput | parks_attendanceOrderByWithAggregationInput[]
    by: Parks_attendanceScalarFieldEnum[] | Parks_attendanceScalarFieldEnum
    having?: parks_attendanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_attendanceCountAggregateInputType | true
    _avg?: Parks_attendanceAvgAggregateInputType
    _sum?: Parks_attendanceSumAggregateInputType
    _min?: Parks_attendanceMinAggregateInputType
    _max?: Parks_attendanceMaxAggregateInputType
  }

  export type Parks_attendanceGroupByOutputType = {
    Id: number
    park_Id: number | null
    person_Id: number | null
    entry_time: Date | null
    exit_time: Date | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_attendanceCountAggregateOutputType | null
    _avg: Parks_attendanceAvgAggregateOutputType | null
    _sum: Parks_attendanceSumAggregateOutputType | null
    _min: Parks_attendanceMinAggregateOutputType | null
    _max: Parks_attendanceMaxAggregateOutputType | null
  }

  type GetParks_attendanceGroupByPayload<T extends parks_attendanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_attendanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_attendanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_attendanceGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_attendanceGroupByOutputType[P]>
        }
      >
    >


  export type parks_attendanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    person_Id?: boolean
    entry_time?: boolean
    exit_time?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    park?: boolean | parks_attendance$parkArgs<ExtArgs>
    user?: boolean | parks_attendance$userArgs<ExtArgs>
  }, ExtArgs["result"]["parks_attendance"]>



  export type parks_attendanceSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    person_Id?: boolean
    entry_time?: boolean
    exit_time?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_attendanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "person_Id" | "entry_time" | "exit_time" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_attendance"]>
  export type parks_attendanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    park?: boolean | parks_attendance$parkArgs<ExtArgs>
    user?: boolean | parks_attendance$userArgs<ExtArgs>
  }

  export type $parks_attendancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_attendance"
    objects: {
      park: Prisma.$parksPayload<ExtArgs> | null
      user: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      person_Id: number | null
      entry_time: Date | null
      exit_time: Date | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_attendance"]>
    composites: {}
  }

  type parks_attendanceGetPayload<S extends boolean | null | undefined | parks_attendanceDefaultArgs> = $Result.GetResult<Prisma.$parks_attendancePayload, S>

  type parks_attendanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_attendanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_attendanceCountAggregateInputType | true
    }

  export interface parks_attendanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_attendance'], meta: { name: 'parks_attendance' } }
    /**
     * Find zero or one Parks_attendance that matches the filter.
     * @param {parks_attendanceFindUniqueArgs} args - Arguments to find a Parks_attendance
     * @example
     * // Get one Parks_attendance
     * const parks_attendance = await prisma.parks_attendance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_attendanceFindUniqueArgs>(args: SelectSubset<T, parks_attendanceFindUniqueArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_attendance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_attendanceFindUniqueOrThrowArgs} args - Arguments to find a Parks_attendance
     * @example
     * // Get one Parks_attendance
     * const parks_attendance = await prisma.parks_attendance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_attendanceFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_attendanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_attendance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_attendanceFindFirstArgs} args - Arguments to find a Parks_attendance
     * @example
     * // Get one Parks_attendance
     * const parks_attendance = await prisma.parks_attendance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_attendanceFindFirstArgs>(args?: SelectSubset<T, parks_attendanceFindFirstArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_attendance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_attendanceFindFirstOrThrowArgs} args - Arguments to find a Parks_attendance
     * @example
     * // Get one Parks_attendance
     * const parks_attendance = await prisma.parks_attendance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_attendanceFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_attendanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_attendances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_attendanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_attendances
     * const parks_attendances = await prisma.parks_attendance.findMany()
     * 
     * // Get first 10 Parks_attendances
     * const parks_attendances = await prisma.parks_attendance.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_attendanceWithIdOnly = await prisma.parks_attendance.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_attendanceFindManyArgs>(args?: SelectSubset<T, parks_attendanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_attendance.
     * @param {parks_attendanceCreateArgs} args - Arguments to create a Parks_attendance.
     * @example
     * // Create one Parks_attendance
     * const Parks_attendance = await prisma.parks_attendance.create({
     *   data: {
     *     // ... data to create a Parks_attendance
     *   }
     * })
     * 
     */
    create<T extends parks_attendanceCreateArgs>(args: SelectSubset<T, parks_attendanceCreateArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_attendances.
     * @param {parks_attendanceCreateManyArgs} args - Arguments to create many Parks_attendances.
     * @example
     * // Create many Parks_attendances
     * const parks_attendance = await prisma.parks_attendance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_attendanceCreateManyArgs>(args?: SelectSubset<T, parks_attendanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_attendance.
     * @param {parks_attendanceDeleteArgs} args - Arguments to delete one Parks_attendance.
     * @example
     * // Delete one Parks_attendance
     * const Parks_attendance = await prisma.parks_attendance.delete({
     *   where: {
     *     // ... filter to delete one Parks_attendance
     *   }
     * })
     * 
     */
    delete<T extends parks_attendanceDeleteArgs>(args: SelectSubset<T, parks_attendanceDeleteArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_attendance.
     * @param {parks_attendanceUpdateArgs} args - Arguments to update one Parks_attendance.
     * @example
     * // Update one Parks_attendance
     * const parks_attendance = await prisma.parks_attendance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_attendanceUpdateArgs>(args: SelectSubset<T, parks_attendanceUpdateArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_attendances.
     * @param {parks_attendanceDeleteManyArgs} args - Arguments to filter Parks_attendances to delete.
     * @example
     * // Delete a few Parks_attendances
     * const { count } = await prisma.parks_attendance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_attendanceDeleteManyArgs>(args?: SelectSubset<T, parks_attendanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_attendanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_attendances
     * const parks_attendance = await prisma.parks_attendance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_attendanceUpdateManyArgs>(args: SelectSubset<T, parks_attendanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_attendance.
     * @param {parks_attendanceUpsertArgs} args - Arguments to update or create a Parks_attendance.
     * @example
     * // Update or create a Parks_attendance
     * const parks_attendance = await prisma.parks_attendance.upsert({
     *   create: {
     *     // ... data to create a Parks_attendance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_attendance we want to update
     *   }
     * })
     */
    upsert<T extends parks_attendanceUpsertArgs>(args: SelectSubset<T, parks_attendanceUpsertArgs<ExtArgs>>): Prisma__parks_attendanceClient<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_attendanceCountArgs} args - Arguments to filter Parks_attendances to count.
     * @example
     * // Count the number of Parks_attendances
     * const count = await prisma.parks_attendance.count({
     *   where: {
     *     // ... the filter for the Parks_attendances we want to count
     *   }
     * })
    **/
    count<T extends parks_attendanceCountArgs>(
      args?: Subset<T, parks_attendanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_attendanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_attendanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_attendanceAggregateArgs>(args: Subset<T, Parks_attendanceAggregateArgs>): Prisma.PrismaPromise<GetParks_attendanceAggregateType<T>>

    /**
     * Group by Parks_attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_attendanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_attendanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_attendanceGroupByArgs['orderBy'] }
        : { orderBy?: parks_attendanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_attendanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_attendanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_attendance model
   */
  readonly fields: parks_attendanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_attendance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_attendanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    park<T extends parks_attendance$parkArgs<ExtArgs> = {}>(args?: Subset<T, parks_attendance$parkArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends parks_attendance$userArgs<ExtArgs> = {}>(args?: Subset<T, parks_attendance$userArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_attendance model
   */
  interface parks_attendanceFieldRefs {
    readonly Id: FieldRef<"parks_attendance", 'Int'>
    readonly park_Id: FieldRef<"parks_attendance", 'Int'>
    readonly person_Id: FieldRef<"parks_attendance", 'Int'>
    readonly entry_time: FieldRef<"parks_attendance", 'DateTime'>
    readonly exit_time: FieldRef<"parks_attendance", 'DateTime'>
    readonly createdAt: FieldRef<"parks_attendance", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_attendance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_attendance findUnique
   */
  export type parks_attendanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which parks_attendance to fetch.
     */
    where: parks_attendanceWhereUniqueInput
  }

  /**
   * parks_attendance findUniqueOrThrow
   */
  export type parks_attendanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which parks_attendance to fetch.
     */
    where: parks_attendanceWhereUniqueInput
  }

  /**
   * parks_attendance findFirst
   */
  export type parks_attendanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which parks_attendance to fetch.
     */
    where?: parks_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_attendances to fetch.
     */
    orderBy?: parks_attendanceOrderByWithRelationInput | parks_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_attendances.
     */
    cursor?: parks_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_attendances.
     */
    distinct?: Parks_attendanceScalarFieldEnum | Parks_attendanceScalarFieldEnum[]
  }

  /**
   * parks_attendance findFirstOrThrow
   */
  export type parks_attendanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which parks_attendance to fetch.
     */
    where?: parks_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_attendances to fetch.
     */
    orderBy?: parks_attendanceOrderByWithRelationInput | parks_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_attendances.
     */
    cursor?: parks_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_attendances.
     */
    distinct?: Parks_attendanceScalarFieldEnum | Parks_attendanceScalarFieldEnum[]
  }

  /**
   * parks_attendance findMany
   */
  export type parks_attendanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * Filter, which parks_attendances to fetch.
     */
    where?: parks_attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_attendances to fetch.
     */
    orderBy?: parks_attendanceOrderByWithRelationInput | parks_attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_attendances.
     */
    cursor?: parks_attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_attendances.
     */
    skip?: number
    distinct?: Parks_attendanceScalarFieldEnum | Parks_attendanceScalarFieldEnum[]
  }

  /**
   * parks_attendance create
   */
  export type parks_attendanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_attendance.
     */
    data?: XOR<parks_attendanceCreateInput, parks_attendanceUncheckedCreateInput>
  }

  /**
   * parks_attendance createMany
   */
  export type parks_attendanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_attendances.
     */
    data: parks_attendanceCreateManyInput | parks_attendanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_attendance update
   */
  export type parks_attendanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_attendance.
     */
    data: XOR<parks_attendanceUpdateInput, parks_attendanceUncheckedUpdateInput>
    /**
     * Choose, which parks_attendance to update.
     */
    where: parks_attendanceWhereUniqueInput
  }

  /**
   * parks_attendance updateMany
   */
  export type parks_attendanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_attendances.
     */
    data: XOR<parks_attendanceUpdateManyMutationInput, parks_attendanceUncheckedUpdateManyInput>
    /**
     * Filter which parks_attendances to update
     */
    where?: parks_attendanceWhereInput
    /**
     * Limit how many parks_attendances to update.
     */
    limit?: number
  }

  /**
   * parks_attendance upsert
   */
  export type parks_attendanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_attendance to update in case it exists.
     */
    where: parks_attendanceWhereUniqueInput
    /**
     * In case the parks_attendance found by the `where` argument doesn't exist, create a new parks_attendance with this data.
     */
    create: XOR<parks_attendanceCreateInput, parks_attendanceUncheckedCreateInput>
    /**
     * In case the parks_attendance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_attendanceUpdateInput, parks_attendanceUncheckedUpdateInput>
  }

  /**
   * parks_attendance delete
   */
  export type parks_attendanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    /**
     * Filter which parks_attendance to delete.
     */
    where: parks_attendanceWhereUniqueInput
  }

  /**
   * parks_attendance deleteMany
   */
  export type parks_attendanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_attendances to delete
     */
    where?: parks_attendanceWhereInput
    /**
     * Limit how many parks_attendances to delete.
     */
    limit?: number
  }

  /**
   * parks_attendance.park
   */
  export type parks_attendance$parkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_attendance.user
   */
  export type parks_attendance$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * parks_attendance without action
   */
  export type parks_attendanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
  }


  /**
   * Model parks_behaviour_alerts
   */

  export type AggregateParks_behaviour_alerts = {
    _count: Parks_behaviour_alertsCountAggregateOutputType | null
    _avg: Parks_behaviour_alertsAvgAggregateOutputType | null
    _sum: Parks_behaviour_alertsSumAggregateOutputType | null
    _min: Parks_behaviour_alertsMinAggregateOutputType | null
    _max: Parks_behaviour_alertsMaxAggregateOutputType | null
  }

  export type Parks_behaviour_alertsAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_behaviour_alertsSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_behaviour_alertsMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: string | null
    camera_Id: number | null
    detection_Id: string | null
    detection_code: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    detected_behaviour: string | null
    is_employee: boolean | null
    snap_shot: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_behaviour_alertsMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: string | null
    camera_Id: number | null
    detection_Id: string | null
    detection_code: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    detected_behaviour: string | null
    is_employee: boolean | null
    snap_shot: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_behaviour_alertsCountAggregateOutputType = {
    Id: number
    park_Id: number
    person_Id: number
    camera_Id: number
    detection_Id: number
    detection_code: number
    detection_date: number
    detection_time: number
    description: number
    detected_behaviour: number
    is_employee: number
    snap_shot: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_behaviour_alertsAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_behaviour_alertsSumAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_behaviour_alertsMinAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    camera_Id?: true
    detection_Id?: true
    detection_code?: true
    detection_date?: true
    detection_time?: true
    description?: true
    detected_behaviour?: true
    is_employee?: true
    snap_shot?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_behaviour_alertsMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    camera_Id?: true
    detection_Id?: true
    detection_code?: true
    detection_date?: true
    detection_time?: true
    description?: true
    detected_behaviour?: true
    is_employee?: true
    snap_shot?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_behaviour_alertsCountAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    camera_Id?: true
    detection_Id?: true
    detection_code?: true
    detection_date?: true
    detection_time?: true
    description?: true
    detected_behaviour?: true
    is_employee?: true
    snap_shot?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_behaviour_alertsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_behaviour_alerts to aggregate.
     */
    where?: parks_behaviour_alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_behaviour_alerts to fetch.
     */
    orderBy?: parks_behaviour_alertsOrderByWithRelationInput | parks_behaviour_alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_behaviour_alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_behaviour_alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_behaviour_alerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_behaviour_alerts
    **/
    _count?: true | Parks_behaviour_alertsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_behaviour_alertsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_behaviour_alertsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_behaviour_alertsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_behaviour_alertsMaxAggregateInputType
  }

  export type GetParks_behaviour_alertsAggregateType<T extends Parks_behaviour_alertsAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_behaviour_alerts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_behaviour_alerts[P]>
      : GetScalarType<T[P], AggregateParks_behaviour_alerts[P]>
  }




  export type parks_behaviour_alertsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_behaviour_alertsWhereInput
    orderBy?: parks_behaviour_alertsOrderByWithAggregationInput | parks_behaviour_alertsOrderByWithAggregationInput[]
    by: Parks_behaviour_alertsScalarFieldEnum[] | Parks_behaviour_alertsScalarFieldEnum
    having?: parks_behaviour_alertsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_behaviour_alertsCountAggregateInputType | true
    _avg?: Parks_behaviour_alertsAvgAggregateInputType
    _sum?: Parks_behaviour_alertsSumAggregateInputType
    _min?: Parks_behaviour_alertsMinAggregateInputType
    _max?: Parks_behaviour_alertsMaxAggregateInputType
  }

  export type Parks_behaviour_alertsGroupByOutputType = {
    Id: number
    park_Id: number | null
    person_Id: string | null
    camera_Id: number | null
    detection_Id: string | null
    detection_code: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    detected_behaviour: string | null
    is_employee: boolean | null
    snap_shot: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_behaviour_alertsCountAggregateOutputType | null
    _avg: Parks_behaviour_alertsAvgAggregateOutputType | null
    _sum: Parks_behaviour_alertsSumAggregateOutputType | null
    _min: Parks_behaviour_alertsMinAggregateOutputType | null
    _max: Parks_behaviour_alertsMaxAggregateOutputType | null
  }

  type GetParks_behaviour_alertsGroupByPayload<T extends parks_behaviour_alertsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_behaviour_alertsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_behaviour_alertsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_behaviour_alertsGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_behaviour_alertsGroupByOutputType[P]>
        }
      >
    >


  export type parks_behaviour_alertsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    person_Id?: boolean
    camera_Id?: boolean
    detection_Id?: boolean
    detection_code?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    detected_behaviour?: boolean
    is_employee?: boolean
    snap_shot?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_behaviour_alerts$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_behaviour_alerts$park_camerasArgs<ExtArgs>
  }, ExtArgs["result"]["parks_behaviour_alerts"]>



  export type parks_behaviour_alertsSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    person_Id?: boolean
    camera_Id?: boolean
    detection_Id?: boolean
    detection_code?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    detected_behaviour?: boolean
    is_employee?: boolean
    snap_shot?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_behaviour_alertsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "person_Id" | "camera_Id" | "detection_Id" | "detection_code" | "detection_date" | "detection_time" | "description" | "detected_behaviour" | "is_employee" | "snap_shot" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_behaviour_alerts"]>
  export type parks_behaviour_alertsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_behaviour_alerts$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_behaviour_alerts$park_camerasArgs<ExtArgs>
  }

  export type $parks_behaviour_alertsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_behaviour_alerts"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      person_Id: string | null
      camera_Id: number | null
      detection_Id: string | null
      detection_code: string | null
      detection_date: Date | null
      detection_time: Date | null
      description: string | null
      detected_behaviour: string | null
      is_employee: boolean | null
      snap_shot: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_behaviour_alerts"]>
    composites: {}
  }

  type parks_behaviour_alertsGetPayload<S extends boolean | null | undefined | parks_behaviour_alertsDefaultArgs> = $Result.GetResult<Prisma.$parks_behaviour_alertsPayload, S>

  type parks_behaviour_alertsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_behaviour_alertsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_behaviour_alertsCountAggregateInputType | true
    }

  export interface parks_behaviour_alertsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_behaviour_alerts'], meta: { name: 'parks_behaviour_alerts' } }
    /**
     * Find zero or one Parks_behaviour_alerts that matches the filter.
     * @param {parks_behaviour_alertsFindUniqueArgs} args - Arguments to find a Parks_behaviour_alerts
     * @example
     * // Get one Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_behaviour_alertsFindUniqueArgs>(args: SelectSubset<T, parks_behaviour_alertsFindUniqueArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_behaviour_alerts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_behaviour_alertsFindUniqueOrThrowArgs} args - Arguments to find a Parks_behaviour_alerts
     * @example
     * // Get one Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_behaviour_alertsFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_behaviour_alertsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_behaviour_alerts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_behaviour_alertsFindFirstArgs} args - Arguments to find a Parks_behaviour_alerts
     * @example
     * // Get one Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_behaviour_alertsFindFirstArgs>(args?: SelectSubset<T, parks_behaviour_alertsFindFirstArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_behaviour_alerts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_behaviour_alertsFindFirstOrThrowArgs} args - Arguments to find a Parks_behaviour_alerts
     * @example
     * // Get one Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_behaviour_alertsFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_behaviour_alertsFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_behaviour_alerts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_behaviour_alertsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findMany()
     * 
     * // Get first 10 Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_behaviour_alertsWithIdOnly = await prisma.parks_behaviour_alerts.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_behaviour_alertsFindManyArgs>(args?: SelectSubset<T, parks_behaviour_alertsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_behaviour_alerts.
     * @param {parks_behaviour_alertsCreateArgs} args - Arguments to create a Parks_behaviour_alerts.
     * @example
     * // Create one Parks_behaviour_alerts
     * const Parks_behaviour_alerts = await prisma.parks_behaviour_alerts.create({
     *   data: {
     *     // ... data to create a Parks_behaviour_alerts
     *   }
     * })
     * 
     */
    create<T extends parks_behaviour_alertsCreateArgs>(args: SelectSubset<T, parks_behaviour_alertsCreateArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_behaviour_alerts.
     * @param {parks_behaviour_alertsCreateManyArgs} args - Arguments to create many Parks_behaviour_alerts.
     * @example
     * // Create many Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_behaviour_alertsCreateManyArgs>(args?: SelectSubset<T, parks_behaviour_alertsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_behaviour_alerts.
     * @param {parks_behaviour_alertsDeleteArgs} args - Arguments to delete one Parks_behaviour_alerts.
     * @example
     * // Delete one Parks_behaviour_alerts
     * const Parks_behaviour_alerts = await prisma.parks_behaviour_alerts.delete({
     *   where: {
     *     // ... filter to delete one Parks_behaviour_alerts
     *   }
     * })
     * 
     */
    delete<T extends parks_behaviour_alertsDeleteArgs>(args: SelectSubset<T, parks_behaviour_alertsDeleteArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_behaviour_alerts.
     * @param {parks_behaviour_alertsUpdateArgs} args - Arguments to update one Parks_behaviour_alerts.
     * @example
     * // Update one Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_behaviour_alertsUpdateArgs>(args: SelectSubset<T, parks_behaviour_alertsUpdateArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_behaviour_alerts.
     * @param {parks_behaviour_alertsDeleteManyArgs} args - Arguments to filter Parks_behaviour_alerts to delete.
     * @example
     * // Delete a few Parks_behaviour_alerts
     * const { count } = await prisma.parks_behaviour_alerts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_behaviour_alertsDeleteManyArgs>(args?: SelectSubset<T, parks_behaviour_alertsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_behaviour_alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_behaviour_alertsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_behaviour_alertsUpdateManyArgs>(args: SelectSubset<T, parks_behaviour_alertsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_behaviour_alerts.
     * @param {parks_behaviour_alertsUpsertArgs} args - Arguments to update or create a Parks_behaviour_alerts.
     * @example
     * // Update or create a Parks_behaviour_alerts
     * const parks_behaviour_alerts = await prisma.parks_behaviour_alerts.upsert({
     *   create: {
     *     // ... data to create a Parks_behaviour_alerts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_behaviour_alerts we want to update
     *   }
     * })
     */
    upsert<T extends parks_behaviour_alertsUpsertArgs>(args: SelectSubset<T, parks_behaviour_alertsUpsertArgs<ExtArgs>>): Prisma__parks_behaviour_alertsClient<$Result.GetResult<Prisma.$parks_behaviour_alertsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_behaviour_alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_behaviour_alertsCountArgs} args - Arguments to filter Parks_behaviour_alerts to count.
     * @example
     * // Count the number of Parks_behaviour_alerts
     * const count = await prisma.parks_behaviour_alerts.count({
     *   where: {
     *     // ... the filter for the Parks_behaviour_alerts we want to count
     *   }
     * })
    **/
    count<T extends parks_behaviour_alertsCountArgs>(
      args?: Subset<T, parks_behaviour_alertsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_behaviour_alertsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_behaviour_alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_behaviour_alertsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_behaviour_alertsAggregateArgs>(args: Subset<T, Parks_behaviour_alertsAggregateArgs>): Prisma.PrismaPromise<GetParks_behaviour_alertsAggregateType<T>>

    /**
     * Group by Parks_behaviour_alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_behaviour_alertsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_behaviour_alertsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_behaviour_alertsGroupByArgs['orderBy'] }
        : { orderBy?: parks_behaviour_alertsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_behaviour_alertsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_behaviour_alertsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_behaviour_alerts model
   */
  readonly fields: parks_behaviour_alertsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_behaviour_alerts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_behaviour_alertsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_behaviour_alerts$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_behaviour_alerts$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras<T extends parks_behaviour_alerts$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_behaviour_alerts$park_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_behaviour_alerts model
   */
  interface parks_behaviour_alertsFieldRefs {
    readonly Id: FieldRef<"parks_behaviour_alerts", 'Int'>
    readonly park_Id: FieldRef<"parks_behaviour_alerts", 'Int'>
    readonly person_Id: FieldRef<"parks_behaviour_alerts", 'String'>
    readonly camera_Id: FieldRef<"parks_behaviour_alerts", 'Int'>
    readonly detection_Id: FieldRef<"parks_behaviour_alerts", 'String'>
    readonly detection_code: FieldRef<"parks_behaviour_alerts", 'String'>
    readonly detection_date: FieldRef<"parks_behaviour_alerts", 'DateTime'>
    readonly detection_time: FieldRef<"parks_behaviour_alerts", 'DateTime'>
    readonly description: FieldRef<"parks_behaviour_alerts", 'String'>
    readonly detected_behaviour: FieldRef<"parks_behaviour_alerts", 'String'>
    readonly is_employee: FieldRef<"parks_behaviour_alerts", 'Boolean'>
    readonly snap_shot: FieldRef<"parks_behaviour_alerts", 'String'>
    readonly createdAt: FieldRef<"parks_behaviour_alerts", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_behaviour_alerts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_behaviour_alerts findUnique
   */
  export type parks_behaviour_alertsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * Filter, which parks_behaviour_alerts to fetch.
     */
    where: parks_behaviour_alertsWhereUniqueInput
  }

  /**
   * parks_behaviour_alerts findUniqueOrThrow
   */
  export type parks_behaviour_alertsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * Filter, which parks_behaviour_alerts to fetch.
     */
    where: parks_behaviour_alertsWhereUniqueInput
  }

  /**
   * parks_behaviour_alerts findFirst
   */
  export type parks_behaviour_alertsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * Filter, which parks_behaviour_alerts to fetch.
     */
    where?: parks_behaviour_alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_behaviour_alerts to fetch.
     */
    orderBy?: parks_behaviour_alertsOrderByWithRelationInput | parks_behaviour_alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_behaviour_alerts.
     */
    cursor?: parks_behaviour_alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_behaviour_alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_behaviour_alerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_behaviour_alerts.
     */
    distinct?: Parks_behaviour_alertsScalarFieldEnum | Parks_behaviour_alertsScalarFieldEnum[]
  }

  /**
   * parks_behaviour_alerts findFirstOrThrow
   */
  export type parks_behaviour_alertsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * Filter, which parks_behaviour_alerts to fetch.
     */
    where?: parks_behaviour_alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_behaviour_alerts to fetch.
     */
    orderBy?: parks_behaviour_alertsOrderByWithRelationInput | parks_behaviour_alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_behaviour_alerts.
     */
    cursor?: parks_behaviour_alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_behaviour_alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_behaviour_alerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_behaviour_alerts.
     */
    distinct?: Parks_behaviour_alertsScalarFieldEnum | Parks_behaviour_alertsScalarFieldEnum[]
  }

  /**
   * parks_behaviour_alerts findMany
   */
  export type parks_behaviour_alertsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * Filter, which parks_behaviour_alerts to fetch.
     */
    where?: parks_behaviour_alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_behaviour_alerts to fetch.
     */
    orderBy?: parks_behaviour_alertsOrderByWithRelationInput | parks_behaviour_alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_behaviour_alerts.
     */
    cursor?: parks_behaviour_alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_behaviour_alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_behaviour_alerts.
     */
    skip?: number
    distinct?: Parks_behaviour_alertsScalarFieldEnum | Parks_behaviour_alertsScalarFieldEnum[]
  }

  /**
   * parks_behaviour_alerts create
   */
  export type parks_behaviour_alertsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_behaviour_alerts.
     */
    data?: XOR<parks_behaviour_alertsCreateInput, parks_behaviour_alertsUncheckedCreateInput>
  }

  /**
   * parks_behaviour_alerts createMany
   */
  export type parks_behaviour_alertsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_behaviour_alerts.
     */
    data: parks_behaviour_alertsCreateManyInput | parks_behaviour_alertsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_behaviour_alerts update
   */
  export type parks_behaviour_alertsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_behaviour_alerts.
     */
    data: XOR<parks_behaviour_alertsUpdateInput, parks_behaviour_alertsUncheckedUpdateInput>
    /**
     * Choose, which parks_behaviour_alerts to update.
     */
    where: parks_behaviour_alertsWhereUniqueInput
  }

  /**
   * parks_behaviour_alerts updateMany
   */
  export type parks_behaviour_alertsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_behaviour_alerts.
     */
    data: XOR<parks_behaviour_alertsUpdateManyMutationInput, parks_behaviour_alertsUncheckedUpdateManyInput>
    /**
     * Filter which parks_behaviour_alerts to update
     */
    where?: parks_behaviour_alertsWhereInput
    /**
     * Limit how many parks_behaviour_alerts to update.
     */
    limit?: number
  }

  /**
   * parks_behaviour_alerts upsert
   */
  export type parks_behaviour_alertsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_behaviour_alerts to update in case it exists.
     */
    where: parks_behaviour_alertsWhereUniqueInput
    /**
     * In case the parks_behaviour_alerts found by the `where` argument doesn't exist, create a new parks_behaviour_alerts with this data.
     */
    create: XOR<parks_behaviour_alertsCreateInput, parks_behaviour_alertsUncheckedCreateInput>
    /**
     * In case the parks_behaviour_alerts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_behaviour_alertsUpdateInput, parks_behaviour_alertsUncheckedUpdateInput>
  }

  /**
   * parks_behaviour_alerts delete
   */
  export type parks_behaviour_alertsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
    /**
     * Filter which parks_behaviour_alerts to delete.
     */
    where: parks_behaviour_alertsWhereUniqueInput
  }

  /**
   * parks_behaviour_alerts deleteMany
   */
  export type parks_behaviour_alertsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_behaviour_alerts to delete
     */
    where?: parks_behaviour_alertsWhereInput
    /**
     * Limit how many parks_behaviour_alerts to delete.
     */
    limit?: number
  }

  /**
   * parks_behaviour_alerts.parks
   */
  export type parks_behaviour_alerts$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_behaviour_alerts.park_cameras
   */
  export type parks_behaviour_alerts$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_behaviour_alerts without action
   */
  export type parks_behaviour_alertsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_behaviour_alerts
     */
    select?: parks_behaviour_alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_behaviour_alerts
     */
    omit?: parks_behaviour_alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_behaviour_alertsInclude<ExtArgs> | null
  }


  /**
   * Model parks_intrusion_detection
   */

  export type AggregateParks_intrusion_detection = {
    _count: Parks_intrusion_detectionCountAggregateOutputType | null
    _avg: Parks_intrusion_detectionAvgAggregateOutputType | null
    _sum: Parks_intrusion_detectionSumAggregateOutputType | null
    _min: Parks_intrusion_detectionMinAggregateOutputType | null
    _max: Parks_intrusion_detectionMaxAggregateOutputType | null
  }

  export type Parks_intrusion_detectionAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_intrusion_detectionSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_intrusion_detectionMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    location: string | null
    camera_Id: number | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    posted_to_intranet_date: Date | null
    posted_to_intranet_time: Date | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    is_employee: boolean | null
    current_status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_intrusion_detectionMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    location: string | null
    camera_Id: number | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    posted_to_intranet_date: Date | null
    posted_to_intranet_time: Date | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    is_employee: boolean | null
    current_status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_intrusion_detectionCountAggregateOutputType = {
    Id: number
    park_Id: number
    location: number
    camera_Id: number
    occurrence_date: number
    occurrence_time: number
    snap_shot: number
    posted_to_intranet_date: number
    posted_to_intranet_time: number
    detection_Id: number
    detection_date: number
    detection_time: number
    description: number
    is_employee: number
    current_status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_intrusion_detectionAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_intrusion_detectionSumAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_intrusion_detectionMinAggregateInputType = {
    Id?: true
    park_Id?: true
    location?: true
    camera_Id?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    posted_to_intranet_date?: true
    posted_to_intranet_time?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    is_employee?: true
    current_status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_intrusion_detectionMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    location?: true
    camera_Id?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    posted_to_intranet_date?: true
    posted_to_intranet_time?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    is_employee?: true
    current_status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_intrusion_detectionCountAggregateInputType = {
    Id?: true
    park_Id?: true
    location?: true
    camera_Id?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    posted_to_intranet_date?: true
    posted_to_intranet_time?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    is_employee?: true
    current_status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_intrusion_detectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_intrusion_detection to aggregate.
     */
    where?: parks_intrusion_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_intrusion_detections to fetch.
     */
    orderBy?: parks_intrusion_detectionOrderByWithRelationInput | parks_intrusion_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_intrusion_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_intrusion_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_intrusion_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_intrusion_detections
    **/
    _count?: true | Parks_intrusion_detectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_intrusion_detectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_intrusion_detectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_intrusion_detectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_intrusion_detectionMaxAggregateInputType
  }

  export type GetParks_intrusion_detectionAggregateType<T extends Parks_intrusion_detectionAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_intrusion_detection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_intrusion_detection[P]>
      : GetScalarType<T[P], AggregateParks_intrusion_detection[P]>
  }




  export type parks_intrusion_detectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_intrusion_detectionWhereInput
    orderBy?: parks_intrusion_detectionOrderByWithAggregationInput | parks_intrusion_detectionOrderByWithAggregationInput[]
    by: Parks_intrusion_detectionScalarFieldEnum[] | Parks_intrusion_detectionScalarFieldEnum
    having?: parks_intrusion_detectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_intrusion_detectionCountAggregateInputType | true
    _avg?: Parks_intrusion_detectionAvgAggregateInputType
    _sum?: Parks_intrusion_detectionSumAggregateInputType
    _min?: Parks_intrusion_detectionMinAggregateInputType
    _max?: Parks_intrusion_detectionMaxAggregateInputType
  }

  export type Parks_intrusion_detectionGroupByOutputType = {
    Id: number
    park_Id: number | null
    location: string | null
    camera_Id: number | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    posted_to_intranet_date: Date | null
    posted_to_intranet_time: Date | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    is_employee: boolean | null
    current_status: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_intrusion_detectionCountAggregateOutputType | null
    _avg: Parks_intrusion_detectionAvgAggregateOutputType | null
    _sum: Parks_intrusion_detectionSumAggregateOutputType | null
    _min: Parks_intrusion_detectionMinAggregateOutputType | null
    _max: Parks_intrusion_detectionMaxAggregateOutputType | null
  }

  type GetParks_intrusion_detectionGroupByPayload<T extends parks_intrusion_detectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_intrusion_detectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_intrusion_detectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_intrusion_detectionGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_intrusion_detectionGroupByOutputType[P]>
        }
      >
    >


  export type parks_intrusion_detectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    location?: boolean
    camera_Id?: boolean
    occurrence_date?: boolean
    occurrence_time?: boolean
    snap_shot?: boolean
    posted_to_intranet_date?: boolean
    posted_to_intranet_time?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    is_employee?: boolean
    current_status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_intrusion_detection$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_intrusion_detection$park_camerasArgs<ExtArgs>
    intranet_posting_history?: boolean | parks_intrusion_detection$intranet_posting_historyArgs<ExtArgs>
    _count?: boolean | Parks_intrusion_detectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parks_intrusion_detection"]>



  export type parks_intrusion_detectionSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    location?: boolean
    camera_Id?: boolean
    occurrence_date?: boolean
    occurrence_time?: boolean
    snap_shot?: boolean
    posted_to_intranet_date?: boolean
    posted_to_intranet_time?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    is_employee?: boolean
    current_status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_intrusion_detectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "location" | "camera_Id" | "occurrence_date" | "occurrence_time" | "snap_shot" | "posted_to_intranet_date" | "posted_to_intranet_time" | "detection_Id" | "detection_date" | "detection_time" | "description" | "is_employee" | "current_status" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_intrusion_detection"]>
  export type parks_intrusion_detectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_intrusion_detection$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_intrusion_detection$park_camerasArgs<ExtArgs>
    intranet_posting_history?: boolean | parks_intrusion_detection$intranet_posting_historyArgs<ExtArgs>
    _count?: boolean | Parks_intrusion_detectionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $parks_intrusion_detectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_intrusion_detection"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
      intranet_posting_history: Prisma.$intranet_posting_historyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      location: string | null
      camera_Id: number | null
      occurrence_date: Date | null
      occurrence_time: Date | null
      snap_shot: string | null
      posted_to_intranet_date: Date | null
      posted_to_intranet_time: Date | null
      detection_Id: string | null
      detection_date: Date | null
      detection_time: Date | null
      description: string | null
      is_employee: boolean | null
      current_status: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_intrusion_detection"]>
    composites: {}
  }

  type parks_intrusion_detectionGetPayload<S extends boolean | null | undefined | parks_intrusion_detectionDefaultArgs> = $Result.GetResult<Prisma.$parks_intrusion_detectionPayload, S>

  type parks_intrusion_detectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_intrusion_detectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_intrusion_detectionCountAggregateInputType | true
    }

  export interface parks_intrusion_detectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_intrusion_detection'], meta: { name: 'parks_intrusion_detection' } }
    /**
     * Find zero or one Parks_intrusion_detection that matches the filter.
     * @param {parks_intrusion_detectionFindUniqueArgs} args - Arguments to find a Parks_intrusion_detection
     * @example
     * // Get one Parks_intrusion_detection
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_intrusion_detectionFindUniqueArgs>(args: SelectSubset<T, parks_intrusion_detectionFindUniqueArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_intrusion_detection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_intrusion_detectionFindUniqueOrThrowArgs} args - Arguments to find a Parks_intrusion_detection
     * @example
     * // Get one Parks_intrusion_detection
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_intrusion_detectionFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_intrusion_detectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_intrusion_detection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_intrusion_detectionFindFirstArgs} args - Arguments to find a Parks_intrusion_detection
     * @example
     * // Get one Parks_intrusion_detection
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_intrusion_detectionFindFirstArgs>(args?: SelectSubset<T, parks_intrusion_detectionFindFirstArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_intrusion_detection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_intrusion_detectionFindFirstOrThrowArgs} args - Arguments to find a Parks_intrusion_detection
     * @example
     * // Get one Parks_intrusion_detection
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_intrusion_detectionFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_intrusion_detectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_intrusion_detections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_intrusion_detectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_intrusion_detections
     * const parks_intrusion_detections = await prisma.parks_intrusion_detection.findMany()
     * 
     * // Get first 10 Parks_intrusion_detections
     * const parks_intrusion_detections = await prisma.parks_intrusion_detection.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_intrusion_detectionWithIdOnly = await prisma.parks_intrusion_detection.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_intrusion_detectionFindManyArgs>(args?: SelectSubset<T, parks_intrusion_detectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_intrusion_detection.
     * @param {parks_intrusion_detectionCreateArgs} args - Arguments to create a Parks_intrusion_detection.
     * @example
     * // Create one Parks_intrusion_detection
     * const Parks_intrusion_detection = await prisma.parks_intrusion_detection.create({
     *   data: {
     *     // ... data to create a Parks_intrusion_detection
     *   }
     * })
     * 
     */
    create<T extends parks_intrusion_detectionCreateArgs>(args: SelectSubset<T, parks_intrusion_detectionCreateArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_intrusion_detections.
     * @param {parks_intrusion_detectionCreateManyArgs} args - Arguments to create many Parks_intrusion_detections.
     * @example
     * // Create many Parks_intrusion_detections
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_intrusion_detectionCreateManyArgs>(args?: SelectSubset<T, parks_intrusion_detectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_intrusion_detection.
     * @param {parks_intrusion_detectionDeleteArgs} args - Arguments to delete one Parks_intrusion_detection.
     * @example
     * // Delete one Parks_intrusion_detection
     * const Parks_intrusion_detection = await prisma.parks_intrusion_detection.delete({
     *   where: {
     *     // ... filter to delete one Parks_intrusion_detection
     *   }
     * })
     * 
     */
    delete<T extends parks_intrusion_detectionDeleteArgs>(args: SelectSubset<T, parks_intrusion_detectionDeleteArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_intrusion_detection.
     * @param {parks_intrusion_detectionUpdateArgs} args - Arguments to update one Parks_intrusion_detection.
     * @example
     * // Update one Parks_intrusion_detection
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_intrusion_detectionUpdateArgs>(args: SelectSubset<T, parks_intrusion_detectionUpdateArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_intrusion_detections.
     * @param {parks_intrusion_detectionDeleteManyArgs} args - Arguments to filter Parks_intrusion_detections to delete.
     * @example
     * // Delete a few Parks_intrusion_detections
     * const { count } = await prisma.parks_intrusion_detection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_intrusion_detectionDeleteManyArgs>(args?: SelectSubset<T, parks_intrusion_detectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_intrusion_detections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_intrusion_detectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_intrusion_detections
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_intrusion_detectionUpdateManyArgs>(args: SelectSubset<T, parks_intrusion_detectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_intrusion_detection.
     * @param {parks_intrusion_detectionUpsertArgs} args - Arguments to update or create a Parks_intrusion_detection.
     * @example
     * // Update or create a Parks_intrusion_detection
     * const parks_intrusion_detection = await prisma.parks_intrusion_detection.upsert({
     *   create: {
     *     // ... data to create a Parks_intrusion_detection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_intrusion_detection we want to update
     *   }
     * })
     */
    upsert<T extends parks_intrusion_detectionUpsertArgs>(args: SelectSubset<T, parks_intrusion_detectionUpsertArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_intrusion_detections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_intrusion_detectionCountArgs} args - Arguments to filter Parks_intrusion_detections to count.
     * @example
     * // Count the number of Parks_intrusion_detections
     * const count = await prisma.parks_intrusion_detection.count({
     *   where: {
     *     // ... the filter for the Parks_intrusion_detections we want to count
     *   }
     * })
    **/
    count<T extends parks_intrusion_detectionCountArgs>(
      args?: Subset<T, parks_intrusion_detectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_intrusion_detectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_intrusion_detection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_intrusion_detectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_intrusion_detectionAggregateArgs>(args: Subset<T, Parks_intrusion_detectionAggregateArgs>): Prisma.PrismaPromise<GetParks_intrusion_detectionAggregateType<T>>

    /**
     * Group by Parks_intrusion_detection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_intrusion_detectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_intrusion_detectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_intrusion_detectionGroupByArgs['orderBy'] }
        : { orderBy?: parks_intrusion_detectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_intrusion_detectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_intrusion_detectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_intrusion_detection model
   */
  readonly fields: parks_intrusion_detectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_intrusion_detection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_intrusion_detectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_intrusion_detection$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_intrusion_detection$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras<T extends parks_intrusion_detection$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_intrusion_detection$park_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    intranet_posting_history<T extends parks_intrusion_detection$intranet_posting_historyArgs<ExtArgs> = {}>(args?: Subset<T, parks_intrusion_detection$intranet_posting_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_intrusion_detection model
   */
  interface parks_intrusion_detectionFieldRefs {
    readonly Id: FieldRef<"parks_intrusion_detection", 'Int'>
    readonly park_Id: FieldRef<"parks_intrusion_detection", 'Int'>
    readonly location: FieldRef<"parks_intrusion_detection", 'String'>
    readonly camera_Id: FieldRef<"parks_intrusion_detection", 'Int'>
    readonly occurrence_date: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly occurrence_time: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly snap_shot: FieldRef<"parks_intrusion_detection", 'String'>
    readonly posted_to_intranet_date: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly posted_to_intranet_time: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly detection_Id: FieldRef<"parks_intrusion_detection", 'String'>
    readonly detection_date: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly detection_time: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly description: FieldRef<"parks_intrusion_detection", 'String'>
    readonly is_employee: FieldRef<"parks_intrusion_detection", 'Boolean'>
    readonly current_status: FieldRef<"parks_intrusion_detection", 'String'>
    readonly createdAt: FieldRef<"parks_intrusion_detection", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_intrusion_detection", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_intrusion_detection findUnique
   */
  export type parks_intrusion_detectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_intrusion_detection to fetch.
     */
    where: parks_intrusion_detectionWhereUniqueInput
  }

  /**
   * parks_intrusion_detection findUniqueOrThrow
   */
  export type parks_intrusion_detectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_intrusion_detection to fetch.
     */
    where: parks_intrusion_detectionWhereUniqueInput
  }

  /**
   * parks_intrusion_detection findFirst
   */
  export type parks_intrusion_detectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_intrusion_detection to fetch.
     */
    where?: parks_intrusion_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_intrusion_detections to fetch.
     */
    orderBy?: parks_intrusion_detectionOrderByWithRelationInput | parks_intrusion_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_intrusion_detections.
     */
    cursor?: parks_intrusion_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_intrusion_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_intrusion_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_intrusion_detections.
     */
    distinct?: Parks_intrusion_detectionScalarFieldEnum | Parks_intrusion_detectionScalarFieldEnum[]
  }

  /**
   * parks_intrusion_detection findFirstOrThrow
   */
  export type parks_intrusion_detectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_intrusion_detection to fetch.
     */
    where?: parks_intrusion_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_intrusion_detections to fetch.
     */
    orderBy?: parks_intrusion_detectionOrderByWithRelationInput | parks_intrusion_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_intrusion_detections.
     */
    cursor?: parks_intrusion_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_intrusion_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_intrusion_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_intrusion_detections.
     */
    distinct?: Parks_intrusion_detectionScalarFieldEnum | Parks_intrusion_detectionScalarFieldEnum[]
  }

  /**
   * parks_intrusion_detection findMany
   */
  export type parks_intrusion_detectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_intrusion_detections to fetch.
     */
    where?: parks_intrusion_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_intrusion_detections to fetch.
     */
    orderBy?: parks_intrusion_detectionOrderByWithRelationInput | parks_intrusion_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_intrusion_detections.
     */
    cursor?: parks_intrusion_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_intrusion_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_intrusion_detections.
     */
    skip?: number
    distinct?: Parks_intrusion_detectionScalarFieldEnum | Parks_intrusion_detectionScalarFieldEnum[]
  }

  /**
   * parks_intrusion_detection create
   */
  export type parks_intrusion_detectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_intrusion_detection.
     */
    data?: XOR<parks_intrusion_detectionCreateInput, parks_intrusion_detectionUncheckedCreateInput>
  }

  /**
   * parks_intrusion_detection createMany
   */
  export type parks_intrusion_detectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_intrusion_detections.
     */
    data: parks_intrusion_detectionCreateManyInput | parks_intrusion_detectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_intrusion_detection update
   */
  export type parks_intrusion_detectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_intrusion_detection.
     */
    data: XOR<parks_intrusion_detectionUpdateInput, parks_intrusion_detectionUncheckedUpdateInput>
    /**
     * Choose, which parks_intrusion_detection to update.
     */
    where: parks_intrusion_detectionWhereUniqueInput
  }

  /**
   * parks_intrusion_detection updateMany
   */
  export type parks_intrusion_detectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_intrusion_detections.
     */
    data: XOR<parks_intrusion_detectionUpdateManyMutationInput, parks_intrusion_detectionUncheckedUpdateManyInput>
    /**
     * Filter which parks_intrusion_detections to update
     */
    where?: parks_intrusion_detectionWhereInput
    /**
     * Limit how many parks_intrusion_detections to update.
     */
    limit?: number
  }

  /**
   * parks_intrusion_detection upsert
   */
  export type parks_intrusion_detectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_intrusion_detection to update in case it exists.
     */
    where: parks_intrusion_detectionWhereUniqueInput
    /**
     * In case the parks_intrusion_detection found by the `where` argument doesn't exist, create a new parks_intrusion_detection with this data.
     */
    create: XOR<parks_intrusion_detectionCreateInput, parks_intrusion_detectionUncheckedCreateInput>
    /**
     * In case the parks_intrusion_detection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_intrusion_detectionUpdateInput, parks_intrusion_detectionUncheckedUpdateInput>
  }

  /**
   * parks_intrusion_detection delete
   */
  export type parks_intrusion_detectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    /**
     * Filter which parks_intrusion_detection to delete.
     */
    where: parks_intrusion_detectionWhereUniqueInput
  }

  /**
   * parks_intrusion_detection deleteMany
   */
  export type parks_intrusion_detectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_intrusion_detections to delete
     */
    where?: parks_intrusion_detectionWhereInput
    /**
     * Limit how many parks_intrusion_detections to delete.
     */
    limit?: number
  }

  /**
   * parks_intrusion_detection.parks
   */
  export type parks_intrusion_detection$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_intrusion_detection.park_cameras
   */
  export type parks_intrusion_detection$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_intrusion_detection.intranet_posting_history
   */
  export type parks_intrusion_detection$intranet_posting_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    where?: intranet_posting_historyWhereInput
    orderBy?: intranet_posting_historyOrderByWithRelationInput | intranet_posting_historyOrderByWithRelationInput[]
    cursor?: intranet_posting_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Intranet_posting_historyScalarFieldEnum | Intranet_posting_historyScalarFieldEnum[]
  }

  /**
   * parks_intrusion_detection without action
   */
  export type parks_intrusion_detectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
  }


  /**
   * Model parks_irrigation_job_history
   */

  export type AggregateParks_irrigation_job_history = {
    _count: Parks_irrigation_job_historyCountAggregateOutputType | null
    _avg: Parks_irrigation_job_historyAvgAggregateOutputType | null
    _sum: Parks_irrigation_job_historySumAggregateOutputType | null
    _min: Parks_irrigation_job_historyMinAggregateOutputType | null
    _max: Parks_irrigation_job_historyMaxAggregateOutputType | null
  }

  export type Parks_irrigation_job_historyAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    zone_Id: number | null
  }

  export type Parks_irrigation_job_historySumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    zone_Id: number | null
  }

  export type Parks_irrigation_job_historyMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    zone_Id: number | null
    job_Id: string | null
    job_started_at: Date | null
    job_completed_at: Date | null
    job_status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_irrigation_job_historyMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    zone_Id: number | null
    job_Id: string | null
    job_started_at: Date | null
    job_completed_at: Date | null
    job_status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_irrigation_job_historyCountAggregateOutputType = {
    Id: number
    park_Id: number
    zone_Id: number
    job_Id: number
    job_started_at: number
    job_completed_at: number
    job_status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_irrigation_job_historyAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
  }

  export type Parks_irrigation_job_historySumAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
  }

  export type Parks_irrigation_job_historyMinAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
    job_Id?: true
    job_started_at?: true
    job_completed_at?: true
    job_status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_irrigation_job_historyMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
    job_Id?: true
    job_started_at?: true
    job_completed_at?: true
    job_status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_irrigation_job_historyCountAggregateInputType = {
    Id?: true
    park_Id?: true
    zone_Id?: true
    job_Id?: true
    job_started_at?: true
    job_completed_at?: true
    job_status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_irrigation_job_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_irrigation_job_history to aggregate.
     */
    where?: parks_irrigation_job_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_irrigation_job_histories to fetch.
     */
    orderBy?: parks_irrigation_job_historyOrderByWithRelationInput | parks_irrigation_job_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_irrigation_job_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_irrigation_job_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_irrigation_job_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_irrigation_job_histories
    **/
    _count?: true | Parks_irrigation_job_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_irrigation_job_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_irrigation_job_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_irrigation_job_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_irrigation_job_historyMaxAggregateInputType
  }

  export type GetParks_irrigation_job_historyAggregateType<T extends Parks_irrigation_job_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_irrigation_job_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_irrigation_job_history[P]>
      : GetScalarType<T[P], AggregateParks_irrigation_job_history[P]>
  }




  export type parks_irrigation_job_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_irrigation_job_historyWhereInput
    orderBy?: parks_irrigation_job_historyOrderByWithAggregationInput | parks_irrigation_job_historyOrderByWithAggregationInput[]
    by: Parks_irrigation_job_historyScalarFieldEnum[] | Parks_irrigation_job_historyScalarFieldEnum
    having?: parks_irrigation_job_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_irrigation_job_historyCountAggregateInputType | true
    _avg?: Parks_irrigation_job_historyAvgAggregateInputType
    _sum?: Parks_irrigation_job_historySumAggregateInputType
    _min?: Parks_irrigation_job_historyMinAggregateInputType
    _max?: Parks_irrigation_job_historyMaxAggregateInputType
  }

  export type Parks_irrigation_job_historyGroupByOutputType = {
    Id: number
    park_Id: number | null
    zone_Id: number | null
    job_Id: string | null
    job_started_at: Date
    job_completed_at: Date | null
    job_status: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_irrigation_job_historyCountAggregateOutputType | null
    _avg: Parks_irrigation_job_historyAvgAggregateOutputType | null
    _sum: Parks_irrigation_job_historySumAggregateOutputType | null
    _min: Parks_irrigation_job_historyMinAggregateOutputType | null
    _max: Parks_irrigation_job_historyMaxAggregateOutputType | null
  }

  type GetParks_irrigation_job_historyGroupByPayload<T extends parks_irrigation_job_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_irrigation_job_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_irrigation_job_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_irrigation_job_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_irrigation_job_historyGroupByOutputType[P]>
        }
      >
    >


  export type parks_irrigation_job_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    zone_Id?: boolean
    job_Id?: boolean
    job_started_at?: boolean
    job_completed_at?: boolean
    job_status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_irrigation_job_history$parksArgs<ExtArgs>
    park_zones?: boolean | parks_irrigation_job_history$park_zonesArgs<ExtArgs>
  }, ExtArgs["result"]["parks_irrigation_job_history"]>



  export type parks_irrigation_job_historySelectScalar = {
    Id?: boolean
    park_Id?: boolean
    zone_Id?: boolean
    job_Id?: boolean
    job_started_at?: boolean
    job_completed_at?: boolean
    job_status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_irrigation_job_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "zone_Id" | "job_Id" | "job_started_at" | "job_completed_at" | "job_status" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_irrigation_job_history"]>
  export type parks_irrigation_job_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_irrigation_job_history$parksArgs<ExtArgs>
    park_zones?: boolean | parks_irrigation_job_history$park_zonesArgs<ExtArgs>
  }

  export type $parks_irrigation_job_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_irrigation_job_history"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_zones: Prisma.$park_zonesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      zone_Id: number | null
      job_Id: string | null
      job_started_at: Date
      job_completed_at: Date | null
      job_status: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_irrigation_job_history"]>
    composites: {}
  }

  type parks_irrigation_job_historyGetPayload<S extends boolean | null | undefined | parks_irrigation_job_historyDefaultArgs> = $Result.GetResult<Prisma.$parks_irrigation_job_historyPayload, S>

  type parks_irrigation_job_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_irrigation_job_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_irrigation_job_historyCountAggregateInputType | true
    }

  export interface parks_irrigation_job_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_irrigation_job_history'], meta: { name: 'parks_irrigation_job_history' } }
    /**
     * Find zero or one Parks_irrigation_job_history that matches the filter.
     * @param {parks_irrigation_job_historyFindUniqueArgs} args - Arguments to find a Parks_irrigation_job_history
     * @example
     * // Get one Parks_irrigation_job_history
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_irrigation_job_historyFindUniqueArgs>(args: SelectSubset<T, parks_irrigation_job_historyFindUniqueArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_irrigation_job_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_irrigation_job_historyFindUniqueOrThrowArgs} args - Arguments to find a Parks_irrigation_job_history
     * @example
     * // Get one Parks_irrigation_job_history
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_irrigation_job_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_irrigation_job_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_irrigation_job_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_irrigation_job_historyFindFirstArgs} args - Arguments to find a Parks_irrigation_job_history
     * @example
     * // Get one Parks_irrigation_job_history
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_irrigation_job_historyFindFirstArgs>(args?: SelectSubset<T, parks_irrigation_job_historyFindFirstArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_irrigation_job_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_irrigation_job_historyFindFirstOrThrowArgs} args - Arguments to find a Parks_irrigation_job_history
     * @example
     * // Get one Parks_irrigation_job_history
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_irrigation_job_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_irrigation_job_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_irrigation_job_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_irrigation_job_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_irrigation_job_histories
     * const parks_irrigation_job_histories = await prisma.parks_irrigation_job_history.findMany()
     * 
     * // Get first 10 Parks_irrigation_job_histories
     * const parks_irrigation_job_histories = await prisma.parks_irrigation_job_history.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_irrigation_job_historyWithIdOnly = await prisma.parks_irrigation_job_history.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_irrigation_job_historyFindManyArgs>(args?: SelectSubset<T, parks_irrigation_job_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_irrigation_job_history.
     * @param {parks_irrigation_job_historyCreateArgs} args - Arguments to create a Parks_irrigation_job_history.
     * @example
     * // Create one Parks_irrigation_job_history
     * const Parks_irrigation_job_history = await prisma.parks_irrigation_job_history.create({
     *   data: {
     *     // ... data to create a Parks_irrigation_job_history
     *   }
     * })
     * 
     */
    create<T extends parks_irrigation_job_historyCreateArgs>(args: SelectSubset<T, parks_irrigation_job_historyCreateArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_irrigation_job_histories.
     * @param {parks_irrigation_job_historyCreateManyArgs} args - Arguments to create many Parks_irrigation_job_histories.
     * @example
     * // Create many Parks_irrigation_job_histories
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_irrigation_job_historyCreateManyArgs>(args?: SelectSubset<T, parks_irrigation_job_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_irrigation_job_history.
     * @param {parks_irrigation_job_historyDeleteArgs} args - Arguments to delete one Parks_irrigation_job_history.
     * @example
     * // Delete one Parks_irrigation_job_history
     * const Parks_irrigation_job_history = await prisma.parks_irrigation_job_history.delete({
     *   where: {
     *     // ... filter to delete one Parks_irrigation_job_history
     *   }
     * })
     * 
     */
    delete<T extends parks_irrigation_job_historyDeleteArgs>(args: SelectSubset<T, parks_irrigation_job_historyDeleteArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_irrigation_job_history.
     * @param {parks_irrigation_job_historyUpdateArgs} args - Arguments to update one Parks_irrigation_job_history.
     * @example
     * // Update one Parks_irrigation_job_history
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_irrigation_job_historyUpdateArgs>(args: SelectSubset<T, parks_irrigation_job_historyUpdateArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_irrigation_job_histories.
     * @param {parks_irrigation_job_historyDeleteManyArgs} args - Arguments to filter Parks_irrigation_job_histories to delete.
     * @example
     * // Delete a few Parks_irrigation_job_histories
     * const { count } = await prisma.parks_irrigation_job_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_irrigation_job_historyDeleteManyArgs>(args?: SelectSubset<T, parks_irrigation_job_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_irrigation_job_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_irrigation_job_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_irrigation_job_histories
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_irrigation_job_historyUpdateManyArgs>(args: SelectSubset<T, parks_irrigation_job_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_irrigation_job_history.
     * @param {parks_irrigation_job_historyUpsertArgs} args - Arguments to update or create a Parks_irrigation_job_history.
     * @example
     * // Update or create a Parks_irrigation_job_history
     * const parks_irrigation_job_history = await prisma.parks_irrigation_job_history.upsert({
     *   create: {
     *     // ... data to create a Parks_irrigation_job_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_irrigation_job_history we want to update
     *   }
     * })
     */
    upsert<T extends parks_irrigation_job_historyUpsertArgs>(args: SelectSubset<T, parks_irrigation_job_historyUpsertArgs<ExtArgs>>): Prisma__parks_irrigation_job_historyClient<$Result.GetResult<Prisma.$parks_irrigation_job_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_irrigation_job_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_irrigation_job_historyCountArgs} args - Arguments to filter Parks_irrigation_job_histories to count.
     * @example
     * // Count the number of Parks_irrigation_job_histories
     * const count = await prisma.parks_irrigation_job_history.count({
     *   where: {
     *     // ... the filter for the Parks_irrigation_job_histories we want to count
     *   }
     * })
    **/
    count<T extends parks_irrigation_job_historyCountArgs>(
      args?: Subset<T, parks_irrigation_job_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_irrigation_job_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_irrigation_job_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_irrigation_job_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_irrigation_job_historyAggregateArgs>(args: Subset<T, Parks_irrigation_job_historyAggregateArgs>): Prisma.PrismaPromise<GetParks_irrigation_job_historyAggregateType<T>>

    /**
     * Group by Parks_irrigation_job_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_irrigation_job_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_irrigation_job_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_irrigation_job_historyGroupByArgs['orderBy'] }
        : { orderBy?: parks_irrigation_job_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_irrigation_job_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_irrigation_job_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_irrigation_job_history model
   */
  readonly fields: parks_irrigation_job_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_irrigation_job_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_irrigation_job_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_irrigation_job_history$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_irrigation_job_history$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_zones<T extends parks_irrigation_job_history$park_zonesArgs<ExtArgs> = {}>(args?: Subset<T, parks_irrigation_job_history$park_zonesArgs<ExtArgs>>): Prisma__park_zonesClient<$Result.GetResult<Prisma.$park_zonesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_irrigation_job_history model
   */
  interface parks_irrigation_job_historyFieldRefs {
    readonly Id: FieldRef<"parks_irrigation_job_history", 'Int'>
    readonly park_Id: FieldRef<"parks_irrigation_job_history", 'Int'>
    readonly zone_Id: FieldRef<"parks_irrigation_job_history", 'Int'>
    readonly job_Id: FieldRef<"parks_irrigation_job_history", 'String'>
    readonly job_started_at: FieldRef<"parks_irrigation_job_history", 'DateTime'>
    readonly job_completed_at: FieldRef<"parks_irrigation_job_history", 'DateTime'>
    readonly job_status: FieldRef<"parks_irrigation_job_history", 'String'>
    readonly createdAt: FieldRef<"parks_irrigation_job_history", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_irrigation_job_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_irrigation_job_history findUnique
   */
  export type parks_irrigation_job_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * Filter, which parks_irrigation_job_history to fetch.
     */
    where: parks_irrigation_job_historyWhereUniqueInput
  }

  /**
   * parks_irrigation_job_history findUniqueOrThrow
   */
  export type parks_irrigation_job_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * Filter, which parks_irrigation_job_history to fetch.
     */
    where: parks_irrigation_job_historyWhereUniqueInput
  }

  /**
   * parks_irrigation_job_history findFirst
   */
  export type parks_irrigation_job_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * Filter, which parks_irrigation_job_history to fetch.
     */
    where?: parks_irrigation_job_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_irrigation_job_histories to fetch.
     */
    orderBy?: parks_irrigation_job_historyOrderByWithRelationInput | parks_irrigation_job_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_irrigation_job_histories.
     */
    cursor?: parks_irrigation_job_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_irrigation_job_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_irrigation_job_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_irrigation_job_histories.
     */
    distinct?: Parks_irrigation_job_historyScalarFieldEnum | Parks_irrigation_job_historyScalarFieldEnum[]
  }

  /**
   * parks_irrigation_job_history findFirstOrThrow
   */
  export type parks_irrigation_job_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * Filter, which parks_irrigation_job_history to fetch.
     */
    where?: parks_irrigation_job_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_irrigation_job_histories to fetch.
     */
    orderBy?: parks_irrigation_job_historyOrderByWithRelationInput | parks_irrigation_job_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_irrigation_job_histories.
     */
    cursor?: parks_irrigation_job_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_irrigation_job_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_irrigation_job_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_irrigation_job_histories.
     */
    distinct?: Parks_irrigation_job_historyScalarFieldEnum | Parks_irrigation_job_historyScalarFieldEnum[]
  }

  /**
   * parks_irrigation_job_history findMany
   */
  export type parks_irrigation_job_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * Filter, which parks_irrigation_job_histories to fetch.
     */
    where?: parks_irrigation_job_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_irrigation_job_histories to fetch.
     */
    orderBy?: parks_irrigation_job_historyOrderByWithRelationInput | parks_irrigation_job_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_irrigation_job_histories.
     */
    cursor?: parks_irrigation_job_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_irrigation_job_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_irrigation_job_histories.
     */
    skip?: number
    distinct?: Parks_irrigation_job_historyScalarFieldEnum | Parks_irrigation_job_historyScalarFieldEnum[]
  }

  /**
   * parks_irrigation_job_history create
   */
  export type parks_irrigation_job_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_irrigation_job_history.
     */
    data?: XOR<parks_irrigation_job_historyCreateInput, parks_irrigation_job_historyUncheckedCreateInput>
  }

  /**
   * parks_irrigation_job_history createMany
   */
  export type parks_irrigation_job_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_irrigation_job_histories.
     */
    data: parks_irrigation_job_historyCreateManyInput | parks_irrigation_job_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_irrigation_job_history update
   */
  export type parks_irrigation_job_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_irrigation_job_history.
     */
    data: XOR<parks_irrigation_job_historyUpdateInput, parks_irrigation_job_historyUncheckedUpdateInput>
    /**
     * Choose, which parks_irrigation_job_history to update.
     */
    where: parks_irrigation_job_historyWhereUniqueInput
  }

  /**
   * parks_irrigation_job_history updateMany
   */
  export type parks_irrigation_job_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_irrigation_job_histories.
     */
    data: XOR<parks_irrigation_job_historyUpdateManyMutationInput, parks_irrigation_job_historyUncheckedUpdateManyInput>
    /**
     * Filter which parks_irrigation_job_histories to update
     */
    where?: parks_irrigation_job_historyWhereInput
    /**
     * Limit how many parks_irrigation_job_histories to update.
     */
    limit?: number
  }

  /**
   * parks_irrigation_job_history upsert
   */
  export type parks_irrigation_job_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_irrigation_job_history to update in case it exists.
     */
    where: parks_irrigation_job_historyWhereUniqueInput
    /**
     * In case the parks_irrigation_job_history found by the `where` argument doesn't exist, create a new parks_irrigation_job_history with this data.
     */
    create: XOR<parks_irrigation_job_historyCreateInput, parks_irrigation_job_historyUncheckedCreateInput>
    /**
     * In case the parks_irrigation_job_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_irrigation_job_historyUpdateInput, parks_irrigation_job_historyUncheckedUpdateInput>
  }

  /**
   * parks_irrigation_job_history delete
   */
  export type parks_irrigation_job_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
    /**
     * Filter which parks_irrigation_job_history to delete.
     */
    where: parks_irrigation_job_historyWhereUniqueInput
  }

  /**
   * parks_irrigation_job_history deleteMany
   */
  export type parks_irrigation_job_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_irrigation_job_histories to delete
     */
    where?: parks_irrigation_job_historyWhereInput
    /**
     * Limit how many parks_irrigation_job_histories to delete.
     */
    limit?: number
  }

  /**
   * parks_irrigation_job_history.parks
   */
  export type parks_irrigation_job_history$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_irrigation_job_history.park_zones
   */
  export type parks_irrigation_job_history$park_zonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_zones
     */
    select?: park_zonesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_zones
     */
    omit?: park_zonesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_zonesInclude<ExtArgs> | null
    where?: park_zonesWhereInput
  }

  /**
   * parks_irrigation_job_history without action
   */
  export type parks_irrigation_job_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_irrigation_job_history
     */
    select?: parks_irrigation_job_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_irrigation_job_history
     */
    omit?: parks_irrigation_job_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_irrigation_job_historyInclude<ExtArgs> | null
  }


  /**
   * Model parks_landscaping
   */

  export type AggregateParks_landscaping = {
    _count: Parks_landscapingCountAggregateOutputType | null
    _avg: Parks_landscapingAvgAggregateOutputType | null
    _sum: Parks_landscapingSumAggregateOutputType | null
    _min: Parks_landscapingMinAggregateOutputType | null
    _max: Parks_landscapingMaxAggregateOutputType | null
  }

  export type Parks_landscapingAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_landscapingSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_landscapingMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    case_Id: string | null
    location: string | null
    snap_shot: string | null
    type: string | null
    status: string | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    current_status: string | null
    camera_Id: number | null
    after_image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_landscapingMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    case_Id: string | null
    location: string | null
    snap_shot: string | null
    type: string | null
    status: string | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    current_status: string | null
    camera_Id: number | null
    after_image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_landscapingCountAggregateOutputType = {
    Id: number
    park_Id: number
    case_Id: number
    location: number
    snap_shot: number
    type: number
    status: number
    detection_Id: number
    detection_date: number
    detection_time: number
    description: number
    current_status: number
    camera_Id: number
    after_image: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_landscapingAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_landscapingSumAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_landscapingMinAggregateInputType = {
    Id?: true
    park_Id?: true
    case_Id?: true
    location?: true
    snap_shot?: true
    type?: true
    status?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    current_status?: true
    camera_Id?: true
    after_image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_landscapingMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    case_Id?: true
    location?: true
    snap_shot?: true
    type?: true
    status?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    current_status?: true
    camera_Id?: true
    after_image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_landscapingCountAggregateInputType = {
    Id?: true
    park_Id?: true
    case_Id?: true
    location?: true
    snap_shot?: true
    type?: true
    status?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    current_status?: true
    camera_Id?: true
    after_image?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_landscapingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_landscaping to aggregate.
     */
    where?: parks_landscapingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_landscapings to fetch.
     */
    orderBy?: parks_landscapingOrderByWithRelationInput | parks_landscapingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_landscapingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_landscapings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_landscapings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_landscapings
    **/
    _count?: true | Parks_landscapingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_landscapingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_landscapingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_landscapingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_landscapingMaxAggregateInputType
  }

  export type GetParks_landscapingAggregateType<T extends Parks_landscapingAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_landscaping]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_landscaping[P]>
      : GetScalarType<T[P], AggregateParks_landscaping[P]>
  }




  export type parks_landscapingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_landscapingWhereInput
    orderBy?: parks_landscapingOrderByWithAggregationInput | parks_landscapingOrderByWithAggregationInput[]
    by: Parks_landscapingScalarFieldEnum[] | Parks_landscapingScalarFieldEnum
    having?: parks_landscapingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_landscapingCountAggregateInputType | true
    _avg?: Parks_landscapingAvgAggregateInputType
    _sum?: Parks_landscapingSumAggregateInputType
    _min?: Parks_landscapingMinAggregateInputType
    _max?: Parks_landscapingMaxAggregateInputType
  }

  export type Parks_landscapingGroupByOutputType = {
    Id: number
    park_Id: number | null
    case_Id: string | null
    location: string | null
    snap_shot: string | null
    type: string | null
    status: string | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    current_status: string | null
    camera_Id: number | null
    after_image: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_landscapingCountAggregateOutputType | null
    _avg: Parks_landscapingAvgAggregateOutputType | null
    _sum: Parks_landscapingSumAggregateOutputType | null
    _min: Parks_landscapingMinAggregateOutputType | null
    _max: Parks_landscapingMaxAggregateOutputType | null
  }

  type GetParks_landscapingGroupByPayload<T extends parks_landscapingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_landscapingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_landscapingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_landscapingGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_landscapingGroupByOutputType[P]>
        }
      >
    >


  export type parks_landscapingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    case_Id?: boolean
    location?: boolean
    snap_shot?: boolean
    type?: boolean
    status?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    current_status?: boolean
    camera_Id?: boolean
    after_image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_landscaping$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_landscaping$park_camerasArgs<ExtArgs>
    ticket_details?: boolean | parks_landscaping$ticket_detailsArgs<ExtArgs>
    _count?: boolean | Parks_landscapingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parks_landscaping"]>



  export type parks_landscapingSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    case_Id?: boolean
    location?: boolean
    snap_shot?: boolean
    type?: boolean
    status?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    current_status?: boolean
    camera_Id?: boolean
    after_image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_landscapingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "case_Id" | "location" | "snap_shot" | "type" | "status" | "detection_Id" | "detection_date" | "detection_time" | "description" | "current_status" | "camera_Id" | "after_image" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_landscaping"]>
  export type parks_landscapingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_landscaping$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_landscaping$park_camerasArgs<ExtArgs>
    ticket_details?: boolean | parks_landscaping$ticket_detailsArgs<ExtArgs>
    _count?: boolean | Parks_landscapingCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $parks_landscapingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_landscaping"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
      ticket_details: Prisma.$ticket_details_tablePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      case_Id: string | null
      location: string | null
      snap_shot: string | null
      type: string | null
      status: string | null
      detection_Id: string | null
      detection_date: Date | null
      detection_time: Date | null
      description: string | null
      current_status: string | null
      camera_Id: number | null
      after_image: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_landscaping"]>
    composites: {}
  }

  type parks_landscapingGetPayload<S extends boolean | null | undefined | parks_landscapingDefaultArgs> = $Result.GetResult<Prisma.$parks_landscapingPayload, S>

  type parks_landscapingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_landscapingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_landscapingCountAggregateInputType | true
    }

  export interface parks_landscapingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_landscaping'], meta: { name: 'parks_landscaping' } }
    /**
     * Find zero or one Parks_landscaping that matches the filter.
     * @param {parks_landscapingFindUniqueArgs} args - Arguments to find a Parks_landscaping
     * @example
     * // Get one Parks_landscaping
     * const parks_landscaping = await prisma.parks_landscaping.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_landscapingFindUniqueArgs>(args: SelectSubset<T, parks_landscapingFindUniqueArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_landscaping that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_landscapingFindUniqueOrThrowArgs} args - Arguments to find a Parks_landscaping
     * @example
     * // Get one Parks_landscaping
     * const parks_landscaping = await prisma.parks_landscaping.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_landscapingFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_landscapingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_landscaping that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_landscapingFindFirstArgs} args - Arguments to find a Parks_landscaping
     * @example
     * // Get one Parks_landscaping
     * const parks_landscaping = await prisma.parks_landscaping.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_landscapingFindFirstArgs>(args?: SelectSubset<T, parks_landscapingFindFirstArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_landscaping that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_landscapingFindFirstOrThrowArgs} args - Arguments to find a Parks_landscaping
     * @example
     * // Get one Parks_landscaping
     * const parks_landscaping = await prisma.parks_landscaping.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_landscapingFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_landscapingFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_landscapings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_landscapingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_landscapings
     * const parks_landscapings = await prisma.parks_landscaping.findMany()
     * 
     * // Get first 10 Parks_landscapings
     * const parks_landscapings = await prisma.parks_landscaping.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_landscapingWithIdOnly = await prisma.parks_landscaping.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_landscapingFindManyArgs>(args?: SelectSubset<T, parks_landscapingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_landscaping.
     * @param {parks_landscapingCreateArgs} args - Arguments to create a Parks_landscaping.
     * @example
     * // Create one Parks_landscaping
     * const Parks_landscaping = await prisma.parks_landscaping.create({
     *   data: {
     *     // ... data to create a Parks_landscaping
     *   }
     * })
     * 
     */
    create<T extends parks_landscapingCreateArgs>(args: SelectSubset<T, parks_landscapingCreateArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_landscapings.
     * @param {parks_landscapingCreateManyArgs} args - Arguments to create many Parks_landscapings.
     * @example
     * // Create many Parks_landscapings
     * const parks_landscaping = await prisma.parks_landscaping.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_landscapingCreateManyArgs>(args?: SelectSubset<T, parks_landscapingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_landscaping.
     * @param {parks_landscapingDeleteArgs} args - Arguments to delete one Parks_landscaping.
     * @example
     * // Delete one Parks_landscaping
     * const Parks_landscaping = await prisma.parks_landscaping.delete({
     *   where: {
     *     // ... filter to delete one Parks_landscaping
     *   }
     * })
     * 
     */
    delete<T extends parks_landscapingDeleteArgs>(args: SelectSubset<T, parks_landscapingDeleteArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_landscaping.
     * @param {parks_landscapingUpdateArgs} args - Arguments to update one Parks_landscaping.
     * @example
     * // Update one Parks_landscaping
     * const parks_landscaping = await prisma.parks_landscaping.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_landscapingUpdateArgs>(args: SelectSubset<T, parks_landscapingUpdateArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_landscapings.
     * @param {parks_landscapingDeleteManyArgs} args - Arguments to filter Parks_landscapings to delete.
     * @example
     * // Delete a few Parks_landscapings
     * const { count } = await prisma.parks_landscaping.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_landscapingDeleteManyArgs>(args?: SelectSubset<T, parks_landscapingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_landscapings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_landscapingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_landscapings
     * const parks_landscaping = await prisma.parks_landscaping.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_landscapingUpdateManyArgs>(args: SelectSubset<T, parks_landscapingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_landscaping.
     * @param {parks_landscapingUpsertArgs} args - Arguments to update or create a Parks_landscaping.
     * @example
     * // Update or create a Parks_landscaping
     * const parks_landscaping = await prisma.parks_landscaping.upsert({
     *   create: {
     *     // ... data to create a Parks_landscaping
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_landscaping we want to update
     *   }
     * })
     */
    upsert<T extends parks_landscapingUpsertArgs>(args: SelectSubset<T, parks_landscapingUpsertArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_landscapings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_landscapingCountArgs} args - Arguments to filter Parks_landscapings to count.
     * @example
     * // Count the number of Parks_landscapings
     * const count = await prisma.parks_landscaping.count({
     *   where: {
     *     // ... the filter for the Parks_landscapings we want to count
     *   }
     * })
    **/
    count<T extends parks_landscapingCountArgs>(
      args?: Subset<T, parks_landscapingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_landscapingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_landscaping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_landscapingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_landscapingAggregateArgs>(args: Subset<T, Parks_landscapingAggregateArgs>): Prisma.PrismaPromise<GetParks_landscapingAggregateType<T>>

    /**
     * Group by Parks_landscaping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_landscapingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_landscapingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_landscapingGroupByArgs['orderBy'] }
        : { orderBy?: parks_landscapingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_landscapingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_landscapingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_landscaping model
   */
  readonly fields: parks_landscapingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_landscaping.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_landscapingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_landscaping$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_landscaping$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras<T extends parks_landscaping$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_landscaping$park_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ticket_details<T extends parks_landscaping$ticket_detailsArgs<ExtArgs> = {}>(args?: Subset<T, parks_landscaping$ticket_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_landscaping model
   */
  interface parks_landscapingFieldRefs {
    readonly Id: FieldRef<"parks_landscaping", 'Int'>
    readonly park_Id: FieldRef<"parks_landscaping", 'Int'>
    readonly case_Id: FieldRef<"parks_landscaping", 'String'>
    readonly location: FieldRef<"parks_landscaping", 'String'>
    readonly snap_shot: FieldRef<"parks_landscaping", 'String'>
    readonly type: FieldRef<"parks_landscaping", 'String'>
    readonly status: FieldRef<"parks_landscaping", 'String'>
    readonly detection_Id: FieldRef<"parks_landscaping", 'String'>
    readonly detection_date: FieldRef<"parks_landscaping", 'DateTime'>
    readonly detection_time: FieldRef<"parks_landscaping", 'DateTime'>
    readonly description: FieldRef<"parks_landscaping", 'String'>
    readonly current_status: FieldRef<"parks_landscaping", 'String'>
    readonly camera_Id: FieldRef<"parks_landscaping", 'Int'>
    readonly after_image: FieldRef<"parks_landscaping", 'String'>
    readonly createdAt: FieldRef<"parks_landscaping", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_landscaping", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_landscaping findUnique
   */
  export type parks_landscapingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * Filter, which parks_landscaping to fetch.
     */
    where: parks_landscapingWhereUniqueInput
  }

  /**
   * parks_landscaping findUniqueOrThrow
   */
  export type parks_landscapingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * Filter, which parks_landscaping to fetch.
     */
    where: parks_landscapingWhereUniqueInput
  }

  /**
   * parks_landscaping findFirst
   */
  export type parks_landscapingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * Filter, which parks_landscaping to fetch.
     */
    where?: parks_landscapingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_landscapings to fetch.
     */
    orderBy?: parks_landscapingOrderByWithRelationInput | parks_landscapingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_landscapings.
     */
    cursor?: parks_landscapingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_landscapings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_landscapings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_landscapings.
     */
    distinct?: Parks_landscapingScalarFieldEnum | Parks_landscapingScalarFieldEnum[]
  }

  /**
   * parks_landscaping findFirstOrThrow
   */
  export type parks_landscapingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * Filter, which parks_landscaping to fetch.
     */
    where?: parks_landscapingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_landscapings to fetch.
     */
    orderBy?: parks_landscapingOrderByWithRelationInput | parks_landscapingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_landscapings.
     */
    cursor?: parks_landscapingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_landscapings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_landscapings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_landscapings.
     */
    distinct?: Parks_landscapingScalarFieldEnum | Parks_landscapingScalarFieldEnum[]
  }

  /**
   * parks_landscaping findMany
   */
  export type parks_landscapingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * Filter, which parks_landscapings to fetch.
     */
    where?: parks_landscapingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_landscapings to fetch.
     */
    orderBy?: parks_landscapingOrderByWithRelationInput | parks_landscapingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_landscapings.
     */
    cursor?: parks_landscapingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_landscapings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_landscapings.
     */
    skip?: number
    distinct?: Parks_landscapingScalarFieldEnum | Parks_landscapingScalarFieldEnum[]
  }

  /**
   * parks_landscaping create
   */
  export type parks_landscapingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_landscaping.
     */
    data?: XOR<parks_landscapingCreateInput, parks_landscapingUncheckedCreateInput>
  }

  /**
   * parks_landscaping createMany
   */
  export type parks_landscapingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_landscapings.
     */
    data: parks_landscapingCreateManyInput | parks_landscapingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_landscaping update
   */
  export type parks_landscapingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_landscaping.
     */
    data: XOR<parks_landscapingUpdateInput, parks_landscapingUncheckedUpdateInput>
    /**
     * Choose, which parks_landscaping to update.
     */
    where: parks_landscapingWhereUniqueInput
  }

  /**
   * parks_landscaping updateMany
   */
  export type parks_landscapingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_landscapings.
     */
    data: XOR<parks_landscapingUpdateManyMutationInput, parks_landscapingUncheckedUpdateManyInput>
    /**
     * Filter which parks_landscapings to update
     */
    where?: parks_landscapingWhereInput
    /**
     * Limit how many parks_landscapings to update.
     */
    limit?: number
  }

  /**
   * parks_landscaping upsert
   */
  export type parks_landscapingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_landscaping to update in case it exists.
     */
    where: parks_landscapingWhereUniqueInput
    /**
     * In case the parks_landscaping found by the `where` argument doesn't exist, create a new parks_landscaping with this data.
     */
    create: XOR<parks_landscapingCreateInput, parks_landscapingUncheckedCreateInput>
    /**
     * In case the parks_landscaping was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_landscapingUpdateInput, parks_landscapingUncheckedUpdateInput>
  }

  /**
   * parks_landscaping delete
   */
  export type parks_landscapingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    /**
     * Filter which parks_landscaping to delete.
     */
    where: parks_landscapingWhereUniqueInput
  }

  /**
   * parks_landscaping deleteMany
   */
  export type parks_landscapingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_landscapings to delete
     */
    where?: parks_landscapingWhereInput
    /**
     * Limit how many parks_landscapings to delete.
     */
    limit?: number
  }

  /**
   * parks_landscaping.parks
   */
  export type parks_landscaping$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_landscaping.park_cameras
   */
  export type parks_landscaping$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_landscaping.ticket_details
   */
  export type parks_landscaping$ticket_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    where?: ticket_details_tableWhereInput
    orderBy?: ticket_details_tableOrderByWithRelationInput | ticket_details_tableOrderByWithRelationInput[]
    cursor?: ticket_details_tableWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ticket_details_tableScalarFieldEnum | Ticket_details_tableScalarFieldEnum[]
  }

  /**
   * parks_landscaping without action
   */
  export type parks_landscapingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
  }


  /**
   * Model parks_litter_detection
   */

  export type AggregateParks_litter_detection = {
    _count: Parks_litter_detectionCountAggregateOutputType | null
    _avg: Parks_litter_detectionAvgAggregateOutputType | null
    _sum: Parks_litter_detectionSumAggregateOutputType | null
    _min: Parks_litter_detectionMinAggregateOutputType | null
    _max: Parks_litter_detectionMaxAggregateOutputType | null
  }

  export type Parks_litter_detectionAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_litter_detectionSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_litter_detectionMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    case_Id: string | null
    location: string | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    status: string | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    current_status: string | null
    camera_Id: number | null
    after_image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_litter_detectionMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    case_Id: string | null
    location: string | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    status: string | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    current_status: string | null
    camera_Id: number | null
    after_image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_litter_detectionCountAggregateOutputType = {
    Id: number
    park_Id: number
    case_Id: number
    location: number
    occurrence_date: number
    occurrence_time: number
    snap_shot: number
    status: number
    detection_Id: number
    detection_date: number
    detection_time: number
    description: number
    current_status: number
    camera_Id: number
    after_image: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_litter_detectionAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_litter_detectionSumAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_litter_detectionMinAggregateInputType = {
    Id?: true
    park_Id?: true
    case_Id?: true
    location?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    status?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    current_status?: true
    camera_Id?: true
    after_image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_litter_detectionMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    case_Id?: true
    location?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    status?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    current_status?: true
    camera_Id?: true
    after_image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_litter_detectionCountAggregateInputType = {
    Id?: true
    park_Id?: true
    case_Id?: true
    location?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    status?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    current_status?: true
    camera_Id?: true
    after_image?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_litter_detectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_litter_detection to aggregate.
     */
    where?: parks_litter_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_litter_detections to fetch.
     */
    orderBy?: parks_litter_detectionOrderByWithRelationInput | parks_litter_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_litter_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_litter_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_litter_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_litter_detections
    **/
    _count?: true | Parks_litter_detectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_litter_detectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_litter_detectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_litter_detectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_litter_detectionMaxAggregateInputType
  }

  export type GetParks_litter_detectionAggregateType<T extends Parks_litter_detectionAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_litter_detection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_litter_detection[P]>
      : GetScalarType<T[P], AggregateParks_litter_detection[P]>
  }




  export type parks_litter_detectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_litter_detectionWhereInput
    orderBy?: parks_litter_detectionOrderByWithAggregationInput | parks_litter_detectionOrderByWithAggregationInput[]
    by: Parks_litter_detectionScalarFieldEnum[] | Parks_litter_detectionScalarFieldEnum
    having?: parks_litter_detectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_litter_detectionCountAggregateInputType | true
    _avg?: Parks_litter_detectionAvgAggregateInputType
    _sum?: Parks_litter_detectionSumAggregateInputType
    _min?: Parks_litter_detectionMinAggregateInputType
    _max?: Parks_litter_detectionMaxAggregateInputType
  }

  export type Parks_litter_detectionGroupByOutputType = {
    Id: number
    park_Id: number | null
    case_Id: string | null
    location: string | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    status: string | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    current_status: string | null
    camera_Id: number | null
    after_image: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_litter_detectionCountAggregateOutputType | null
    _avg: Parks_litter_detectionAvgAggregateOutputType | null
    _sum: Parks_litter_detectionSumAggregateOutputType | null
    _min: Parks_litter_detectionMinAggregateOutputType | null
    _max: Parks_litter_detectionMaxAggregateOutputType | null
  }

  type GetParks_litter_detectionGroupByPayload<T extends parks_litter_detectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_litter_detectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_litter_detectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_litter_detectionGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_litter_detectionGroupByOutputType[P]>
        }
      >
    >


  export type parks_litter_detectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    case_Id?: boolean
    location?: boolean
    occurrence_date?: boolean
    occurrence_time?: boolean
    snap_shot?: boolean
    status?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    current_status?: boolean
    camera_Id?: boolean
    after_image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_litter_detection$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_litter_detection$park_camerasArgs<ExtArgs>
    ticket_details?: boolean | parks_litter_detection$ticket_detailsArgs<ExtArgs>
    _count?: boolean | Parks_litter_detectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parks_litter_detection"]>



  export type parks_litter_detectionSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    case_Id?: boolean
    location?: boolean
    occurrence_date?: boolean
    occurrence_time?: boolean
    snap_shot?: boolean
    status?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    current_status?: boolean
    camera_Id?: boolean
    after_image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_litter_detectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "case_Id" | "location" | "occurrence_date" | "occurrence_time" | "snap_shot" | "status" | "detection_Id" | "detection_date" | "detection_time" | "description" | "current_status" | "camera_Id" | "after_image" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_litter_detection"]>
  export type parks_litter_detectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_litter_detection$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_litter_detection$park_camerasArgs<ExtArgs>
    ticket_details?: boolean | parks_litter_detection$ticket_detailsArgs<ExtArgs>
    _count?: boolean | Parks_litter_detectionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $parks_litter_detectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_litter_detection"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
      ticket_details: Prisma.$ticket_details_tablePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      case_Id: string | null
      location: string | null
      occurrence_date: Date | null
      occurrence_time: Date | null
      snap_shot: string | null
      status: string | null
      detection_Id: string | null
      detection_date: Date | null
      detection_time: Date | null
      description: string | null
      current_status: string | null
      camera_Id: number | null
      after_image: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_litter_detection"]>
    composites: {}
  }

  type parks_litter_detectionGetPayload<S extends boolean | null | undefined | parks_litter_detectionDefaultArgs> = $Result.GetResult<Prisma.$parks_litter_detectionPayload, S>

  type parks_litter_detectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_litter_detectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_litter_detectionCountAggregateInputType | true
    }

  export interface parks_litter_detectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_litter_detection'], meta: { name: 'parks_litter_detection' } }
    /**
     * Find zero or one Parks_litter_detection that matches the filter.
     * @param {parks_litter_detectionFindUniqueArgs} args - Arguments to find a Parks_litter_detection
     * @example
     * // Get one Parks_litter_detection
     * const parks_litter_detection = await prisma.parks_litter_detection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_litter_detectionFindUniqueArgs>(args: SelectSubset<T, parks_litter_detectionFindUniqueArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_litter_detection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_litter_detectionFindUniqueOrThrowArgs} args - Arguments to find a Parks_litter_detection
     * @example
     * // Get one Parks_litter_detection
     * const parks_litter_detection = await prisma.parks_litter_detection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_litter_detectionFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_litter_detectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_litter_detection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_litter_detectionFindFirstArgs} args - Arguments to find a Parks_litter_detection
     * @example
     * // Get one Parks_litter_detection
     * const parks_litter_detection = await prisma.parks_litter_detection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_litter_detectionFindFirstArgs>(args?: SelectSubset<T, parks_litter_detectionFindFirstArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_litter_detection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_litter_detectionFindFirstOrThrowArgs} args - Arguments to find a Parks_litter_detection
     * @example
     * // Get one Parks_litter_detection
     * const parks_litter_detection = await prisma.parks_litter_detection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_litter_detectionFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_litter_detectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_litter_detections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_litter_detectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_litter_detections
     * const parks_litter_detections = await prisma.parks_litter_detection.findMany()
     * 
     * // Get first 10 Parks_litter_detections
     * const parks_litter_detections = await prisma.parks_litter_detection.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_litter_detectionWithIdOnly = await prisma.parks_litter_detection.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_litter_detectionFindManyArgs>(args?: SelectSubset<T, parks_litter_detectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_litter_detection.
     * @param {parks_litter_detectionCreateArgs} args - Arguments to create a Parks_litter_detection.
     * @example
     * // Create one Parks_litter_detection
     * const Parks_litter_detection = await prisma.parks_litter_detection.create({
     *   data: {
     *     // ... data to create a Parks_litter_detection
     *   }
     * })
     * 
     */
    create<T extends parks_litter_detectionCreateArgs>(args: SelectSubset<T, parks_litter_detectionCreateArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_litter_detections.
     * @param {parks_litter_detectionCreateManyArgs} args - Arguments to create many Parks_litter_detections.
     * @example
     * // Create many Parks_litter_detections
     * const parks_litter_detection = await prisma.parks_litter_detection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_litter_detectionCreateManyArgs>(args?: SelectSubset<T, parks_litter_detectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_litter_detection.
     * @param {parks_litter_detectionDeleteArgs} args - Arguments to delete one Parks_litter_detection.
     * @example
     * // Delete one Parks_litter_detection
     * const Parks_litter_detection = await prisma.parks_litter_detection.delete({
     *   where: {
     *     // ... filter to delete one Parks_litter_detection
     *   }
     * })
     * 
     */
    delete<T extends parks_litter_detectionDeleteArgs>(args: SelectSubset<T, parks_litter_detectionDeleteArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_litter_detection.
     * @param {parks_litter_detectionUpdateArgs} args - Arguments to update one Parks_litter_detection.
     * @example
     * // Update one Parks_litter_detection
     * const parks_litter_detection = await prisma.parks_litter_detection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_litter_detectionUpdateArgs>(args: SelectSubset<T, parks_litter_detectionUpdateArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_litter_detections.
     * @param {parks_litter_detectionDeleteManyArgs} args - Arguments to filter Parks_litter_detections to delete.
     * @example
     * // Delete a few Parks_litter_detections
     * const { count } = await prisma.parks_litter_detection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_litter_detectionDeleteManyArgs>(args?: SelectSubset<T, parks_litter_detectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_litter_detections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_litter_detectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_litter_detections
     * const parks_litter_detection = await prisma.parks_litter_detection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_litter_detectionUpdateManyArgs>(args: SelectSubset<T, parks_litter_detectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_litter_detection.
     * @param {parks_litter_detectionUpsertArgs} args - Arguments to update or create a Parks_litter_detection.
     * @example
     * // Update or create a Parks_litter_detection
     * const parks_litter_detection = await prisma.parks_litter_detection.upsert({
     *   create: {
     *     // ... data to create a Parks_litter_detection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_litter_detection we want to update
     *   }
     * })
     */
    upsert<T extends parks_litter_detectionUpsertArgs>(args: SelectSubset<T, parks_litter_detectionUpsertArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_litter_detections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_litter_detectionCountArgs} args - Arguments to filter Parks_litter_detections to count.
     * @example
     * // Count the number of Parks_litter_detections
     * const count = await prisma.parks_litter_detection.count({
     *   where: {
     *     // ... the filter for the Parks_litter_detections we want to count
     *   }
     * })
    **/
    count<T extends parks_litter_detectionCountArgs>(
      args?: Subset<T, parks_litter_detectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_litter_detectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_litter_detection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_litter_detectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_litter_detectionAggregateArgs>(args: Subset<T, Parks_litter_detectionAggregateArgs>): Prisma.PrismaPromise<GetParks_litter_detectionAggregateType<T>>

    /**
     * Group by Parks_litter_detection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_litter_detectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_litter_detectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_litter_detectionGroupByArgs['orderBy'] }
        : { orderBy?: parks_litter_detectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_litter_detectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_litter_detectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_litter_detection model
   */
  readonly fields: parks_litter_detectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_litter_detection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_litter_detectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_litter_detection$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_litter_detection$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras<T extends parks_litter_detection$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_litter_detection$park_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ticket_details<T extends parks_litter_detection$ticket_detailsArgs<ExtArgs> = {}>(args?: Subset<T, parks_litter_detection$ticket_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_litter_detection model
   */
  interface parks_litter_detectionFieldRefs {
    readonly Id: FieldRef<"parks_litter_detection", 'Int'>
    readonly park_Id: FieldRef<"parks_litter_detection", 'Int'>
    readonly case_Id: FieldRef<"parks_litter_detection", 'String'>
    readonly location: FieldRef<"parks_litter_detection", 'String'>
    readonly occurrence_date: FieldRef<"parks_litter_detection", 'DateTime'>
    readonly occurrence_time: FieldRef<"parks_litter_detection", 'DateTime'>
    readonly snap_shot: FieldRef<"parks_litter_detection", 'String'>
    readonly status: FieldRef<"parks_litter_detection", 'String'>
    readonly detection_Id: FieldRef<"parks_litter_detection", 'String'>
    readonly detection_date: FieldRef<"parks_litter_detection", 'DateTime'>
    readonly detection_time: FieldRef<"parks_litter_detection", 'DateTime'>
    readonly description: FieldRef<"parks_litter_detection", 'String'>
    readonly current_status: FieldRef<"parks_litter_detection", 'String'>
    readonly camera_Id: FieldRef<"parks_litter_detection", 'Int'>
    readonly after_image: FieldRef<"parks_litter_detection", 'String'>
    readonly createdAt: FieldRef<"parks_litter_detection", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_litter_detection", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_litter_detection findUnique
   */
  export type parks_litter_detectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_litter_detection to fetch.
     */
    where: parks_litter_detectionWhereUniqueInput
  }

  /**
   * parks_litter_detection findUniqueOrThrow
   */
  export type parks_litter_detectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_litter_detection to fetch.
     */
    where: parks_litter_detectionWhereUniqueInput
  }

  /**
   * parks_litter_detection findFirst
   */
  export type parks_litter_detectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_litter_detection to fetch.
     */
    where?: parks_litter_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_litter_detections to fetch.
     */
    orderBy?: parks_litter_detectionOrderByWithRelationInput | parks_litter_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_litter_detections.
     */
    cursor?: parks_litter_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_litter_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_litter_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_litter_detections.
     */
    distinct?: Parks_litter_detectionScalarFieldEnum | Parks_litter_detectionScalarFieldEnum[]
  }

  /**
   * parks_litter_detection findFirstOrThrow
   */
  export type parks_litter_detectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_litter_detection to fetch.
     */
    where?: parks_litter_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_litter_detections to fetch.
     */
    orderBy?: parks_litter_detectionOrderByWithRelationInput | parks_litter_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_litter_detections.
     */
    cursor?: parks_litter_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_litter_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_litter_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_litter_detections.
     */
    distinct?: Parks_litter_detectionScalarFieldEnum | Parks_litter_detectionScalarFieldEnum[]
  }

  /**
   * parks_litter_detection findMany
   */
  export type parks_litter_detectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_litter_detections to fetch.
     */
    where?: parks_litter_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_litter_detections to fetch.
     */
    orderBy?: parks_litter_detectionOrderByWithRelationInput | parks_litter_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_litter_detections.
     */
    cursor?: parks_litter_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_litter_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_litter_detections.
     */
    skip?: number
    distinct?: Parks_litter_detectionScalarFieldEnum | Parks_litter_detectionScalarFieldEnum[]
  }

  /**
   * parks_litter_detection create
   */
  export type parks_litter_detectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_litter_detection.
     */
    data?: XOR<parks_litter_detectionCreateInput, parks_litter_detectionUncheckedCreateInput>
  }

  /**
   * parks_litter_detection createMany
   */
  export type parks_litter_detectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_litter_detections.
     */
    data: parks_litter_detectionCreateManyInput | parks_litter_detectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_litter_detection update
   */
  export type parks_litter_detectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_litter_detection.
     */
    data: XOR<parks_litter_detectionUpdateInput, parks_litter_detectionUncheckedUpdateInput>
    /**
     * Choose, which parks_litter_detection to update.
     */
    where: parks_litter_detectionWhereUniqueInput
  }

  /**
   * parks_litter_detection updateMany
   */
  export type parks_litter_detectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_litter_detections.
     */
    data: XOR<parks_litter_detectionUpdateManyMutationInput, parks_litter_detectionUncheckedUpdateManyInput>
    /**
     * Filter which parks_litter_detections to update
     */
    where?: parks_litter_detectionWhereInput
    /**
     * Limit how many parks_litter_detections to update.
     */
    limit?: number
  }

  /**
   * parks_litter_detection upsert
   */
  export type parks_litter_detectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_litter_detection to update in case it exists.
     */
    where: parks_litter_detectionWhereUniqueInput
    /**
     * In case the parks_litter_detection found by the `where` argument doesn't exist, create a new parks_litter_detection with this data.
     */
    create: XOR<parks_litter_detectionCreateInput, parks_litter_detectionUncheckedCreateInput>
    /**
     * In case the parks_litter_detection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_litter_detectionUpdateInput, parks_litter_detectionUncheckedUpdateInput>
  }

  /**
   * parks_litter_detection delete
   */
  export type parks_litter_detectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    /**
     * Filter which parks_litter_detection to delete.
     */
    where: parks_litter_detectionWhereUniqueInput
  }

  /**
   * parks_litter_detection deleteMany
   */
  export type parks_litter_detectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_litter_detections to delete
     */
    where?: parks_litter_detectionWhereInput
    /**
     * Limit how many parks_litter_detections to delete.
     */
    limit?: number
  }

  /**
   * parks_litter_detection.parks
   */
  export type parks_litter_detection$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_litter_detection.park_cameras
   */
  export type parks_litter_detection$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_litter_detection.ticket_details
   */
  export type parks_litter_detection$ticket_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    where?: ticket_details_tableWhereInput
    orderBy?: ticket_details_tableOrderByWithRelationInput | ticket_details_tableOrderByWithRelationInput[]
    cursor?: ticket_details_tableWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ticket_details_tableScalarFieldEnum | Ticket_details_tableScalarFieldEnum[]
  }

  /**
   * parks_litter_detection without action
   */
  export type parks_litter_detectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
  }


  /**
   * Model ticket_details_table
   */

  export type AggregateTicket_details_table = {
    _count: Ticket_details_tableCountAggregateOutputType | null
    _avg: Ticket_details_tableAvgAggregateOutputType | null
    _sum: Ticket_details_tableSumAggregateOutputType | null
    _min: Ticket_details_tableMinAggregateOutputType | null
    _max: Ticket_details_tableMaxAggregateOutputType | null
  }

  export type Ticket_details_tableAvgAggregateOutputType = {
    id: number | null
    litterDetectionId: number | null
    landscapingId: number | null
  }

  export type Ticket_details_tableSumAggregateOutputType = {
    id: number | null
    litterDetectionId: number | null
    landscapingId: number | null
  }

  export type Ticket_details_tableMinAggregateOutputType = {
    id: number | null
    status: string | null
    date: Date | null
    time: Date | null
    comments: string | null
    image: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
    abc4: string | null
    litterDetectionId: number | null
    landscapingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Ticket_details_tableMaxAggregateOutputType = {
    id: number | null
    status: string | null
    date: Date | null
    time: Date | null
    comments: string | null
    image: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
    abc4: string | null
    litterDetectionId: number | null
    landscapingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Ticket_details_tableCountAggregateOutputType = {
    id: number
    status: number
    date: number
    time: number
    comments: number
    image: number
    abc1: number
    abc2: number
    abc3: number
    abc4: number
    litterDetectionId: number
    landscapingId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Ticket_details_tableAvgAggregateInputType = {
    id?: true
    litterDetectionId?: true
    landscapingId?: true
  }

  export type Ticket_details_tableSumAggregateInputType = {
    id?: true
    litterDetectionId?: true
    landscapingId?: true
  }

  export type Ticket_details_tableMinAggregateInputType = {
    id?: true
    status?: true
    date?: true
    time?: true
    comments?: true
    image?: true
    abc1?: true
    abc2?: true
    abc3?: true
    abc4?: true
    litterDetectionId?: true
    landscapingId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Ticket_details_tableMaxAggregateInputType = {
    id?: true
    status?: true
    date?: true
    time?: true
    comments?: true
    image?: true
    abc1?: true
    abc2?: true
    abc3?: true
    abc4?: true
    litterDetectionId?: true
    landscapingId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Ticket_details_tableCountAggregateInputType = {
    id?: true
    status?: true
    date?: true
    time?: true
    comments?: true
    image?: true
    abc1?: true
    abc2?: true
    abc3?: true
    abc4?: true
    litterDetectionId?: true
    landscapingId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Ticket_details_tableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ticket_details_table to aggregate.
     */
    where?: ticket_details_tableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ticket_details_tables to fetch.
     */
    orderBy?: ticket_details_tableOrderByWithRelationInput | ticket_details_tableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ticket_details_tableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ticket_details_tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ticket_details_tables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ticket_details_tables
    **/
    _count?: true | Ticket_details_tableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ticket_details_tableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ticket_details_tableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ticket_details_tableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ticket_details_tableMaxAggregateInputType
  }

  export type GetTicket_details_tableAggregateType<T extends Ticket_details_tableAggregateArgs> = {
        [P in keyof T & keyof AggregateTicket_details_table]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicket_details_table[P]>
      : GetScalarType<T[P], AggregateTicket_details_table[P]>
  }




  export type ticket_details_tableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticket_details_tableWhereInput
    orderBy?: ticket_details_tableOrderByWithAggregationInput | ticket_details_tableOrderByWithAggregationInput[]
    by: Ticket_details_tableScalarFieldEnum[] | Ticket_details_tableScalarFieldEnum
    having?: ticket_details_tableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ticket_details_tableCountAggregateInputType | true
    _avg?: Ticket_details_tableAvgAggregateInputType
    _sum?: Ticket_details_tableSumAggregateInputType
    _min?: Ticket_details_tableMinAggregateInputType
    _max?: Ticket_details_tableMaxAggregateInputType
  }

  export type Ticket_details_tableGroupByOutputType = {
    id: number
    status: string | null
    date: Date | null
    time: Date | null
    comments: string | null
    image: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
    abc4: string | null
    litterDetectionId: number | null
    landscapingId: number | null
    createdAt: Date | null
    updatedAt: Date
    _count: Ticket_details_tableCountAggregateOutputType | null
    _avg: Ticket_details_tableAvgAggregateOutputType | null
    _sum: Ticket_details_tableSumAggregateOutputType | null
    _min: Ticket_details_tableMinAggregateOutputType | null
    _max: Ticket_details_tableMaxAggregateOutputType | null
  }

  type GetTicket_details_tableGroupByPayload<T extends ticket_details_tableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ticket_details_tableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ticket_details_tableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ticket_details_tableGroupByOutputType[P]>
            : GetScalarType<T[P], Ticket_details_tableGroupByOutputType[P]>
        }
      >
    >


  export type ticket_details_tableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    date?: boolean
    time?: boolean
    comments?: boolean
    image?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
    abc4?: boolean
    litterDetectionId?: boolean
    landscapingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks_litter_detection?: boolean | ticket_details_table$parks_litter_detectionArgs<ExtArgs>
    parks_landscaping?: boolean | ticket_details_table$parks_landscapingArgs<ExtArgs>
  }, ExtArgs["result"]["ticket_details_table"]>



  export type ticket_details_tableSelectScalar = {
    id?: boolean
    status?: boolean
    date?: boolean
    time?: boolean
    comments?: boolean
    image?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
    abc4?: boolean
    litterDetectionId?: boolean
    landscapingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ticket_details_tableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "date" | "time" | "comments" | "image" | "abc1" | "abc2" | "abc3" | "abc4" | "litterDetectionId" | "landscapingId" | "createdAt" | "updatedAt", ExtArgs["result"]["ticket_details_table"]>
  export type ticket_details_tableInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks_litter_detection?: boolean | ticket_details_table$parks_litter_detectionArgs<ExtArgs>
    parks_landscaping?: boolean | ticket_details_table$parks_landscapingArgs<ExtArgs>
  }

  export type $ticket_details_tablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ticket_details_table"
    objects: {
      parks_litter_detection: Prisma.$parks_litter_detectionPayload<ExtArgs> | null
      parks_landscaping: Prisma.$parks_landscapingPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      status: string | null
      date: Date | null
      time: Date | null
      comments: string | null
      image: string | null
      abc1: string | null
      abc2: string | null
      abc3: string | null
      abc4: string | null
      litterDetectionId: number | null
      landscapingId: number | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["ticket_details_table"]>
    composites: {}
  }

  type ticket_details_tableGetPayload<S extends boolean | null | undefined | ticket_details_tableDefaultArgs> = $Result.GetResult<Prisma.$ticket_details_tablePayload, S>

  type ticket_details_tableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ticket_details_tableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ticket_details_tableCountAggregateInputType | true
    }

  export interface ticket_details_tableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ticket_details_table'], meta: { name: 'ticket_details_table' } }
    /**
     * Find zero or one Ticket_details_table that matches the filter.
     * @param {ticket_details_tableFindUniqueArgs} args - Arguments to find a Ticket_details_table
     * @example
     * // Get one Ticket_details_table
     * const ticket_details_table = await prisma.ticket_details_table.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ticket_details_tableFindUniqueArgs>(args: SelectSubset<T, ticket_details_tableFindUniqueArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ticket_details_table that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ticket_details_tableFindUniqueOrThrowArgs} args - Arguments to find a Ticket_details_table
     * @example
     * // Get one Ticket_details_table
     * const ticket_details_table = await prisma.ticket_details_table.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ticket_details_tableFindUniqueOrThrowArgs>(args: SelectSubset<T, ticket_details_tableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket_details_table that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticket_details_tableFindFirstArgs} args - Arguments to find a Ticket_details_table
     * @example
     * // Get one Ticket_details_table
     * const ticket_details_table = await prisma.ticket_details_table.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ticket_details_tableFindFirstArgs>(args?: SelectSubset<T, ticket_details_tableFindFirstArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket_details_table that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticket_details_tableFindFirstOrThrowArgs} args - Arguments to find a Ticket_details_table
     * @example
     * // Get one Ticket_details_table
     * const ticket_details_table = await prisma.ticket_details_table.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ticket_details_tableFindFirstOrThrowArgs>(args?: SelectSubset<T, ticket_details_tableFindFirstOrThrowArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ticket_details_tables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticket_details_tableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ticket_details_tables
     * const ticket_details_tables = await prisma.ticket_details_table.findMany()
     * 
     * // Get first 10 Ticket_details_tables
     * const ticket_details_tables = await prisma.ticket_details_table.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticket_details_tableWithIdOnly = await prisma.ticket_details_table.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ticket_details_tableFindManyArgs>(args?: SelectSubset<T, ticket_details_tableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ticket_details_table.
     * @param {ticket_details_tableCreateArgs} args - Arguments to create a Ticket_details_table.
     * @example
     * // Create one Ticket_details_table
     * const Ticket_details_table = await prisma.ticket_details_table.create({
     *   data: {
     *     // ... data to create a Ticket_details_table
     *   }
     * })
     * 
     */
    create<T extends ticket_details_tableCreateArgs>(args: SelectSubset<T, ticket_details_tableCreateArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ticket_details_tables.
     * @param {ticket_details_tableCreateManyArgs} args - Arguments to create many Ticket_details_tables.
     * @example
     * // Create many Ticket_details_tables
     * const ticket_details_table = await prisma.ticket_details_table.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ticket_details_tableCreateManyArgs>(args?: SelectSubset<T, ticket_details_tableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ticket_details_table.
     * @param {ticket_details_tableDeleteArgs} args - Arguments to delete one Ticket_details_table.
     * @example
     * // Delete one Ticket_details_table
     * const Ticket_details_table = await prisma.ticket_details_table.delete({
     *   where: {
     *     // ... filter to delete one Ticket_details_table
     *   }
     * })
     * 
     */
    delete<T extends ticket_details_tableDeleteArgs>(args: SelectSubset<T, ticket_details_tableDeleteArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ticket_details_table.
     * @param {ticket_details_tableUpdateArgs} args - Arguments to update one Ticket_details_table.
     * @example
     * // Update one Ticket_details_table
     * const ticket_details_table = await prisma.ticket_details_table.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ticket_details_tableUpdateArgs>(args: SelectSubset<T, ticket_details_tableUpdateArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ticket_details_tables.
     * @param {ticket_details_tableDeleteManyArgs} args - Arguments to filter Ticket_details_tables to delete.
     * @example
     * // Delete a few Ticket_details_tables
     * const { count } = await prisma.ticket_details_table.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ticket_details_tableDeleteManyArgs>(args?: SelectSubset<T, ticket_details_tableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ticket_details_tables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticket_details_tableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ticket_details_tables
     * const ticket_details_table = await prisma.ticket_details_table.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ticket_details_tableUpdateManyArgs>(args: SelectSubset<T, ticket_details_tableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ticket_details_table.
     * @param {ticket_details_tableUpsertArgs} args - Arguments to update or create a Ticket_details_table.
     * @example
     * // Update or create a Ticket_details_table
     * const ticket_details_table = await prisma.ticket_details_table.upsert({
     *   create: {
     *     // ... data to create a Ticket_details_table
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ticket_details_table we want to update
     *   }
     * })
     */
    upsert<T extends ticket_details_tableUpsertArgs>(args: SelectSubset<T, ticket_details_tableUpsertArgs<ExtArgs>>): Prisma__ticket_details_tableClient<$Result.GetResult<Prisma.$ticket_details_tablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ticket_details_tables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticket_details_tableCountArgs} args - Arguments to filter Ticket_details_tables to count.
     * @example
     * // Count the number of Ticket_details_tables
     * const count = await prisma.ticket_details_table.count({
     *   where: {
     *     // ... the filter for the Ticket_details_tables we want to count
     *   }
     * })
    **/
    count<T extends ticket_details_tableCountArgs>(
      args?: Subset<T, ticket_details_tableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ticket_details_tableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ticket_details_table.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ticket_details_tableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ticket_details_tableAggregateArgs>(args: Subset<T, Ticket_details_tableAggregateArgs>): Prisma.PrismaPromise<GetTicket_details_tableAggregateType<T>>

    /**
     * Group by Ticket_details_table.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticket_details_tableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ticket_details_tableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ticket_details_tableGroupByArgs['orderBy'] }
        : { orderBy?: ticket_details_tableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ticket_details_tableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicket_details_tableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ticket_details_table model
   */
  readonly fields: ticket_details_tableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ticket_details_table.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ticket_details_tableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks_litter_detection<T extends ticket_details_table$parks_litter_detectionArgs<ExtArgs> = {}>(args?: Subset<T, ticket_details_table$parks_litter_detectionArgs<ExtArgs>>): Prisma__parks_litter_detectionClient<$Result.GetResult<Prisma.$parks_litter_detectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    parks_landscaping<T extends ticket_details_table$parks_landscapingArgs<ExtArgs> = {}>(args?: Subset<T, ticket_details_table$parks_landscapingArgs<ExtArgs>>): Prisma__parks_landscapingClient<$Result.GetResult<Prisma.$parks_landscapingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ticket_details_table model
   */
  interface ticket_details_tableFieldRefs {
    readonly id: FieldRef<"ticket_details_table", 'Int'>
    readonly status: FieldRef<"ticket_details_table", 'String'>
    readonly date: FieldRef<"ticket_details_table", 'DateTime'>
    readonly time: FieldRef<"ticket_details_table", 'DateTime'>
    readonly comments: FieldRef<"ticket_details_table", 'String'>
    readonly image: FieldRef<"ticket_details_table", 'String'>
    readonly abc1: FieldRef<"ticket_details_table", 'String'>
    readonly abc2: FieldRef<"ticket_details_table", 'String'>
    readonly abc3: FieldRef<"ticket_details_table", 'String'>
    readonly abc4: FieldRef<"ticket_details_table", 'String'>
    readonly litterDetectionId: FieldRef<"ticket_details_table", 'Int'>
    readonly landscapingId: FieldRef<"ticket_details_table", 'Int'>
    readonly createdAt: FieldRef<"ticket_details_table", 'DateTime'>
    readonly updatedAt: FieldRef<"ticket_details_table", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ticket_details_table findUnique
   */
  export type ticket_details_tableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * Filter, which ticket_details_table to fetch.
     */
    where: ticket_details_tableWhereUniqueInput
  }

  /**
   * ticket_details_table findUniqueOrThrow
   */
  export type ticket_details_tableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * Filter, which ticket_details_table to fetch.
     */
    where: ticket_details_tableWhereUniqueInput
  }

  /**
   * ticket_details_table findFirst
   */
  export type ticket_details_tableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * Filter, which ticket_details_table to fetch.
     */
    where?: ticket_details_tableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ticket_details_tables to fetch.
     */
    orderBy?: ticket_details_tableOrderByWithRelationInput | ticket_details_tableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ticket_details_tables.
     */
    cursor?: ticket_details_tableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ticket_details_tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ticket_details_tables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ticket_details_tables.
     */
    distinct?: Ticket_details_tableScalarFieldEnum | Ticket_details_tableScalarFieldEnum[]
  }

  /**
   * ticket_details_table findFirstOrThrow
   */
  export type ticket_details_tableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * Filter, which ticket_details_table to fetch.
     */
    where?: ticket_details_tableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ticket_details_tables to fetch.
     */
    orderBy?: ticket_details_tableOrderByWithRelationInput | ticket_details_tableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ticket_details_tables.
     */
    cursor?: ticket_details_tableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ticket_details_tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ticket_details_tables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ticket_details_tables.
     */
    distinct?: Ticket_details_tableScalarFieldEnum | Ticket_details_tableScalarFieldEnum[]
  }

  /**
   * ticket_details_table findMany
   */
  export type ticket_details_tableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * Filter, which ticket_details_tables to fetch.
     */
    where?: ticket_details_tableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ticket_details_tables to fetch.
     */
    orderBy?: ticket_details_tableOrderByWithRelationInput | ticket_details_tableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ticket_details_tables.
     */
    cursor?: ticket_details_tableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ticket_details_tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ticket_details_tables.
     */
    skip?: number
    distinct?: Ticket_details_tableScalarFieldEnum | Ticket_details_tableScalarFieldEnum[]
  }

  /**
   * ticket_details_table create
   */
  export type ticket_details_tableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * The data needed to create a ticket_details_table.
     */
    data?: XOR<ticket_details_tableCreateInput, ticket_details_tableUncheckedCreateInput>
  }

  /**
   * ticket_details_table createMany
   */
  export type ticket_details_tableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ticket_details_tables.
     */
    data: ticket_details_tableCreateManyInput | ticket_details_tableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ticket_details_table update
   */
  export type ticket_details_tableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * The data needed to update a ticket_details_table.
     */
    data: XOR<ticket_details_tableUpdateInput, ticket_details_tableUncheckedUpdateInput>
    /**
     * Choose, which ticket_details_table to update.
     */
    where: ticket_details_tableWhereUniqueInput
  }

  /**
   * ticket_details_table updateMany
   */
  export type ticket_details_tableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ticket_details_tables.
     */
    data: XOR<ticket_details_tableUpdateManyMutationInput, ticket_details_tableUncheckedUpdateManyInput>
    /**
     * Filter which ticket_details_tables to update
     */
    where?: ticket_details_tableWhereInput
    /**
     * Limit how many ticket_details_tables to update.
     */
    limit?: number
  }

  /**
   * ticket_details_table upsert
   */
  export type ticket_details_tableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * The filter to search for the ticket_details_table to update in case it exists.
     */
    where: ticket_details_tableWhereUniqueInput
    /**
     * In case the ticket_details_table found by the `where` argument doesn't exist, create a new ticket_details_table with this data.
     */
    create: XOR<ticket_details_tableCreateInput, ticket_details_tableUncheckedCreateInput>
    /**
     * In case the ticket_details_table was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ticket_details_tableUpdateInput, ticket_details_tableUncheckedUpdateInput>
  }

  /**
   * ticket_details_table delete
   */
  export type ticket_details_tableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
    /**
     * Filter which ticket_details_table to delete.
     */
    where: ticket_details_tableWhereUniqueInput
  }

  /**
   * ticket_details_table deleteMany
   */
  export type ticket_details_tableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ticket_details_tables to delete
     */
    where?: ticket_details_tableWhereInput
    /**
     * Limit how many ticket_details_tables to delete.
     */
    limit?: number
  }

  /**
   * ticket_details_table.parks_litter_detection
   */
  export type ticket_details_table$parks_litter_detectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_litter_detection
     */
    select?: parks_litter_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_litter_detection
     */
    omit?: parks_litter_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_litter_detectionInclude<ExtArgs> | null
    where?: parks_litter_detectionWhereInput
  }

  /**
   * ticket_details_table.parks_landscaping
   */
  export type ticket_details_table$parks_landscapingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_landscaping
     */
    select?: parks_landscapingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_landscaping
     */
    omit?: parks_landscapingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_landscapingInclude<ExtArgs> | null
    where?: parks_landscapingWhereInput
  }

  /**
   * ticket_details_table without action
   */
  export type ticket_details_tableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ticket_details_table
     */
    select?: ticket_details_tableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ticket_details_table
     */
    omit?: ticket_details_tableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticket_details_tableInclude<ExtArgs> | null
  }


  /**
   * Model parks_sentiment_analysis
   */

  export type AggregateParks_sentiment_analysis = {
    _count: Parks_sentiment_analysisCountAggregateOutputType | null
    _avg: Parks_sentiment_analysisAvgAggregateOutputType | null
    _sum: Parks_sentiment_analysisSumAggregateOutputType | null
    _min: Parks_sentiment_analysisMinAggregateOutputType | null
    _max: Parks_sentiment_analysisMaxAggregateOutputType | null
  }

  export type Parks_sentiment_analysisAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    entry_camera_Id: number | null
    exit_camera_Id: number | null
  }

  export type Parks_sentiment_analysisSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    entry_camera_Id: number | null
    exit_camera_Id: number | null
  }

  export type Parks_sentiment_analysisMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: string | null
    detection_Id: string | null
    person_name: string | null
    person_image: string | null
    gender: string | null
    check_in_image: string | null
    sentiment_of: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date: Date | null
    check_in_time: Date | null
    check_in_sentiment: string | null
    entry_camera_Id: number | null
    check_out_date: Date | null
    check_out_time: Date | null
    check_out_capture: string | null
    check_out_sentiment: string | null
    exit_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_sentiment_analysisMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    person_Id: string | null
    detection_Id: string | null
    person_name: string | null
    person_image: string | null
    gender: string | null
    check_in_image: string | null
    sentiment_of: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date: Date | null
    check_in_time: Date | null
    check_in_sentiment: string | null
    entry_camera_Id: number | null
    check_out_date: Date | null
    check_out_time: Date | null
    check_out_capture: string | null
    check_out_sentiment: string | null
    exit_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_sentiment_analysisCountAggregateOutputType = {
    Id: number
    park_Id: number
    person_Id: number
    detection_Id: number
    person_name: number
    person_image: number
    gender: number
    check_in_image: number
    sentiment_of: number
    check_in_date: number
    check_in_time: number
    check_in_sentiment: number
    entry_camera_Id: number
    check_out_date: number
    check_out_time: number
    check_out_capture: number
    check_out_sentiment: number
    exit_camera_Id: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_sentiment_analysisAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    entry_camera_Id?: true
    exit_camera_Id?: true
  }

  export type Parks_sentiment_analysisSumAggregateInputType = {
    Id?: true
    park_Id?: true
    entry_camera_Id?: true
    exit_camera_Id?: true
  }

  export type Parks_sentiment_analysisMinAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    detection_Id?: true
    person_name?: true
    person_image?: true
    gender?: true
    check_in_image?: true
    sentiment_of?: true
    check_in_date?: true
    check_in_time?: true
    check_in_sentiment?: true
    entry_camera_Id?: true
    check_out_date?: true
    check_out_time?: true
    check_out_capture?: true
    check_out_sentiment?: true
    exit_camera_Id?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_sentiment_analysisMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    detection_Id?: true
    person_name?: true
    person_image?: true
    gender?: true
    check_in_image?: true
    sentiment_of?: true
    check_in_date?: true
    check_in_time?: true
    check_in_sentiment?: true
    entry_camera_Id?: true
    check_out_date?: true
    check_out_time?: true
    check_out_capture?: true
    check_out_sentiment?: true
    exit_camera_Id?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_sentiment_analysisCountAggregateInputType = {
    Id?: true
    park_Id?: true
    person_Id?: true
    detection_Id?: true
    person_name?: true
    person_image?: true
    gender?: true
    check_in_image?: true
    sentiment_of?: true
    check_in_date?: true
    check_in_time?: true
    check_in_sentiment?: true
    entry_camera_Id?: true
    check_out_date?: true
    check_out_time?: true
    check_out_capture?: true
    check_out_sentiment?: true
    exit_camera_Id?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_sentiment_analysisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_sentiment_analysis to aggregate.
     */
    where?: parks_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_sentiment_analyses to fetch.
     */
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_sentiment_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_sentiment_analyses
    **/
    _count?: true | Parks_sentiment_analysisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_sentiment_analysisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_sentiment_analysisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_sentiment_analysisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_sentiment_analysisMaxAggregateInputType
  }

  export type GetParks_sentiment_analysisAggregateType<T extends Parks_sentiment_analysisAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_sentiment_analysis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_sentiment_analysis[P]>
      : GetScalarType<T[P], AggregateParks_sentiment_analysis[P]>
  }




  export type parks_sentiment_analysisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_sentiment_analysisWhereInput
    orderBy?: parks_sentiment_analysisOrderByWithAggregationInput | parks_sentiment_analysisOrderByWithAggregationInput[]
    by: Parks_sentiment_analysisScalarFieldEnum[] | Parks_sentiment_analysisScalarFieldEnum
    having?: parks_sentiment_analysisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_sentiment_analysisCountAggregateInputType | true
    _avg?: Parks_sentiment_analysisAvgAggregateInputType
    _sum?: Parks_sentiment_analysisSumAggregateInputType
    _min?: Parks_sentiment_analysisMinAggregateInputType
    _max?: Parks_sentiment_analysisMaxAggregateInputType
  }

  export type Parks_sentiment_analysisGroupByOutputType = {
    Id: number
    park_Id: number | null
    person_Id: string | null
    detection_Id: string | null
    person_name: string | null
    person_image: string | null
    gender: string | null
    check_in_image: string | null
    sentiment_of: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date: Date | null
    check_in_time: Date | null
    check_in_sentiment: string | null
    entry_camera_Id: number | null
    check_out_date: Date | null
    check_out_time: Date | null
    check_out_capture: string | null
    check_out_sentiment: string | null
    exit_camera_Id: number | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_sentiment_analysisCountAggregateOutputType | null
    _avg: Parks_sentiment_analysisAvgAggregateOutputType | null
    _sum: Parks_sentiment_analysisSumAggregateOutputType | null
    _min: Parks_sentiment_analysisMinAggregateOutputType | null
    _max: Parks_sentiment_analysisMaxAggregateOutputType | null
  }

  type GetParks_sentiment_analysisGroupByPayload<T extends parks_sentiment_analysisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_sentiment_analysisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_sentiment_analysisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_sentiment_analysisGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_sentiment_analysisGroupByOutputType[P]>
        }
      >
    >


  export type parks_sentiment_analysisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    person_Id?: boolean
    detection_Id?: boolean
    person_name?: boolean
    person_image?: boolean
    gender?: boolean
    check_in_image?: boolean
    sentiment_of?: boolean
    check_in_date?: boolean
    check_in_time?: boolean
    check_in_sentiment?: boolean
    entry_camera_Id?: boolean
    check_out_date?: boolean
    check_out_time?: boolean
    check_out_capture?: boolean
    check_out_sentiment?: boolean
    exit_camera_Id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_sentiment_analysis$parksArgs<ExtArgs>
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: boolean | parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs>
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: boolean | parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs>
  }, ExtArgs["result"]["parks_sentiment_analysis"]>



  export type parks_sentiment_analysisSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    person_Id?: boolean
    detection_Id?: boolean
    person_name?: boolean
    person_image?: boolean
    gender?: boolean
    check_in_image?: boolean
    sentiment_of?: boolean
    check_in_date?: boolean
    check_in_time?: boolean
    check_in_sentiment?: boolean
    entry_camera_Id?: boolean
    check_out_date?: boolean
    check_out_time?: boolean
    check_out_capture?: boolean
    check_out_sentiment?: boolean
    exit_camera_Id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_sentiment_analysisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "person_Id" | "detection_Id" | "person_name" | "person_image" | "gender" | "check_in_image" | "sentiment_of" | "check_in_date" | "check_in_time" | "check_in_sentiment" | "entry_camera_Id" | "check_out_date" | "check_out_time" | "check_out_capture" | "check_out_sentiment" | "exit_camera_Id" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_sentiment_analysis"]>
  export type parks_sentiment_analysisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_sentiment_analysis$parksArgs<ExtArgs>
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: boolean | parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs>
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: boolean | parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs>
  }

  export type $parks_sentiment_analysisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_sentiment_analysis"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
      park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      person_Id: string | null
      detection_Id: string | null
      person_name: string | null
      person_image: string | null
      gender: string | null
      check_in_image: string | null
      sentiment_of: $Enums.parks_sentiment_analysis_sentiment_of | null
      check_in_date: Date | null
      check_in_time: Date | null
      check_in_sentiment: string | null
      entry_camera_Id: number | null
      check_out_date: Date | null
      check_out_time: Date | null
      check_out_capture: string | null
      check_out_sentiment: string | null
      exit_camera_Id: number | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_sentiment_analysis"]>
    composites: {}
  }

  type parks_sentiment_analysisGetPayload<S extends boolean | null | undefined | parks_sentiment_analysisDefaultArgs> = $Result.GetResult<Prisma.$parks_sentiment_analysisPayload, S>

  type parks_sentiment_analysisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_sentiment_analysisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_sentiment_analysisCountAggregateInputType | true
    }

  export interface parks_sentiment_analysisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_sentiment_analysis'], meta: { name: 'parks_sentiment_analysis' } }
    /**
     * Find zero or one Parks_sentiment_analysis that matches the filter.
     * @param {parks_sentiment_analysisFindUniqueArgs} args - Arguments to find a Parks_sentiment_analysis
     * @example
     * // Get one Parks_sentiment_analysis
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_sentiment_analysisFindUniqueArgs>(args: SelectSubset<T, parks_sentiment_analysisFindUniqueArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_sentiment_analysis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_sentiment_analysisFindUniqueOrThrowArgs} args - Arguments to find a Parks_sentiment_analysis
     * @example
     * // Get one Parks_sentiment_analysis
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_sentiment_analysisFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_sentiment_analysisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_sentiment_analysis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_sentiment_analysisFindFirstArgs} args - Arguments to find a Parks_sentiment_analysis
     * @example
     * // Get one Parks_sentiment_analysis
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_sentiment_analysisFindFirstArgs>(args?: SelectSubset<T, parks_sentiment_analysisFindFirstArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_sentiment_analysis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_sentiment_analysisFindFirstOrThrowArgs} args - Arguments to find a Parks_sentiment_analysis
     * @example
     * // Get one Parks_sentiment_analysis
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_sentiment_analysisFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_sentiment_analysisFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_sentiment_analyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_sentiment_analysisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_sentiment_analyses
     * const parks_sentiment_analyses = await prisma.parks_sentiment_analysis.findMany()
     * 
     * // Get first 10 Parks_sentiment_analyses
     * const parks_sentiment_analyses = await prisma.parks_sentiment_analysis.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_sentiment_analysisWithIdOnly = await prisma.parks_sentiment_analysis.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_sentiment_analysisFindManyArgs>(args?: SelectSubset<T, parks_sentiment_analysisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_sentiment_analysis.
     * @param {parks_sentiment_analysisCreateArgs} args - Arguments to create a Parks_sentiment_analysis.
     * @example
     * // Create one Parks_sentiment_analysis
     * const Parks_sentiment_analysis = await prisma.parks_sentiment_analysis.create({
     *   data: {
     *     // ... data to create a Parks_sentiment_analysis
     *   }
     * })
     * 
     */
    create<T extends parks_sentiment_analysisCreateArgs>(args: SelectSubset<T, parks_sentiment_analysisCreateArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_sentiment_analyses.
     * @param {parks_sentiment_analysisCreateManyArgs} args - Arguments to create many Parks_sentiment_analyses.
     * @example
     * // Create many Parks_sentiment_analyses
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_sentiment_analysisCreateManyArgs>(args?: SelectSubset<T, parks_sentiment_analysisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_sentiment_analysis.
     * @param {parks_sentiment_analysisDeleteArgs} args - Arguments to delete one Parks_sentiment_analysis.
     * @example
     * // Delete one Parks_sentiment_analysis
     * const Parks_sentiment_analysis = await prisma.parks_sentiment_analysis.delete({
     *   where: {
     *     // ... filter to delete one Parks_sentiment_analysis
     *   }
     * })
     * 
     */
    delete<T extends parks_sentiment_analysisDeleteArgs>(args: SelectSubset<T, parks_sentiment_analysisDeleteArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_sentiment_analysis.
     * @param {parks_sentiment_analysisUpdateArgs} args - Arguments to update one Parks_sentiment_analysis.
     * @example
     * // Update one Parks_sentiment_analysis
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_sentiment_analysisUpdateArgs>(args: SelectSubset<T, parks_sentiment_analysisUpdateArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_sentiment_analyses.
     * @param {parks_sentiment_analysisDeleteManyArgs} args - Arguments to filter Parks_sentiment_analyses to delete.
     * @example
     * // Delete a few Parks_sentiment_analyses
     * const { count } = await prisma.parks_sentiment_analysis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_sentiment_analysisDeleteManyArgs>(args?: SelectSubset<T, parks_sentiment_analysisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_sentiment_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_sentiment_analysisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_sentiment_analyses
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_sentiment_analysisUpdateManyArgs>(args: SelectSubset<T, parks_sentiment_analysisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_sentiment_analysis.
     * @param {parks_sentiment_analysisUpsertArgs} args - Arguments to update or create a Parks_sentiment_analysis.
     * @example
     * // Update or create a Parks_sentiment_analysis
     * const parks_sentiment_analysis = await prisma.parks_sentiment_analysis.upsert({
     *   create: {
     *     // ... data to create a Parks_sentiment_analysis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_sentiment_analysis we want to update
     *   }
     * })
     */
    upsert<T extends parks_sentiment_analysisUpsertArgs>(args: SelectSubset<T, parks_sentiment_analysisUpsertArgs<ExtArgs>>): Prisma__parks_sentiment_analysisClient<$Result.GetResult<Prisma.$parks_sentiment_analysisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_sentiment_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_sentiment_analysisCountArgs} args - Arguments to filter Parks_sentiment_analyses to count.
     * @example
     * // Count the number of Parks_sentiment_analyses
     * const count = await prisma.parks_sentiment_analysis.count({
     *   where: {
     *     // ... the filter for the Parks_sentiment_analyses we want to count
     *   }
     * })
    **/
    count<T extends parks_sentiment_analysisCountArgs>(
      args?: Subset<T, parks_sentiment_analysisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_sentiment_analysisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_sentiment_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_sentiment_analysisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_sentiment_analysisAggregateArgs>(args: Subset<T, Parks_sentiment_analysisAggregateArgs>): Prisma.PrismaPromise<GetParks_sentiment_analysisAggregateType<T>>

    /**
     * Group by Parks_sentiment_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_sentiment_analysisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_sentiment_analysisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_sentiment_analysisGroupByArgs['orderBy'] }
        : { orderBy?: parks_sentiment_analysisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_sentiment_analysisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_sentiment_analysisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_sentiment_analysis model
   */
  readonly fields: parks_sentiment_analysisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_sentiment_analysis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_sentiment_analysisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_sentiment_analysis$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_sentiment_analysis$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras<T extends parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras<T extends parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_sentiment_analysis model
   */
  interface parks_sentiment_analysisFieldRefs {
    readonly Id: FieldRef<"parks_sentiment_analysis", 'Int'>
    readonly park_Id: FieldRef<"parks_sentiment_analysis", 'Int'>
    readonly person_Id: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly detection_Id: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly person_name: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly person_image: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly gender: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly check_in_image: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly sentiment_of: FieldRef<"parks_sentiment_analysis", 'parks_sentiment_analysis_sentiment_of'>
    readonly check_in_date: FieldRef<"parks_sentiment_analysis", 'DateTime'>
    readonly check_in_time: FieldRef<"parks_sentiment_analysis", 'DateTime'>
    readonly check_in_sentiment: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly entry_camera_Id: FieldRef<"parks_sentiment_analysis", 'Int'>
    readonly check_out_date: FieldRef<"parks_sentiment_analysis", 'DateTime'>
    readonly check_out_time: FieldRef<"parks_sentiment_analysis", 'DateTime'>
    readonly check_out_capture: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly check_out_sentiment: FieldRef<"parks_sentiment_analysis", 'String'>
    readonly exit_camera_Id: FieldRef<"parks_sentiment_analysis", 'Int'>
    readonly createdAt: FieldRef<"parks_sentiment_analysis", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_sentiment_analysis", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_sentiment_analysis findUnique
   */
  export type parks_sentiment_analysisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_sentiment_analysis to fetch.
     */
    where: parks_sentiment_analysisWhereUniqueInput
  }

  /**
   * parks_sentiment_analysis findUniqueOrThrow
   */
  export type parks_sentiment_analysisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_sentiment_analysis to fetch.
     */
    where: parks_sentiment_analysisWhereUniqueInput
  }

  /**
   * parks_sentiment_analysis findFirst
   */
  export type parks_sentiment_analysisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_sentiment_analysis to fetch.
     */
    where?: parks_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_sentiment_analyses to fetch.
     */
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_sentiment_analyses.
     */
    cursor?: parks_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_sentiment_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_sentiment_analyses.
     */
    distinct?: Parks_sentiment_analysisScalarFieldEnum | Parks_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * parks_sentiment_analysis findFirstOrThrow
   */
  export type parks_sentiment_analysisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_sentiment_analysis to fetch.
     */
    where?: parks_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_sentiment_analyses to fetch.
     */
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_sentiment_analyses.
     */
    cursor?: parks_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_sentiment_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_sentiment_analyses.
     */
    distinct?: Parks_sentiment_analysisScalarFieldEnum | Parks_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * parks_sentiment_analysis findMany
   */
  export type parks_sentiment_analysisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_sentiment_analyses to fetch.
     */
    where?: parks_sentiment_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_sentiment_analyses to fetch.
     */
    orderBy?: parks_sentiment_analysisOrderByWithRelationInput | parks_sentiment_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_sentiment_analyses.
     */
    cursor?: parks_sentiment_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_sentiment_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_sentiment_analyses.
     */
    skip?: number
    distinct?: Parks_sentiment_analysisScalarFieldEnum | Parks_sentiment_analysisScalarFieldEnum[]
  }

  /**
   * parks_sentiment_analysis create
   */
  export type parks_sentiment_analysisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_sentiment_analysis.
     */
    data?: XOR<parks_sentiment_analysisCreateInput, parks_sentiment_analysisUncheckedCreateInput>
  }

  /**
   * parks_sentiment_analysis createMany
   */
  export type parks_sentiment_analysisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_sentiment_analyses.
     */
    data: parks_sentiment_analysisCreateManyInput | parks_sentiment_analysisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_sentiment_analysis update
   */
  export type parks_sentiment_analysisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_sentiment_analysis.
     */
    data: XOR<parks_sentiment_analysisUpdateInput, parks_sentiment_analysisUncheckedUpdateInput>
    /**
     * Choose, which parks_sentiment_analysis to update.
     */
    where: parks_sentiment_analysisWhereUniqueInput
  }

  /**
   * parks_sentiment_analysis updateMany
   */
  export type parks_sentiment_analysisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_sentiment_analyses.
     */
    data: XOR<parks_sentiment_analysisUpdateManyMutationInput, parks_sentiment_analysisUncheckedUpdateManyInput>
    /**
     * Filter which parks_sentiment_analyses to update
     */
    where?: parks_sentiment_analysisWhereInput
    /**
     * Limit how many parks_sentiment_analyses to update.
     */
    limit?: number
  }

  /**
   * parks_sentiment_analysis upsert
   */
  export type parks_sentiment_analysisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_sentiment_analysis to update in case it exists.
     */
    where: parks_sentiment_analysisWhereUniqueInput
    /**
     * In case the parks_sentiment_analysis found by the `where` argument doesn't exist, create a new parks_sentiment_analysis with this data.
     */
    create: XOR<parks_sentiment_analysisCreateInput, parks_sentiment_analysisUncheckedCreateInput>
    /**
     * In case the parks_sentiment_analysis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_sentiment_analysisUpdateInput, parks_sentiment_analysisUncheckedUpdateInput>
  }

  /**
   * parks_sentiment_analysis delete
   */
  export type parks_sentiment_analysisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
    /**
     * Filter which parks_sentiment_analysis to delete.
     */
    where: parks_sentiment_analysisWhereUniqueInput
  }

  /**
   * parks_sentiment_analysis deleteMany
   */
  export type parks_sentiment_analysisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_sentiment_analyses to delete
     */
    where?: parks_sentiment_analysisWhereInput
    /**
     * Limit how many parks_sentiment_analyses to delete.
     */
    limit?: number
  }

  /**
   * parks_sentiment_analysis.parks
   */
  export type parks_sentiment_analysis$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_sentiment_analysis.park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras
   */
  export type parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_sentiment_analysis.park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras
   */
  export type parks_sentiment_analysis$park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_sentiment_analysis without action
   */
  export type parks_sentiment_analysisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_sentiment_analysis
     */
    select?: parks_sentiment_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_sentiment_analysis
     */
    omit?: parks_sentiment_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_sentiment_analysisInclude<ExtArgs> | null
  }


  /**
   * Model parks_smoking_detection
   */

  export type AggregateParks_smoking_detection = {
    _count: Parks_smoking_detectionCountAggregateOutputType | null
    _avg: Parks_smoking_detectionAvgAggregateOutputType | null
    _sum: Parks_smoking_detectionSumAggregateOutputType | null
    _min: Parks_smoking_detectionMinAggregateOutputType | null
    _max: Parks_smoking_detectionMaxAggregateOutputType | null
  }

  export type Parks_smoking_detectionAvgAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_smoking_detectionSumAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    camera_Id: number | null
  }

  export type Parks_smoking_detectionMinAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    location: string | null
    camera_Id: number | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    posted_to_intranet_date: Date | null
    posted_to_intranet_time: Date | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    is_employee: boolean | null
    current_status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_smoking_detectionMaxAggregateOutputType = {
    Id: number | null
    park_Id: number | null
    location: string | null
    camera_Id: number | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    posted_to_intranet_date: Date | null
    posted_to_intranet_time: Date | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    is_employee: boolean | null
    current_status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Parks_smoking_detectionCountAggregateOutputType = {
    Id: number
    park_Id: number
    location: number
    camera_Id: number
    occurrence_date: number
    occurrence_time: number
    snap_shot: number
    posted_to_intranet_date: number
    posted_to_intranet_time: number
    detection_Id: number
    detection_date: number
    detection_time: number
    description: number
    is_employee: number
    current_status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Parks_smoking_detectionAvgAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_smoking_detectionSumAggregateInputType = {
    Id?: true
    park_Id?: true
    camera_Id?: true
  }

  export type Parks_smoking_detectionMinAggregateInputType = {
    Id?: true
    park_Id?: true
    location?: true
    camera_Id?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    posted_to_intranet_date?: true
    posted_to_intranet_time?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    is_employee?: true
    current_status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_smoking_detectionMaxAggregateInputType = {
    Id?: true
    park_Id?: true
    location?: true
    camera_Id?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    posted_to_intranet_date?: true
    posted_to_intranet_time?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    is_employee?: true
    current_status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Parks_smoking_detectionCountAggregateInputType = {
    Id?: true
    park_Id?: true
    location?: true
    camera_Id?: true
    occurrence_date?: true
    occurrence_time?: true
    snap_shot?: true
    posted_to_intranet_date?: true
    posted_to_intranet_time?: true
    detection_Id?: true
    detection_date?: true
    detection_time?: true
    description?: true
    is_employee?: true
    current_status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Parks_smoking_detectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_smoking_detection to aggregate.
     */
    where?: parks_smoking_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_smoking_detections to fetch.
     */
    orderBy?: parks_smoking_detectionOrderByWithRelationInput | parks_smoking_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_smoking_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_smoking_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_smoking_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_smoking_detections
    **/
    _count?: true | Parks_smoking_detectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_smoking_detectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_smoking_detectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_smoking_detectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_smoking_detectionMaxAggregateInputType
  }

  export type GetParks_smoking_detectionAggregateType<T extends Parks_smoking_detectionAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_smoking_detection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_smoking_detection[P]>
      : GetScalarType<T[P], AggregateParks_smoking_detection[P]>
  }




  export type parks_smoking_detectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_smoking_detectionWhereInput
    orderBy?: parks_smoking_detectionOrderByWithAggregationInput | parks_smoking_detectionOrderByWithAggregationInput[]
    by: Parks_smoking_detectionScalarFieldEnum[] | Parks_smoking_detectionScalarFieldEnum
    having?: parks_smoking_detectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_smoking_detectionCountAggregateInputType | true
    _avg?: Parks_smoking_detectionAvgAggregateInputType
    _sum?: Parks_smoking_detectionSumAggregateInputType
    _min?: Parks_smoking_detectionMinAggregateInputType
    _max?: Parks_smoking_detectionMaxAggregateInputType
  }

  export type Parks_smoking_detectionGroupByOutputType = {
    Id: number
    park_Id: number | null
    location: string | null
    camera_Id: number | null
    occurrence_date: Date | null
    occurrence_time: Date | null
    snap_shot: string | null
    posted_to_intranet_date: Date | null
    posted_to_intranet_time: Date | null
    detection_Id: string | null
    detection_date: Date | null
    detection_time: Date | null
    description: string | null
    is_employee: boolean | null
    current_status: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Parks_smoking_detectionCountAggregateOutputType | null
    _avg: Parks_smoking_detectionAvgAggregateOutputType | null
    _sum: Parks_smoking_detectionSumAggregateOutputType | null
    _min: Parks_smoking_detectionMinAggregateOutputType | null
    _max: Parks_smoking_detectionMaxAggregateOutputType | null
  }

  type GetParks_smoking_detectionGroupByPayload<T extends parks_smoking_detectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_smoking_detectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_smoking_detectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_smoking_detectionGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_smoking_detectionGroupByOutputType[P]>
        }
      >
    >


  export type parks_smoking_detectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    park_Id?: boolean
    location?: boolean
    camera_Id?: boolean
    occurrence_date?: boolean
    occurrence_time?: boolean
    snap_shot?: boolean
    posted_to_intranet_date?: boolean
    posted_to_intranet_time?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    is_employee?: boolean
    current_status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parks?: boolean | parks_smoking_detection$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_smoking_detection$park_camerasArgs<ExtArgs>
    intranet_posting_history?: boolean | parks_smoking_detection$intranet_posting_historyArgs<ExtArgs>
    _count?: boolean | Parks_smoking_detectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parks_smoking_detection"]>



  export type parks_smoking_detectionSelectScalar = {
    Id?: boolean
    park_Id?: boolean
    location?: boolean
    camera_Id?: boolean
    occurrence_date?: boolean
    occurrence_time?: boolean
    snap_shot?: boolean
    posted_to_intranet_date?: boolean
    posted_to_intranet_time?: boolean
    detection_Id?: boolean
    detection_date?: boolean
    detection_time?: boolean
    description?: boolean
    is_employee?: boolean
    current_status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type parks_smoking_detectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "park_Id" | "location" | "camera_Id" | "occurrence_date" | "occurrence_time" | "snap_shot" | "posted_to_intranet_date" | "posted_to_intranet_time" | "detection_Id" | "detection_date" | "detection_time" | "description" | "is_employee" | "current_status" | "createdAt" | "updatedAt", ExtArgs["result"]["parks_smoking_detection"]>
  export type parks_smoking_detectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parks?: boolean | parks_smoking_detection$parksArgs<ExtArgs>
    park_cameras?: boolean | parks_smoking_detection$park_camerasArgs<ExtArgs>
    intranet_posting_history?: boolean | parks_smoking_detection$intranet_posting_historyArgs<ExtArgs>
    _count?: boolean | Parks_smoking_detectionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $parks_smoking_detectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_smoking_detection"
    objects: {
      parks: Prisma.$parksPayload<ExtArgs> | null
      park_cameras: Prisma.$park_camerasPayload<ExtArgs> | null
      intranet_posting_history: Prisma.$intranet_posting_historyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      park_Id: number | null
      location: string | null
      camera_Id: number | null
      occurrence_date: Date | null
      occurrence_time: Date | null
      snap_shot: string | null
      posted_to_intranet_date: Date | null
      posted_to_intranet_time: Date | null
      detection_Id: string | null
      detection_date: Date | null
      detection_time: Date | null
      description: string | null
      is_employee: boolean | null
      current_status: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["parks_smoking_detection"]>
    composites: {}
  }

  type parks_smoking_detectionGetPayload<S extends boolean | null | undefined | parks_smoking_detectionDefaultArgs> = $Result.GetResult<Prisma.$parks_smoking_detectionPayload, S>

  type parks_smoking_detectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_smoking_detectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_smoking_detectionCountAggregateInputType | true
    }

  export interface parks_smoking_detectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_smoking_detection'], meta: { name: 'parks_smoking_detection' } }
    /**
     * Find zero or one Parks_smoking_detection that matches the filter.
     * @param {parks_smoking_detectionFindUniqueArgs} args - Arguments to find a Parks_smoking_detection
     * @example
     * // Get one Parks_smoking_detection
     * const parks_smoking_detection = await prisma.parks_smoking_detection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_smoking_detectionFindUniqueArgs>(args: SelectSubset<T, parks_smoking_detectionFindUniqueArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_smoking_detection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_smoking_detectionFindUniqueOrThrowArgs} args - Arguments to find a Parks_smoking_detection
     * @example
     * // Get one Parks_smoking_detection
     * const parks_smoking_detection = await prisma.parks_smoking_detection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_smoking_detectionFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_smoking_detectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_smoking_detection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_smoking_detectionFindFirstArgs} args - Arguments to find a Parks_smoking_detection
     * @example
     * // Get one Parks_smoking_detection
     * const parks_smoking_detection = await prisma.parks_smoking_detection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_smoking_detectionFindFirstArgs>(args?: SelectSubset<T, parks_smoking_detectionFindFirstArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_smoking_detection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_smoking_detectionFindFirstOrThrowArgs} args - Arguments to find a Parks_smoking_detection
     * @example
     * // Get one Parks_smoking_detection
     * const parks_smoking_detection = await prisma.parks_smoking_detection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_smoking_detectionFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_smoking_detectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_smoking_detections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_smoking_detectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_smoking_detections
     * const parks_smoking_detections = await prisma.parks_smoking_detection.findMany()
     * 
     * // Get first 10 Parks_smoking_detections
     * const parks_smoking_detections = await prisma.parks_smoking_detection.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const parks_smoking_detectionWithIdOnly = await prisma.parks_smoking_detection.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends parks_smoking_detectionFindManyArgs>(args?: SelectSubset<T, parks_smoking_detectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_smoking_detection.
     * @param {parks_smoking_detectionCreateArgs} args - Arguments to create a Parks_smoking_detection.
     * @example
     * // Create one Parks_smoking_detection
     * const Parks_smoking_detection = await prisma.parks_smoking_detection.create({
     *   data: {
     *     // ... data to create a Parks_smoking_detection
     *   }
     * })
     * 
     */
    create<T extends parks_smoking_detectionCreateArgs>(args: SelectSubset<T, parks_smoking_detectionCreateArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_smoking_detections.
     * @param {parks_smoking_detectionCreateManyArgs} args - Arguments to create many Parks_smoking_detections.
     * @example
     * // Create many Parks_smoking_detections
     * const parks_smoking_detection = await prisma.parks_smoking_detection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_smoking_detectionCreateManyArgs>(args?: SelectSubset<T, parks_smoking_detectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_smoking_detection.
     * @param {parks_smoking_detectionDeleteArgs} args - Arguments to delete one Parks_smoking_detection.
     * @example
     * // Delete one Parks_smoking_detection
     * const Parks_smoking_detection = await prisma.parks_smoking_detection.delete({
     *   where: {
     *     // ... filter to delete one Parks_smoking_detection
     *   }
     * })
     * 
     */
    delete<T extends parks_smoking_detectionDeleteArgs>(args: SelectSubset<T, parks_smoking_detectionDeleteArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_smoking_detection.
     * @param {parks_smoking_detectionUpdateArgs} args - Arguments to update one Parks_smoking_detection.
     * @example
     * // Update one Parks_smoking_detection
     * const parks_smoking_detection = await prisma.parks_smoking_detection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_smoking_detectionUpdateArgs>(args: SelectSubset<T, parks_smoking_detectionUpdateArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_smoking_detections.
     * @param {parks_smoking_detectionDeleteManyArgs} args - Arguments to filter Parks_smoking_detections to delete.
     * @example
     * // Delete a few Parks_smoking_detections
     * const { count } = await prisma.parks_smoking_detection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_smoking_detectionDeleteManyArgs>(args?: SelectSubset<T, parks_smoking_detectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_smoking_detections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_smoking_detectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_smoking_detections
     * const parks_smoking_detection = await prisma.parks_smoking_detection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_smoking_detectionUpdateManyArgs>(args: SelectSubset<T, parks_smoking_detectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_smoking_detection.
     * @param {parks_smoking_detectionUpsertArgs} args - Arguments to update or create a Parks_smoking_detection.
     * @example
     * // Update or create a Parks_smoking_detection
     * const parks_smoking_detection = await prisma.parks_smoking_detection.upsert({
     *   create: {
     *     // ... data to create a Parks_smoking_detection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_smoking_detection we want to update
     *   }
     * })
     */
    upsert<T extends parks_smoking_detectionUpsertArgs>(args: SelectSubset<T, parks_smoking_detectionUpsertArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_smoking_detections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_smoking_detectionCountArgs} args - Arguments to filter Parks_smoking_detections to count.
     * @example
     * // Count the number of Parks_smoking_detections
     * const count = await prisma.parks_smoking_detection.count({
     *   where: {
     *     // ... the filter for the Parks_smoking_detections we want to count
     *   }
     * })
    **/
    count<T extends parks_smoking_detectionCountArgs>(
      args?: Subset<T, parks_smoking_detectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_smoking_detectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_smoking_detection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_smoking_detectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_smoking_detectionAggregateArgs>(args: Subset<T, Parks_smoking_detectionAggregateArgs>): Prisma.PrismaPromise<GetParks_smoking_detectionAggregateType<T>>

    /**
     * Group by Parks_smoking_detection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_smoking_detectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_smoking_detectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_smoking_detectionGroupByArgs['orderBy'] }
        : { orderBy?: parks_smoking_detectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_smoking_detectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_smoking_detectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_smoking_detection model
   */
  readonly fields: parks_smoking_detectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_smoking_detection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_smoking_detectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parks<T extends parks_smoking_detection$parksArgs<ExtArgs> = {}>(args?: Subset<T, parks_smoking_detection$parksArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    park_cameras<T extends parks_smoking_detection$park_camerasArgs<ExtArgs> = {}>(args?: Subset<T, parks_smoking_detection$park_camerasArgs<ExtArgs>>): Prisma__park_camerasClient<$Result.GetResult<Prisma.$park_camerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    intranet_posting_history<T extends parks_smoking_detection$intranet_posting_historyArgs<ExtArgs> = {}>(args?: Subset<T, parks_smoking_detection$intranet_posting_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_smoking_detection model
   */
  interface parks_smoking_detectionFieldRefs {
    readonly Id: FieldRef<"parks_smoking_detection", 'Int'>
    readonly park_Id: FieldRef<"parks_smoking_detection", 'Int'>
    readonly location: FieldRef<"parks_smoking_detection", 'String'>
    readonly camera_Id: FieldRef<"parks_smoking_detection", 'Int'>
    readonly occurrence_date: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly occurrence_time: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly snap_shot: FieldRef<"parks_smoking_detection", 'String'>
    readonly posted_to_intranet_date: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly posted_to_intranet_time: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly detection_Id: FieldRef<"parks_smoking_detection", 'String'>
    readonly detection_date: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly detection_time: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly description: FieldRef<"parks_smoking_detection", 'String'>
    readonly is_employee: FieldRef<"parks_smoking_detection", 'Boolean'>
    readonly current_status: FieldRef<"parks_smoking_detection", 'String'>
    readonly createdAt: FieldRef<"parks_smoking_detection", 'DateTime'>
    readonly updatedAt: FieldRef<"parks_smoking_detection", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * parks_smoking_detection findUnique
   */
  export type parks_smoking_detectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_smoking_detection to fetch.
     */
    where: parks_smoking_detectionWhereUniqueInput
  }

  /**
   * parks_smoking_detection findUniqueOrThrow
   */
  export type parks_smoking_detectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_smoking_detection to fetch.
     */
    where: parks_smoking_detectionWhereUniqueInput
  }

  /**
   * parks_smoking_detection findFirst
   */
  export type parks_smoking_detectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_smoking_detection to fetch.
     */
    where?: parks_smoking_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_smoking_detections to fetch.
     */
    orderBy?: parks_smoking_detectionOrderByWithRelationInput | parks_smoking_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_smoking_detections.
     */
    cursor?: parks_smoking_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_smoking_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_smoking_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_smoking_detections.
     */
    distinct?: Parks_smoking_detectionScalarFieldEnum | Parks_smoking_detectionScalarFieldEnum[]
  }

  /**
   * parks_smoking_detection findFirstOrThrow
   */
  export type parks_smoking_detectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_smoking_detection to fetch.
     */
    where?: parks_smoking_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_smoking_detections to fetch.
     */
    orderBy?: parks_smoking_detectionOrderByWithRelationInput | parks_smoking_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_smoking_detections.
     */
    cursor?: parks_smoking_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_smoking_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_smoking_detections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_smoking_detections.
     */
    distinct?: Parks_smoking_detectionScalarFieldEnum | Parks_smoking_detectionScalarFieldEnum[]
  }

  /**
   * parks_smoking_detection findMany
   */
  export type parks_smoking_detectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * Filter, which parks_smoking_detections to fetch.
     */
    where?: parks_smoking_detectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_smoking_detections to fetch.
     */
    orderBy?: parks_smoking_detectionOrderByWithRelationInput | parks_smoking_detectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_smoking_detections.
     */
    cursor?: parks_smoking_detectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_smoking_detections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_smoking_detections.
     */
    skip?: number
    distinct?: Parks_smoking_detectionScalarFieldEnum | Parks_smoking_detectionScalarFieldEnum[]
  }

  /**
   * parks_smoking_detection create
   */
  export type parks_smoking_detectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_smoking_detection.
     */
    data?: XOR<parks_smoking_detectionCreateInput, parks_smoking_detectionUncheckedCreateInput>
  }

  /**
   * parks_smoking_detection createMany
   */
  export type parks_smoking_detectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_smoking_detections.
     */
    data: parks_smoking_detectionCreateManyInput | parks_smoking_detectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_smoking_detection update
   */
  export type parks_smoking_detectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_smoking_detection.
     */
    data: XOR<parks_smoking_detectionUpdateInput, parks_smoking_detectionUncheckedUpdateInput>
    /**
     * Choose, which parks_smoking_detection to update.
     */
    where: parks_smoking_detectionWhereUniqueInput
  }

  /**
   * parks_smoking_detection updateMany
   */
  export type parks_smoking_detectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_smoking_detections.
     */
    data: XOR<parks_smoking_detectionUpdateManyMutationInput, parks_smoking_detectionUncheckedUpdateManyInput>
    /**
     * Filter which parks_smoking_detections to update
     */
    where?: parks_smoking_detectionWhereInput
    /**
     * Limit how many parks_smoking_detections to update.
     */
    limit?: number
  }

  /**
   * parks_smoking_detection upsert
   */
  export type parks_smoking_detectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_smoking_detection to update in case it exists.
     */
    where: parks_smoking_detectionWhereUniqueInput
    /**
     * In case the parks_smoking_detection found by the `where` argument doesn't exist, create a new parks_smoking_detection with this data.
     */
    create: XOR<parks_smoking_detectionCreateInput, parks_smoking_detectionUncheckedCreateInput>
    /**
     * In case the parks_smoking_detection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_smoking_detectionUpdateInput, parks_smoking_detectionUncheckedUpdateInput>
  }

  /**
   * parks_smoking_detection delete
   */
  export type parks_smoking_detectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    /**
     * Filter which parks_smoking_detection to delete.
     */
    where: parks_smoking_detectionWhereUniqueInput
  }

  /**
   * parks_smoking_detection deleteMany
   */
  export type parks_smoking_detectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_smoking_detections to delete
     */
    where?: parks_smoking_detectionWhereInput
    /**
     * Limit how many parks_smoking_detections to delete.
     */
    limit?: number
  }

  /**
   * parks_smoking_detection.parks
   */
  export type parks_smoking_detection$parksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks
     */
    select?: parksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks
     */
    omit?: parksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parksInclude<ExtArgs> | null
    where?: parksWhereInput
  }

  /**
   * parks_smoking_detection.park_cameras
   */
  export type parks_smoking_detection$park_camerasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the park_cameras
     */
    select?: park_camerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the park_cameras
     */
    omit?: park_camerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: park_camerasInclude<ExtArgs> | null
    where?: park_camerasWhereInput
  }

  /**
   * parks_smoking_detection.intranet_posting_history
   */
  export type parks_smoking_detection$intranet_posting_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    where?: intranet_posting_historyWhereInput
    orderBy?: intranet_posting_historyOrderByWithRelationInput | intranet_posting_historyOrderByWithRelationInput[]
    cursor?: intranet_posting_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Intranet_posting_historyScalarFieldEnum | Intranet_posting_historyScalarFieldEnum[]
  }

  /**
   * parks_smoking_detection without action
   */
  export type parks_smoking_detectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
  }


  /**
   * Model intranet_posting_history
   */

  export type AggregateIntranet_posting_history = {
    _count: Intranet_posting_historyCountAggregateOutputType | null
    _avg: Intranet_posting_historyAvgAggregateOutputType | null
    _sum: Intranet_posting_historySumAggregateOutputType | null
    _min: Intranet_posting_historyMinAggregateOutputType | null
    _max: Intranet_posting_historyMaxAggregateOutputType | null
  }

  export type Intranet_posting_historyAvgAggregateOutputType = {
    id: number | null
    smokingDetectionId: number | null
    intrusionDetectionId: number | null
  }

  export type Intranet_posting_historySumAggregateOutputType = {
    id: number | null
    smokingDetectionId: number | null
    intrusionDetectionId: number | null
  }

  export type Intranet_posting_historyMinAggregateOutputType = {
    id: number | null
    smokingDetectionId: number | null
    intrusionDetectionId: number | null
    title: string | null
    intranet_id: string | null
    comments: string | null
    date: Date | null
    time: Date | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
  }

  export type Intranet_posting_historyMaxAggregateOutputType = {
    id: number | null
    smokingDetectionId: number | null
    intrusionDetectionId: number | null
    title: string | null
    intranet_id: string | null
    comments: string | null
    date: Date | null
    time: Date | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
  }

  export type Intranet_posting_historyCountAggregateOutputType = {
    id: number
    smokingDetectionId: number
    intrusionDetectionId: number
    title: number
    intranet_id: number
    comments: number
    date: number
    time: number
    abc1: number
    abc2: number
    abc3: number
    _all: number
  }


  export type Intranet_posting_historyAvgAggregateInputType = {
    id?: true
    smokingDetectionId?: true
    intrusionDetectionId?: true
  }

  export type Intranet_posting_historySumAggregateInputType = {
    id?: true
    smokingDetectionId?: true
    intrusionDetectionId?: true
  }

  export type Intranet_posting_historyMinAggregateInputType = {
    id?: true
    smokingDetectionId?: true
    intrusionDetectionId?: true
    title?: true
    intranet_id?: true
    comments?: true
    date?: true
    time?: true
    abc1?: true
    abc2?: true
    abc3?: true
  }

  export type Intranet_posting_historyMaxAggregateInputType = {
    id?: true
    smokingDetectionId?: true
    intrusionDetectionId?: true
    title?: true
    intranet_id?: true
    comments?: true
    date?: true
    time?: true
    abc1?: true
    abc2?: true
    abc3?: true
  }

  export type Intranet_posting_historyCountAggregateInputType = {
    id?: true
    smokingDetectionId?: true
    intrusionDetectionId?: true
    title?: true
    intranet_id?: true
    comments?: true
    date?: true
    time?: true
    abc1?: true
    abc2?: true
    abc3?: true
    _all?: true
  }

  export type Intranet_posting_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which intranet_posting_history to aggregate.
     */
    where?: intranet_posting_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intranet_posting_histories to fetch.
     */
    orderBy?: intranet_posting_historyOrderByWithRelationInput | intranet_posting_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: intranet_posting_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intranet_posting_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intranet_posting_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned intranet_posting_histories
    **/
    _count?: true | Intranet_posting_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Intranet_posting_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Intranet_posting_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Intranet_posting_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Intranet_posting_historyMaxAggregateInputType
  }

  export type GetIntranet_posting_historyAggregateType<T extends Intranet_posting_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateIntranet_posting_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIntranet_posting_history[P]>
      : GetScalarType<T[P], AggregateIntranet_posting_history[P]>
  }




  export type intranet_posting_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: intranet_posting_historyWhereInput
    orderBy?: intranet_posting_historyOrderByWithAggregationInput | intranet_posting_historyOrderByWithAggregationInput[]
    by: Intranet_posting_historyScalarFieldEnum[] | Intranet_posting_historyScalarFieldEnum
    having?: intranet_posting_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Intranet_posting_historyCountAggregateInputType | true
    _avg?: Intranet_posting_historyAvgAggregateInputType
    _sum?: Intranet_posting_historySumAggregateInputType
    _min?: Intranet_posting_historyMinAggregateInputType
    _max?: Intranet_posting_historyMaxAggregateInputType
  }

  export type Intranet_posting_historyGroupByOutputType = {
    id: number
    smokingDetectionId: number | null
    intrusionDetectionId: number | null
    title: string | null
    intranet_id: string | null
    comments: string | null
    date: Date | null
    time: Date | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
    _count: Intranet_posting_historyCountAggregateOutputType | null
    _avg: Intranet_posting_historyAvgAggregateOutputType | null
    _sum: Intranet_posting_historySumAggregateOutputType | null
    _min: Intranet_posting_historyMinAggregateOutputType | null
    _max: Intranet_posting_historyMaxAggregateOutputType | null
  }

  type GetIntranet_posting_historyGroupByPayload<T extends intranet_posting_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Intranet_posting_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Intranet_posting_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Intranet_posting_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Intranet_posting_historyGroupByOutputType[P]>
        }
      >
    >


  export type intranet_posting_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    smokingDetectionId?: boolean
    intrusionDetectionId?: boolean
    title?: boolean
    intranet_id?: boolean
    comments?: boolean
    date?: boolean
    time?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
    smokingDetection?: boolean | intranet_posting_history$smokingDetectionArgs<ExtArgs>
    intrusionDetection?: boolean | intranet_posting_history$intrusionDetectionArgs<ExtArgs>
  }, ExtArgs["result"]["intranet_posting_history"]>



  export type intranet_posting_historySelectScalar = {
    id?: boolean
    smokingDetectionId?: boolean
    intrusionDetectionId?: boolean
    title?: boolean
    intranet_id?: boolean
    comments?: boolean
    date?: boolean
    time?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
  }

  export type intranet_posting_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "smokingDetectionId" | "intrusionDetectionId" | "title" | "intranet_id" | "comments" | "date" | "time" | "abc1" | "abc2" | "abc3", ExtArgs["result"]["intranet_posting_history"]>
  export type intranet_posting_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    smokingDetection?: boolean | intranet_posting_history$smokingDetectionArgs<ExtArgs>
    intrusionDetection?: boolean | intranet_posting_history$intrusionDetectionArgs<ExtArgs>
  }

  export type $intranet_posting_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "intranet_posting_history"
    objects: {
      smokingDetection: Prisma.$parks_smoking_detectionPayload<ExtArgs> | null
      intrusionDetection: Prisma.$parks_intrusion_detectionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      smokingDetectionId: number | null
      intrusionDetectionId: number | null
      title: string | null
      intranet_id: string | null
      comments: string | null
      date: Date | null
      time: Date | null
      abc1: string | null
      abc2: string | null
      abc3: string | null
    }, ExtArgs["result"]["intranet_posting_history"]>
    composites: {}
  }

  type intranet_posting_historyGetPayload<S extends boolean | null | undefined | intranet_posting_historyDefaultArgs> = $Result.GetResult<Prisma.$intranet_posting_historyPayload, S>

  type intranet_posting_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<intranet_posting_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Intranet_posting_historyCountAggregateInputType | true
    }

  export interface intranet_posting_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['intranet_posting_history'], meta: { name: 'intranet_posting_history' } }
    /**
     * Find zero or one Intranet_posting_history that matches the filter.
     * @param {intranet_posting_historyFindUniqueArgs} args - Arguments to find a Intranet_posting_history
     * @example
     * // Get one Intranet_posting_history
     * const intranet_posting_history = await prisma.intranet_posting_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends intranet_posting_historyFindUniqueArgs>(args: SelectSubset<T, intranet_posting_historyFindUniqueArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Intranet_posting_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {intranet_posting_historyFindUniqueOrThrowArgs} args - Arguments to find a Intranet_posting_history
     * @example
     * // Get one Intranet_posting_history
     * const intranet_posting_history = await prisma.intranet_posting_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends intranet_posting_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, intranet_posting_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Intranet_posting_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intranet_posting_historyFindFirstArgs} args - Arguments to find a Intranet_posting_history
     * @example
     * // Get one Intranet_posting_history
     * const intranet_posting_history = await prisma.intranet_posting_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends intranet_posting_historyFindFirstArgs>(args?: SelectSubset<T, intranet_posting_historyFindFirstArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Intranet_posting_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intranet_posting_historyFindFirstOrThrowArgs} args - Arguments to find a Intranet_posting_history
     * @example
     * // Get one Intranet_posting_history
     * const intranet_posting_history = await prisma.intranet_posting_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends intranet_posting_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, intranet_posting_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Intranet_posting_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intranet_posting_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Intranet_posting_histories
     * const intranet_posting_histories = await prisma.intranet_posting_history.findMany()
     * 
     * // Get first 10 Intranet_posting_histories
     * const intranet_posting_histories = await prisma.intranet_posting_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const intranet_posting_historyWithIdOnly = await prisma.intranet_posting_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends intranet_posting_historyFindManyArgs>(args?: SelectSubset<T, intranet_posting_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Intranet_posting_history.
     * @param {intranet_posting_historyCreateArgs} args - Arguments to create a Intranet_posting_history.
     * @example
     * // Create one Intranet_posting_history
     * const Intranet_posting_history = await prisma.intranet_posting_history.create({
     *   data: {
     *     // ... data to create a Intranet_posting_history
     *   }
     * })
     * 
     */
    create<T extends intranet_posting_historyCreateArgs>(args: SelectSubset<T, intranet_posting_historyCreateArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Intranet_posting_histories.
     * @param {intranet_posting_historyCreateManyArgs} args - Arguments to create many Intranet_posting_histories.
     * @example
     * // Create many Intranet_posting_histories
     * const intranet_posting_history = await prisma.intranet_posting_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends intranet_posting_historyCreateManyArgs>(args?: SelectSubset<T, intranet_posting_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Intranet_posting_history.
     * @param {intranet_posting_historyDeleteArgs} args - Arguments to delete one Intranet_posting_history.
     * @example
     * // Delete one Intranet_posting_history
     * const Intranet_posting_history = await prisma.intranet_posting_history.delete({
     *   where: {
     *     // ... filter to delete one Intranet_posting_history
     *   }
     * })
     * 
     */
    delete<T extends intranet_posting_historyDeleteArgs>(args: SelectSubset<T, intranet_posting_historyDeleteArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Intranet_posting_history.
     * @param {intranet_posting_historyUpdateArgs} args - Arguments to update one Intranet_posting_history.
     * @example
     * // Update one Intranet_posting_history
     * const intranet_posting_history = await prisma.intranet_posting_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends intranet_posting_historyUpdateArgs>(args: SelectSubset<T, intranet_posting_historyUpdateArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Intranet_posting_histories.
     * @param {intranet_posting_historyDeleteManyArgs} args - Arguments to filter Intranet_posting_histories to delete.
     * @example
     * // Delete a few Intranet_posting_histories
     * const { count } = await prisma.intranet_posting_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends intranet_posting_historyDeleteManyArgs>(args?: SelectSubset<T, intranet_posting_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Intranet_posting_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intranet_posting_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Intranet_posting_histories
     * const intranet_posting_history = await prisma.intranet_posting_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends intranet_posting_historyUpdateManyArgs>(args: SelectSubset<T, intranet_posting_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Intranet_posting_history.
     * @param {intranet_posting_historyUpsertArgs} args - Arguments to update or create a Intranet_posting_history.
     * @example
     * // Update or create a Intranet_posting_history
     * const intranet_posting_history = await prisma.intranet_posting_history.upsert({
     *   create: {
     *     // ... data to create a Intranet_posting_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Intranet_posting_history we want to update
     *   }
     * })
     */
    upsert<T extends intranet_posting_historyUpsertArgs>(args: SelectSubset<T, intranet_posting_historyUpsertArgs<ExtArgs>>): Prisma__intranet_posting_historyClient<$Result.GetResult<Prisma.$intranet_posting_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Intranet_posting_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intranet_posting_historyCountArgs} args - Arguments to filter Intranet_posting_histories to count.
     * @example
     * // Count the number of Intranet_posting_histories
     * const count = await prisma.intranet_posting_history.count({
     *   where: {
     *     // ... the filter for the Intranet_posting_histories we want to count
     *   }
     * })
    **/
    count<T extends intranet_posting_historyCountArgs>(
      args?: Subset<T, intranet_posting_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Intranet_posting_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Intranet_posting_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Intranet_posting_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Intranet_posting_historyAggregateArgs>(args: Subset<T, Intranet_posting_historyAggregateArgs>): Prisma.PrismaPromise<GetIntranet_posting_historyAggregateType<T>>

    /**
     * Group by Intranet_posting_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intranet_posting_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends intranet_posting_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: intranet_posting_historyGroupByArgs['orderBy'] }
        : { orderBy?: intranet_posting_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, intranet_posting_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIntranet_posting_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the intranet_posting_history model
   */
  readonly fields: intranet_posting_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for intranet_posting_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__intranet_posting_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    smokingDetection<T extends intranet_posting_history$smokingDetectionArgs<ExtArgs> = {}>(args?: Subset<T, intranet_posting_history$smokingDetectionArgs<ExtArgs>>): Prisma__parks_smoking_detectionClient<$Result.GetResult<Prisma.$parks_smoking_detectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    intrusionDetection<T extends intranet_posting_history$intrusionDetectionArgs<ExtArgs> = {}>(args?: Subset<T, intranet_posting_history$intrusionDetectionArgs<ExtArgs>>): Prisma__parks_intrusion_detectionClient<$Result.GetResult<Prisma.$parks_intrusion_detectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the intranet_posting_history model
   */
  interface intranet_posting_historyFieldRefs {
    readonly id: FieldRef<"intranet_posting_history", 'Int'>
    readonly smokingDetectionId: FieldRef<"intranet_posting_history", 'Int'>
    readonly intrusionDetectionId: FieldRef<"intranet_posting_history", 'Int'>
    readonly title: FieldRef<"intranet_posting_history", 'String'>
    readonly intranet_id: FieldRef<"intranet_posting_history", 'String'>
    readonly comments: FieldRef<"intranet_posting_history", 'String'>
    readonly date: FieldRef<"intranet_posting_history", 'DateTime'>
    readonly time: FieldRef<"intranet_posting_history", 'DateTime'>
    readonly abc1: FieldRef<"intranet_posting_history", 'String'>
    readonly abc2: FieldRef<"intranet_posting_history", 'String'>
    readonly abc3: FieldRef<"intranet_posting_history", 'String'>
  }
    

  // Custom InputTypes
  /**
   * intranet_posting_history findUnique
   */
  export type intranet_posting_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * Filter, which intranet_posting_history to fetch.
     */
    where: intranet_posting_historyWhereUniqueInput
  }

  /**
   * intranet_posting_history findUniqueOrThrow
   */
  export type intranet_posting_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * Filter, which intranet_posting_history to fetch.
     */
    where: intranet_posting_historyWhereUniqueInput
  }

  /**
   * intranet_posting_history findFirst
   */
  export type intranet_posting_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * Filter, which intranet_posting_history to fetch.
     */
    where?: intranet_posting_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intranet_posting_histories to fetch.
     */
    orderBy?: intranet_posting_historyOrderByWithRelationInput | intranet_posting_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for intranet_posting_histories.
     */
    cursor?: intranet_posting_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intranet_posting_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intranet_posting_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of intranet_posting_histories.
     */
    distinct?: Intranet_posting_historyScalarFieldEnum | Intranet_posting_historyScalarFieldEnum[]
  }

  /**
   * intranet_posting_history findFirstOrThrow
   */
  export type intranet_posting_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * Filter, which intranet_posting_history to fetch.
     */
    where?: intranet_posting_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intranet_posting_histories to fetch.
     */
    orderBy?: intranet_posting_historyOrderByWithRelationInput | intranet_posting_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for intranet_posting_histories.
     */
    cursor?: intranet_posting_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intranet_posting_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intranet_posting_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of intranet_posting_histories.
     */
    distinct?: Intranet_posting_historyScalarFieldEnum | Intranet_posting_historyScalarFieldEnum[]
  }

  /**
   * intranet_posting_history findMany
   */
  export type intranet_posting_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * Filter, which intranet_posting_histories to fetch.
     */
    where?: intranet_posting_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intranet_posting_histories to fetch.
     */
    orderBy?: intranet_posting_historyOrderByWithRelationInput | intranet_posting_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing intranet_posting_histories.
     */
    cursor?: intranet_posting_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intranet_posting_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intranet_posting_histories.
     */
    skip?: number
    distinct?: Intranet_posting_historyScalarFieldEnum | Intranet_posting_historyScalarFieldEnum[]
  }

  /**
   * intranet_posting_history create
   */
  export type intranet_posting_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a intranet_posting_history.
     */
    data?: XOR<intranet_posting_historyCreateInput, intranet_posting_historyUncheckedCreateInput>
  }

  /**
   * intranet_posting_history createMany
   */
  export type intranet_posting_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many intranet_posting_histories.
     */
    data: intranet_posting_historyCreateManyInput | intranet_posting_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * intranet_posting_history update
   */
  export type intranet_posting_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a intranet_posting_history.
     */
    data: XOR<intranet_posting_historyUpdateInput, intranet_posting_historyUncheckedUpdateInput>
    /**
     * Choose, which intranet_posting_history to update.
     */
    where: intranet_posting_historyWhereUniqueInput
  }

  /**
   * intranet_posting_history updateMany
   */
  export type intranet_posting_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update intranet_posting_histories.
     */
    data: XOR<intranet_posting_historyUpdateManyMutationInput, intranet_posting_historyUncheckedUpdateManyInput>
    /**
     * Filter which intranet_posting_histories to update
     */
    where?: intranet_posting_historyWhereInput
    /**
     * Limit how many intranet_posting_histories to update.
     */
    limit?: number
  }

  /**
   * intranet_posting_history upsert
   */
  export type intranet_posting_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the intranet_posting_history to update in case it exists.
     */
    where: intranet_posting_historyWhereUniqueInput
    /**
     * In case the intranet_posting_history found by the `where` argument doesn't exist, create a new intranet_posting_history with this data.
     */
    create: XOR<intranet_posting_historyCreateInput, intranet_posting_historyUncheckedCreateInput>
    /**
     * In case the intranet_posting_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<intranet_posting_historyUpdateInput, intranet_posting_historyUncheckedUpdateInput>
  }

  /**
   * intranet_posting_history delete
   */
  export type intranet_posting_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
    /**
     * Filter which intranet_posting_history to delete.
     */
    where: intranet_posting_historyWhereUniqueInput
  }

  /**
   * intranet_posting_history deleteMany
   */
  export type intranet_posting_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which intranet_posting_histories to delete
     */
    where?: intranet_posting_historyWhereInput
    /**
     * Limit how many intranet_posting_histories to delete.
     */
    limit?: number
  }

  /**
   * intranet_posting_history.smokingDetection
   */
  export type intranet_posting_history$smokingDetectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_smoking_detection
     */
    select?: parks_smoking_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_smoking_detection
     */
    omit?: parks_smoking_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_smoking_detectionInclude<ExtArgs> | null
    where?: parks_smoking_detectionWhereInput
  }

  /**
   * intranet_posting_history.intrusionDetection
   */
  export type intranet_posting_history$intrusionDetectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_intrusion_detection
     */
    select?: parks_intrusion_detectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_intrusion_detection
     */
    omit?: parks_intrusion_detectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_intrusion_detectionInclude<ExtArgs> | null
    where?: parks_intrusion_detectionWhereInput
  }

  /**
   * intranet_posting_history without action
   */
  export type intranet_posting_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intranet_posting_history
     */
    select?: intranet_posting_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the intranet_posting_history
     */
    omit?: intranet_posting_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intranet_posting_historyInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    Id: number | null
    role_Id: number | null
  }

  export type UsersSumAggregateOutputType = {
    Id: number | null
    role_Id: number | null
  }

  export type UsersMinAggregateOutputType = {
    Id: number | null
    emp_Id: string | null
    gender: string | null
    emp__eng_name: string | null
    emp__arabic_name: string | null
    country_code: string | null
    phone: string | null
    email: string | null
    dep_eng_name: string | null
    dep_arabic_name: string | null
    desig_eng_name: string | null
    desig_arabic_name: string | null
    unit_eng_name: string | null
    unit_arabic_name: string | null
    committe_eng_name: string | null
    committe_arabic_name: string | null
    ai_engine_access: boolean | null
    last_login: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    role_Id: number | null
  }

  export type UsersMaxAggregateOutputType = {
    Id: number | null
    emp_Id: string | null
    gender: string | null
    emp__eng_name: string | null
    emp__arabic_name: string | null
    country_code: string | null
    phone: string | null
    email: string | null
    dep_eng_name: string | null
    dep_arabic_name: string | null
    desig_eng_name: string | null
    desig_arabic_name: string | null
    unit_eng_name: string | null
    unit_arabic_name: string | null
    committe_eng_name: string | null
    committe_arabic_name: string | null
    ai_engine_access: boolean | null
    last_login: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    role_Id: number | null
  }

  export type UsersCountAggregateOutputType = {
    Id: number
    emp_Id: number
    gender: number
    emp__eng_name: number
    emp__arabic_name: number
    country_code: number
    phone: number
    email: number
    dep_eng_name: number
    dep_arabic_name: number
    desig_eng_name: number
    desig_arabic_name: number
    unit_eng_name: number
    unit_arabic_name: number
    committe_eng_name: number
    committe_arabic_name: number
    ai_engine_access: number
    last_login: number
    createdAt: number
    updatedAt: number
    role_Id: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    Id?: true
    role_Id?: true
  }

  export type UsersSumAggregateInputType = {
    Id?: true
    role_Id?: true
  }

  export type UsersMinAggregateInputType = {
    Id?: true
    emp_Id?: true
    gender?: true
    emp__eng_name?: true
    emp__arabic_name?: true
    country_code?: true
    phone?: true
    email?: true
    dep_eng_name?: true
    dep_arabic_name?: true
    desig_eng_name?: true
    desig_arabic_name?: true
    unit_eng_name?: true
    unit_arabic_name?: true
    committe_eng_name?: true
    committe_arabic_name?: true
    ai_engine_access?: true
    last_login?: true
    createdAt?: true
    updatedAt?: true
    role_Id?: true
  }

  export type UsersMaxAggregateInputType = {
    Id?: true
    emp_Id?: true
    gender?: true
    emp__eng_name?: true
    emp__arabic_name?: true
    country_code?: true
    phone?: true
    email?: true
    dep_eng_name?: true
    dep_arabic_name?: true
    desig_eng_name?: true
    desig_arabic_name?: true
    unit_eng_name?: true
    unit_arabic_name?: true
    committe_eng_name?: true
    committe_arabic_name?: true
    ai_engine_access?: true
    last_login?: true
    createdAt?: true
    updatedAt?: true
    role_Id?: true
  }

  export type UsersCountAggregateInputType = {
    Id?: true
    emp_Id?: true
    gender?: true
    emp__eng_name?: true
    emp__arabic_name?: true
    country_code?: true
    phone?: true
    email?: true
    dep_eng_name?: true
    dep_arabic_name?: true
    desig_eng_name?: true
    desig_arabic_name?: true
    unit_eng_name?: true
    unit_arabic_name?: true
    committe_eng_name?: true
    committe_arabic_name?: true
    ai_engine_access?: true
    last_login?: true
    createdAt?: true
    updatedAt?: true
    role_Id?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    Id: number
    emp_Id: string | null
    gender: string | null
    emp__eng_name: string | null
    emp__arabic_name: string | null
    country_code: string | null
    phone: string | null
    email: string | null
    dep_eng_name: string | null
    dep_arabic_name: string | null
    desig_eng_name: string | null
    desig_arabic_name: string | null
    unit_eng_name: string | null
    unit_arabic_name: string | null
    committe_eng_name: string | null
    committe_arabic_name: string | null
    ai_engine_access: boolean | null
    last_login: Date | null
    createdAt: Date | null
    updatedAt: Date
    role_Id: number | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    emp_Id?: boolean
    gender?: boolean
    emp__eng_name?: boolean
    emp__arabic_name?: boolean
    country_code?: boolean
    phone?: boolean
    email?: boolean
    dep_eng_name?: boolean
    dep_arabic_name?: boolean
    desig_eng_name?: boolean
    desig_arabic_name?: boolean
    unit_eng_name?: boolean
    unit_arabic_name?: boolean
    committe_eng_name?: boolean
    committe_arabic_name?: boolean
    ai_engine_access?: boolean
    last_login?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role_Id?: boolean
    live_stream_favourites?: boolean | users$live_stream_favouritesArgs<ExtArgs>
    parks_attendance?: boolean | users$parks_attendanceArgs<ExtArgs>
    offices_attendance?: boolean | users$offices_attendanceArgs<ExtArgs>
    offices_footfall_analysis?: boolean | users$offices_footfall_analysisArgs<ExtArgs>
    users_roles?: boolean | users$users_rolesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>



  export type usersSelectScalar = {
    Id?: boolean
    emp_Id?: boolean
    gender?: boolean
    emp__eng_name?: boolean
    emp__arabic_name?: boolean
    country_code?: boolean
    phone?: boolean
    email?: boolean
    dep_eng_name?: boolean
    dep_arabic_name?: boolean
    desig_eng_name?: boolean
    desig_arabic_name?: boolean
    unit_eng_name?: boolean
    unit_arabic_name?: boolean
    committe_eng_name?: boolean
    committe_arabic_name?: boolean
    ai_engine_access?: boolean
    last_login?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role_Id?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "emp_Id" | "gender" | "emp__eng_name" | "emp__arabic_name" | "country_code" | "phone" | "email" | "dep_eng_name" | "dep_arabic_name" | "desig_eng_name" | "desig_arabic_name" | "unit_eng_name" | "unit_arabic_name" | "committe_eng_name" | "committe_arabic_name" | "ai_engine_access" | "last_login" | "createdAt" | "updatedAt" | "role_Id", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    live_stream_favourites?: boolean | users$live_stream_favouritesArgs<ExtArgs>
    parks_attendance?: boolean | users$parks_attendanceArgs<ExtArgs>
    offices_attendance?: boolean | users$offices_attendanceArgs<ExtArgs>
    offices_footfall_analysis?: boolean | users$offices_footfall_analysisArgs<ExtArgs>
    users_roles?: boolean | users$users_rolesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      live_stream_favourites: Prisma.$live_stream_favouritesPayload<ExtArgs>[]
      parks_attendance: Prisma.$parks_attendancePayload<ExtArgs>[]
      offices_attendance: Prisma.$offices_attendancePayload<ExtArgs>[]
      offices_footfall_analysis: Prisma.$offices_footfall_analysisPayload<ExtArgs>[]
      users_roles: Prisma.$users_rolesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      emp_Id: string | null
      gender: string | null
      emp__eng_name: string | null
      emp__arabic_name: string | null
      country_code: string | null
      phone: string | null
      email: string | null
      dep_eng_name: string | null
      dep_arabic_name: string | null
      desig_eng_name: string | null
      desig_arabic_name: string | null
      unit_eng_name: string | null
      unit_arabic_name: string | null
      committe_eng_name: string | null
      committe_arabic_name: string | null
      ai_engine_access: boolean | null
      last_login: Date | null
      createdAt: Date | null
      updatedAt: Date
      role_Id: number | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    live_stream_favourites<T extends users$live_stream_favouritesArgs<ExtArgs> = {}>(args?: Subset<T, users$live_stream_favouritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$live_stream_favouritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parks_attendance<T extends users$parks_attendanceArgs<ExtArgs> = {}>(args?: Subset<T, users$parks_attendanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_attendance<T extends users$offices_attendanceArgs<ExtArgs> = {}>(args?: Subset<T, users$offices_attendanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offices_footfall_analysis<T extends users$offices_footfall_analysisArgs<ExtArgs> = {}>(args?: Subset<T, users$offices_footfall_analysisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users_roles<T extends users$users_rolesArgs<ExtArgs> = {}>(args?: Subset<T, users$users_rolesArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly Id: FieldRef<"users", 'Int'>
    readonly emp_Id: FieldRef<"users", 'String'>
    readonly gender: FieldRef<"users", 'String'>
    readonly emp__eng_name: FieldRef<"users", 'String'>
    readonly emp__arabic_name: FieldRef<"users", 'String'>
    readonly country_code: FieldRef<"users", 'String'>
    readonly phone: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly dep_eng_name: FieldRef<"users", 'String'>
    readonly dep_arabic_name: FieldRef<"users", 'String'>
    readonly desig_eng_name: FieldRef<"users", 'String'>
    readonly desig_arabic_name: FieldRef<"users", 'String'>
    readonly unit_eng_name: FieldRef<"users", 'String'>
    readonly unit_arabic_name: FieldRef<"users", 'String'>
    readonly committe_eng_name: FieldRef<"users", 'String'>
    readonly committe_arabic_name: FieldRef<"users", 'String'>
    readonly ai_engine_access: FieldRef<"users", 'Boolean'>
    readonly last_login: FieldRef<"users", 'DateTime'>
    readonly createdAt: FieldRef<"users", 'DateTime'>
    readonly updatedAt: FieldRef<"users", 'DateTime'>
    readonly role_Id: FieldRef<"users", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data?: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.live_stream_favourites
   */
  export type users$live_stream_favouritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the live_stream_favourites
     */
    select?: live_stream_favouritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the live_stream_favourites
     */
    omit?: live_stream_favouritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: live_stream_favouritesInclude<ExtArgs> | null
    where?: live_stream_favouritesWhereInput
    orderBy?: live_stream_favouritesOrderByWithRelationInput | live_stream_favouritesOrderByWithRelationInput[]
    cursor?: live_stream_favouritesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Live_stream_favouritesScalarFieldEnum | Live_stream_favouritesScalarFieldEnum[]
  }

  /**
   * users.parks_attendance
   */
  export type users$parks_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_attendance
     */
    select?: parks_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_attendance
     */
    omit?: parks_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_attendanceInclude<ExtArgs> | null
    where?: parks_attendanceWhereInput
    orderBy?: parks_attendanceOrderByWithRelationInput | parks_attendanceOrderByWithRelationInput[]
    cursor?: parks_attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parks_attendanceScalarFieldEnum | Parks_attendanceScalarFieldEnum[]
  }

  /**
   * users.offices_attendance
   */
  export type users$offices_attendanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_attendance
     */
    select?: offices_attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_attendance
     */
    omit?: offices_attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_attendanceInclude<ExtArgs> | null
    where?: offices_attendanceWhereInput
    orderBy?: offices_attendanceOrderByWithRelationInput | offices_attendanceOrderByWithRelationInput[]
    cursor?: offices_attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_attendanceScalarFieldEnum | Offices_attendanceScalarFieldEnum[]
  }

  /**
   * users.offices_footfall_analysis
   */
  export type users$offices_footfall_analysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    where?: offices_footfall_analysisWhereInput
    orderBy?: offices_footfall_analysisOrderByWithRelationInput | offices_footfall_analysisOrderByWithRelationInput[]
    cursor?: offices_footfall_analysisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Offices_footfall_analysisScalarFieldEnum | Offices_footfall_analysisScalarFieldEnum[]
  }

  /**
   * users.users_roles
   */
  export type users$users_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    where?: users_rolesWhereInput
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model users_permissions
   */

  export type AggregateUsers_permissions = {
    _count: Users_permissionsCountAggregateOutputType | null
    _avg: Users_permissionsAvgAggregateOutputType | null
    _sum: Users_permissionsSumAggregateOutputType | null
    _min: Users_permissionsMinAggregateOutputType | null
    _max: Users_permissionsMaxAggregateOutputType | null
  }

  export type Users_permissionsAvgAggregateOutputType = {
    Id: number | null
    role_Id: number | null
  }

  export type Users_permissionsSumAggregateOutputType = {
    Id: number | null
    role_Id: number | null
  }

  export type Users_permissionsMinAggregateOutputType = {
    Id: number | null
    role_Id: number | null
    dashboard_view: boolean | null
    role_permission_view: boolean | null
    role_permission_add: boolean | null
    role_permission_update: boolean | null
    offices_view: boolean | null
    offices_add: boolean | null
    offices_update: boolean | null
    parks_view: boolean | null
    parks_add: boolean | null
    parks_update: boolean | null
    system_report_view: boolean | null
    alerts_view: boolean | null
    office_attendance_view: boolean | null
    office_attendance_add: boolean | null
    office_attendance_update: boolean | null
    office_footfall_view: boolean | null
    office_footfall_add: boolean | null
    office_footfall_update: boolean | null
    office_sentimental_view: boolean | null
    office_sentimental_add: boolean | null
    office_sentimental_update: boolean | null
    park_attendance_view: boolean | null
    park_attendance_add: boolean | null
    park_attendance_update: boolean | null
    park_footfall_view: boolean | null
    park_footfall_add: boolean | null
    park_footfall_update: boolean | null
    park_sentimental_view: boolean | null
    park_sentimental_add: boolean | null
    park_sentimental_update: boolean | null
    park_irrigation_view: boolean | null
    park_irrigation_add: boolean | null
    park_irrigation_update: boolean | null
    park_landscaping_view: boolean | null
    park_landscaping_add: boolean | null
    park_landscaping_update: boolean | null
    park_litter_detection_view: boolean | null
    park_litter_detection_add: boolean | null
    park_litter_detection_update: boolean | null
    park_intrusion_detection_view: boolean | null
    park_intrusion_detection_add: boolean | null
    park_intrusion_detection_update: boolean | null
    park_smoking_detection_view: boolean | null
    park_smoking_detection_add: boolean | null
    park_smoking_detection_update: boolean | null
    my_account_view: boolean | null
    settings_view: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Users_permissionsMaxAggregateOutputType = {
    Id: number | null
    role_Id: number | null
    dashboard_view: boolean | null
    role_permission_view: boolean | null
    role_permission_add: boolean | null
    role_permission_update: boolean | null
    offices_view: boolean | null
    offices_add: boolean | null
    offices_update: boolean | null
    parks_view: boolean | null
    parks_add: boolean | null
    parks_update: boolean | null
    system_report_view: boolean | null
    alerts_view: boolean | null
    office_attendance_view: boolean | null
    office_attendance_add: boolean | null
    office_attendance_update: boolean | null
    office_footfall_view: boolean | null
    office_footfall_add: boolean | null
    office_footfall_update: boolean | null
    office_sentimental_view: boolean | null
    office_sentimental_add: boolean | null
    office_sentimental_update: boolean | null
    park_attendance_view: boolean | null
    park_attendance_add: boolean | null
    park_attendance_update: boolean | null
    park_footfall_view: boolean | null
    park_footfall_add: boolean | null
    park_footfall_update: boolean | null
    park_sentimental_view: boolean | null
    park_sentimental_add: boolean | null
    park_sentimental_update: boolean | null
    park_irrigation_view: boolean | null
    park_irrigation_add: boolean | null
    park_irrigation_update: boolean | null
    park_landscaping_view: boolean | null
    park_landscaping_add: boolean | null
    park_landscaping_update: boolean | null
    park_litter_detection_view: boolean | null
    park_litter_detection_add: boolean | null
    park_litter_detection_update: boolean | null
    park_intrusion_detection_view: boolean | null
    park_intrusion_detection_add: boolean | null
    park_intrusion_detection_update: boolean | null
    park_smoking_detection_view: boolean | null
    park_smoking_detection_add: boolean | null
    park_smoking_detection_update: boolean | null
    my_account_view: boolean | null
    settings_view: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Users_permissionsCountAggregateOutputType = {
    Id: number
    role_Id: number
    dashboard_view: number
    role_permission_view: number
    role_permission_add: number
    role_permission_update: number
    offices_view: number
    offices_add: number
    offices_update: number
    parks_view: number
    parks_add: number
    parks_update: number
    system_report_view: number
    alerts_view: number
    office_attendance_view: number
    office_attendance_add: number
    office_attendance_update: number
    office_footfall_view: number
    office_footfall_add: number
    office_footfall_update: number
    office_sentimental_view: number
    office_sentimental_add: number
    office_sentimental_update: number
    park_attendance_view: number
    park_attendance_add: number
    park_attendance_update: number
    park_footfall_view: number
    park_footfall_add: number
    park_footfall_update: number
    park_sentimental_view: number
    park_sentimental_add: number
    park_sentimental_update: number
    park_irrigation_view: number
    park_irrigation_add: number
    park_irrigation_update: number
    park_landscaping_view: number
    park_landscaping_add: number
    park_landscaping_update: number
    park_litter_detection_view: number
    park_litter_detection_add: number
    park_litter_detection_update: number
    park_intrusion_detection_view: number
    park_intrusion_detection_add: number
    park_intrusion_detection_update: number
    park_smoking_detection_view: number
    park_smoking_detection_add: number
    park_smoking_detection_update: number
    my_account_view: number
    settings_view: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Users_permissionsAvgAggregateInputType = {
    Id?: true
    role_Id?: true
  }

  export type Users_permissionsSumAggregateInputType = {
    Id?: true
    role_Id?: true
  }

  export type Users_permissionsMinAggregateInputType = {
    Id?: true
    role_Id?: true
    dashboard_view?: true
    role_permission_view?: true
    role_permission_add?: true
    role_permission_update?: true
    offices_view?: true
    offices_add?: true
    offices_update?: true
    parks_view?: true
    parks_add?: true
    parks_update?: true
    system_report_view?: true
    alerts_view?: true
    office_attendance_view?: true
    office_attendance_add?: true
    office_attendance_update?: true
    office_footfall_view?: true
    office_footfall_add?: true
    office_footfall_update?: true
    office_sentimental_view?: true
    office_sentimental_add?: true
    office_sentimental_update?: true
    park_attendance_view?: true
    park_attendance_add?: true
    park_attendance_update?: true
    park_footfall_view?: true
    park_footfall_add?: true
    park_footfall_update?: true
    park_sentimental_view?: true
    park_sentimental_add?: true
    park_sentimental_update?: true
    park_irrigation_view?: true
    park_irrigation_add?: true
    park_irrigation_update?: true
    park_landscaping_view?: true
    park_landscaping_add?: true
    park_landscaping_update?: true
    park_litter_detection_view?: true
    park_litter_detection_add?: true
    park_litter_detection_update?: true
    park_intrusion_detection_view?: true
    park_intrusion_detection_add?: true
    park_intrusion_detection_update?: true
    park_smoking_detection_view?: true
    park_smoking_detection_add?: true
    park_smoking_detection_update?: true
    my_account_view?: true
    settings_view?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Users_permissionsMaxAggregateInputType = {
    Id?: true
    role_Id?: true
    dashboard_view?: true
    role_permission_view?: true
    role_permission_add?: true
    role_permission_update?: true
    offices_view?: true
    offices_add?: true
    offices_update?: true
    parks_view?: true
    parks_add?: true
    parks_update?: true
    system_report_view?: true
    alerts_view?: true
    office_attendance_view?: true
    office_attendance_add?: true
    office_attendance_update?: true
    office_footfall_view?: true
    office_footfall_add?: true
    office_footfall_update?: true
    office_sentimental_view?: true
    office_sentimental_add?: true
    office_sentimental_update?: true
    park_attendance_view?: true
    park_attendance_add?: true
    park_attendance_update?: true
    park_footfall_view?: true
    park_footfall_add?: true
    park_footfall_update?: true
    park_sentimental_view?: true
    park_sentimental_add?: true
    park_sentimental_update?: true
    park_irrigation_view?: true
    park_irrigation_add?: true
    park_irrigation_update?: true
    park_landscaping_view?: true
    park_landscaping_add?: true
    park_landscaping_update?: true
    park_litter_detection_view?: true
    park_litter_detection_add?: true
    park_litter_detection_update?: true
    park_intrusion_detection_view?: true
    park_intrusion_detection_add?: true
    park_intrusion_detection_update?: true
    park_smoking_detection_view?: true
    park_smoking_detection_add?: true
    park_smoking_detection_update?: true
    my_account_view?: true
    settings_view?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Users_permissionsCountAggregateInputType = {
    Id?: true
    role_Id?: true
    dashboard_view?: true
    role_permission_view?: true
    role_permission_add?: true
    role_permission_update?: true
    offices_view?: true
    offices_add?: true
    offices_update?: true
    parks_view?: true
    parks_add?: true
    parks_update?: true
    system_report_view?: true
    alerts_view?: true
    office_attendance_view?: true
    office_attendance_add?: true
    office_attendance_update?: true
    office_footfall_view?: true
    office_footfall_add?: true
    office_footfall_update?: true
    office_sentimental_view?: true
    office_sentimental_add?: true
    office_sentimental_update?: true
    park_attendance_view?: true
    park_attendance_add?: true
    park_attendance_update?: true
    park_footfall_view?: true
    park_footfall_add?: true
    park_footfall_update?: true
    park_sentimental_view?: true
    park_sentimental_add?: true
    park_sentimental_update?: true
    park_irrigation_view?: true
    park_irrigation_add?: true
    park_irrigation_update?: true
    park_landscaping_view?: true
    park_landscaping_add?: true
    park_landscaping_update?: true
    park_litter_detection_view?: true
    park_litter_detection_add?: true
    park_litter_detection_update?: true
    park_intrusion_detection_view?: true
    park_intrusion_detection_add?: true
    park_intrusion_detection_update?: true
    park_smoking_detection_view?: true
    park_smoking_detection_add?: true
    park_smoking_detection_update?: true
    my_account_view?: true
    settings_view?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Users_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users_permissions to aggregate.
     */
    where?: users_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_permissions to fetch.
     */
    orderBy?: users_permissionsOrderByWithRelationInput | users_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: users_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users_permissions
    **/
    _count?: true | Users_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Users_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Users_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Users_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Users_permissionsMaxAggregateInputType
  }

  export type GetUsers_permissionsAggregateType<T extends Users_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers_permissions[P]>
      : GetScalarType<T[P], AggregateUsers_permissions[P]>
  }




  export type users_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: users_permissionsWhereInput
    orderBy?: users_permissionsOrderByWithAggregationInput | users_permissionsOrderByWithAggregationInput[]
    by: Users_permissionsScalarFieldEnum[] | Users_permissionsScalarFieldEnum
    having?: users_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Users_permissionsCountAggregateInputType | true
    _avg?: Users_permissionsAvgAggregateInputType
    _sum?: Users_permissionsSumAggregateInputType
    _min?: Users_permissionsMinAggregateInputType
    _max?: Users_permissionsMaxAggregateInputType
  }

  export type Users_permissionsGroupByOutputType = {
    Id: number
    role_Id: number | null
    dashboard_view: boolean | null
    role_permission_view: boolean | null
    role_permission_add: boolean | null
    role_permission_update: boolean | null
    offices_view: boolean | null
    offices_add: boolean | null
    offices_update: boolean | null
    parks_view: boolean | null
    parks_add: boolean | null
    parks_update: boolean | null
    system_report_view: boolean | null
    alerts_view: boolean | null
    office_attendance_view: boolean | null
    office_attendance_add: boolean | null
    office_attendance_update: boolean | null
    office_footfall_view: boolean | null
    office_footfall_add: boolean | null
    office_footfall_update: boolean | null
    office_sentimental_view: boolean | null
    office_sentimental_add: boolean | null
    office_sentimental_update: boolean | null
    park_attendance_view: boolean | null
    park_attendance_add: boolean | null
    park_attendance_update: boolean | null
    park_footfall_view: boolean | null
    park_footfall_add: boolean | null
    park_footfall_update: boolean | null
    park_sentimental_view: boolean | null
    park_sentimental_add: boolean | null
    park_sentimental_update: boolean | null
    park_irrigation_view: boolean | null
    park_irrigation_add: boolean | null
    park_irrigation_update: boolean | null
    park_landscaping_view: boolean | null
    park_landscaping_add: boolean | null
    park_landscaping_update: boolean | null
    park_litter_detection_view: boolean | null
    park_litter_detection_add: boolean | null
    park_litter_detection_update: boolean | null
    park_intrusion_detection_view: boolean | null
    park_intrusion_detection_add: boolean | null
    park_intrusion_detection_update: boolean | null
    park_smoking_detection_view: boolean | null
    park_smoking_detection_add: boolean | null
    park_smoking_detection_update: boolean | null
    my_account_view: boolean | null
    settings_view: boolean | null
    createdAt: Date | null
    updatedAt: Date
    _count: Users_permissionsCountAggregateOutputType | null
    _avg: Users_permissionsAvgAggregateOutputType | null
    _sum: Users_permissionsSumAggregateOutputType | null
    _min: Users_permissionsMinAggregateOutputType | null
    _max: Users_permissionsMaxAggregateOutputType | null
  }

  type GetUsers_permissionsGroupByPayload<T extends users_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Users_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Users_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Users_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Users_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type users_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    role_Id?: boolean
    dashboard_view?: boolean
    role_permission_view?: boolean
    role_permission_add?: boolean
    role_permission_update?: boolean
    offices_view?: boolean
    offices_add?: boolean
    offices_update?: boolean
    parks_view?: boolean
    parks_add?: boolean
    parks_update?: boolean
    system_report_view?: boolean
    alerts_view?: boolean
    office_attendance_view?: boolean
    office_attendance_add?: boolean
    office_attendance_update?: boolean
    office_footfall_view?: boolean
    office_footfall_add?: boolean
    office_footfall_update?: boolean
    office_sentimental_view?: boolean
    office_sentimental_add?: boolean
    office_sentimental_update?: boolean
    park_attendance_view?: boolean
    park_attendance_add?: boolean
    park_attendance_update?: boolean
    park_footfall_view?: boolean
    park_footfall_add?: boolean
    park_footfall_update?: boolean
    park_sentimental_view?: boolean
    park_sentimental_add?: boolean
    park_sentimental_update?: boolean
    park_irrigation_view?: boolean
    park_irrigation_add?: boolean
    park_irrigation_update?: boolean
    park_landscaping_view?: boolean
    park_landscaping_add?: boolean
    park_landscaping_update?: boolean
    park_litter_detection_view?: boolean
    park_litter_detection_add?: boolean
    park_litter_detection_update?: boolean
    park_intrusion_detection_view?: boolean
    park_intrusion_detection_add?: boolean
    park_intrusion_detection_update?: boolean
    park_smoking_detection_view?: boolean
    park_smoking_detection_add?: boolean
    park_smoking_detection_update?: boolean
    my_account_view?: boolean
    settings_view?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users_roles?: boolean | users_permissions$users_rolesArgs<ExtArgs>
  }, ExtArgs["result"]["users_permissions"]>



  export type users_permissionsSelectScalar = {
    Id?: boolean
    role_Id?: boolean
    dashboard_view?: boolean
    role_permission_view?: boolean
    role_permission_add?: boolean
    role_permission_update?: boolean
    offices_view?: boolean
    offices_add?: boolean
    offices_update?: boolean
    parks_view?: boolean
    parks_add?: boolean
    parks_update?: boolean
    system_report_view?: boolean
    alerts_view?: boolean
    office_attendance_view?: boolean
    office_attendance_add?: boolean
    office_attendance_update?: boolean
    office_footfall_view?: boolean
    office_footfall_add?: boolean
    office_footfall_update?: boolean
    office_sentimental_view?: boolean
    office_sentimental_add?: boolean
    office_sentimental_update?: boolean
    park_attendance_view?: boolean
    park_attendance_add?: boolean
    park_attendance_update?: boolean
    park_footfall_view?: boolean
    park_footfall_add?: boolean
    park_footfall_update?: boolean
    park_sentimental_view?: boolean
    park_sentimental_add?: boolean
    park_sentimental_update?: boolean
    park_irrigation_view?: boolean
    park_irrigation_add?: boolean
    park_irrigation_update?: boolean
    park_landscaping_view?: boolean
    park_landscaping_add?: boolean
    park_landscaping_update?: boolean
    park_litter_detection_view?: boolean
    park_litter_detection_add?: boolean
    park_litter_detection_update?: boolean
    park_intrusion_detection_view?: boolean
    park_intrusion_detection_add?: boolean
    park_intrusion_detection_update?: boolean
    park_smoking_detection_view?: boolean
    park_smoking_detection_add?: boolean
    park_smoking_detection_update?: boolean
    my_account_view?: boolean
    settings_view?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type users_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "role_Id" | "dashboard_view" | "role_permission_view" | "role_permission_add" | "role_permission_update" | "offices_view" | "offices_add" | "offices_update" | "parks_view" | "parks_add" | "parks_update" | "system_report_view" | "alerts_view" | "office_attendance_view" | "office_attendance_add" | "office_attendance_update" | "office_footfall_view" | "office_footfall_add" | "office_footfall_update" | "office_sentimental_view" | "office_sentimental_add" | "office_sentimental_update" | "park_attendance_view" | "park_attendance_add" | "park_attendance_update" | "park_footfall_view" | "park_footfall_add" | "park_footfall_update" | "park_sentimental_view" | "park_sentimental_add" | "park_sentimental_update" | "park_irrigation_view" | "park_irrigation_add" | "park_irrigation_update" | "park_landscaping_view" | "park_landscaping_add" | "park_landscaping_update" | "park_litter_detection_view" | "park_litter_detection_add" | "park_litter_detection_update" | "park_intrusion_detection_view" | "park_intrusion_detection_add" | "park_intrusion_detection_update" | "park_smoking_detection_view" | "park_smoking_detection_add" | "park_smoking_detection_update" | "my_account_view" | "settings_view" | "createdAt" | "updatedAt", ExtArgs["result"]["users_permissions"]>
  export type users_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_roles?: boolean | users_permissions$users_rolesArgs<ExtArgs>
  }

  export type $users_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users_permissions"
    objects: {
      users_roles: Prisma.$users_rolesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      role_Id: number | null
      dashboard_view: boolean | null
      role_permission_view: boolean | null
      role_permission_add: boolean | null
      role_permission_update: boolean | null
      offices_view: boolean | null
      offices_add: boolean | null
      offices_update: boolean | null
      parks_view: boolean | null
      parks_add: boolean | null
      parks_update: boolean | null
      system_report_view: boolean | null
      alerts_view: boolean | null
      office_attendance_view: boolean | null
      office_attendance_add: boolean | null
      office_attendance_update: boolean | null
      office_footfall_view: boolean | null
      office_footfall_add: boolean | null
      office_footfall_update: boolean | null
      office_sentimental_view: boolean | null
      office_sentimental_add: boolean | null
      office_sentimental_update: boolean | null
      park_attendance_view: boolean | null
      park_attendance_add: boolean | null
      park_attendance_update: boolean | null
      park_footfall_view: boolean | null
      park_footfall_add: boolean | null
      park_footfall_update: boolean | null
      park_sentimental_view: boolean | null
      park_sentimental_add: boolean | null
      park_sentimental_update: boolean | null
      park_irrigation_view: boolean | null
      park_irrigation_add: boolean | null
      park_irrigation_update: boolean | null
      park_landscaping_view: boolean | null
      park_landscaping_add: boolean | null
      park_landscaping_update: boolean | null
      park_litter_detection_view: boolean | null
      park_litter_detection_add: boolean | null
      park_litter_detection_update: boolean | null
      park_intrusion_detection_view: boolean | null
      park_intrusion_detection_add: boolean | null
      park_intrusion_detection_update: boolean | null
      park_smoking_detection_view: boolean | null
      park_smoking_detection_add: boolean | null
      park_smoking_detection_update: boolean | null
      my_account_view: boolean | null
      settings_view: boolean | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["users_permissions"]>
    composites: {}
  }

  type users_permissionsGetPayload<S extends boolean | null | undefined | users_permissionsDefaultArgs> = $Result.GetResult<Prisma.$users_permissionsPayload, S>

  type users_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<users_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Users_permissionsCountAggregateInputType | true
    }

  export interface users_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users_permissions'], meta: { name: 'users_permissions' } }
    /**
     * Find zero or one Users_permissions that matches the filter.
     * @param {users_permissionsFindUniqueArgs} args - Arguments to find a Users_permissions
     * @example
     * // Get one Users_permissions
     * const users_permissions = await prisma.users_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends users_permissionsFindUniqueArgs>(args: SelectSubset<T, users_permissionsFindUniqueArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {users_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Users_permissions
     * @example
     * // Get one Users_permissions
     * const users_permissions = await prisma.users_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends users_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, users_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_permissionsFindFirstArgs} args - Arguments to find a Users_permissions
     * @example
     * // Get one Users_permissions
     * const users_permissions = await prisma.users_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends users_permissionsFindFirstArgs>(args?: SelectSubset<T, users_permissionsFindFirstArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_permissionsFindFirstOrThrowArgs} args - Arguments to find a Users_permissions
     * @example
     * // Get one Users_permissions
     * const users_permissions = await prisma.users_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends users_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, users_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users_permissions
     * const users_permissions = await prisma.users_permissions.findMany()
     * 
     * // Get first 10 Users_permissions
     * const users_permissions = await prisma.users_permissions.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const users_permissionsWithIdOnly = await prisma.users_permissions.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends users_permissionsFindManyArgs>(args?: SelectSubset<T, users_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users_permissions.
     * @param {users_permissionsCreateArgs} args - Arguments to create a Users_permissions.
     * @example
     * // Create one Users_permissions
     * const Users_permissions = await prisma.users_permissions.create({
     *   data: {
     *     // ... data to create a Users_permissions
     *   }
     * })
     * 
     */
    create<T extends users_permissionsCreateArgs>(args: SelectSubset<T, users_permissionsCreateArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users_permissions.
     * @param {users_permissionsCreateManyArgs} args - Arguments to create many Users_permissions.
     * @example
     * // Create many Users_permissions
     * const users_permissions = await prisma.users_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends users_permissionsCreateManyArgs>(args?: SelectSubset<T, users_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users_permissions.
     * @param {users_permissionsDeleteArgs} args - Arguments to delete one Users_permissions.
     * @example
     * // Delete one Users_permissions
     * const Users_permissions = await prisma.users_permissions.delete({
     *   where: {
     *     // ... filter to delete one Users_permissions
     *   }
     * })
     * 
     */
    delete<T extends users_permissionsDeleteArgs>(args: SelectSubset<T, users_permissionsDeleteArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users_permissions.
     * @param {users_permissionsUpdateArgs} args - Arguments to update one Users_permissions.
     * @example
     * // Update one Users_permissions
     * const users_permissions = await prisma.users_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends users_permissionsUpdateArgs>(args: SelectSubset<T, users_permissionsUpdateArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users_permissions.
     * @param {users_permissionsDeleteManyArgs} args - Arguments to filter Users_permissions to delete.
     * @example
     * // Delete a few Users_permissions
     * const { count } = await prisma.users_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends users_permissionsDeleteManyArgs>(args?: SelectSubset<T, users_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users_permissions
     * const users_permissions = await prisma.users_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends users_permissionsUpdateManyArgs>(args: SelectSubset<T, users_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users_permissions.
     * @param {users_permissionsUpsertArgs} args - Arguments to update or create a Users_permissions.
     * @example
     * // Update or create a Users_permissions
     * const users_permissions = await prisma.users_permissions.upsert({
     *   create: {
     *     // ... data to create a Users_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users_permissions we want to update
     *   }
     * })
     */
    upsert<T extends users_permissionsUpsertArgs>(args: SelectSubset<T, users_permissionsUpsertArgs<ExtArgs>>): Prisma__users_permissionsClient<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_permissionsCountArgs} args - Arguments to filter Users_permissions to count.
     * @example
     * // Count the number of Users_permissions
     * const count = await prisma.users_permissions.count({
     *   where: {
     *     // ... the filter for the Users_permissions we want to count
     *   }
     * })
    **/
    count<T extends users_permissionsCountArgs>(
      args?: Subset<T, users_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Users_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Users_permissionsAggregateArgs>(args: Subset<T, Users_permissionsAggregateArgs>): Prisma.PrismaPromise<GetUsers_permissionsAggregateType<T>>

    /**
     * Group by Users_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends users_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: users_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: users_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, users_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsers_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users_permissions model
   */
  readonly fields: users_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__users_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_roles<T extends users_permissions$users_rolesArgs<ExtArgs> = {}>(args?: Subset<T, users_permissions$users_rolesArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users_permissions model
   */
  interface users_permissionsFieldRefs {
    readonly Id: FieldRef<"users_permissions", 'Int'>
    readonly role_Id: FieldRef<"users_permissions", 'Int'>
    readonly dashboard_view: FieldRef<"users_permissions", 'Boolean'>
    readonly role_permission_view: FieldRef<"users_permissions", 'Boolean'>
    readonly role_permission_add: FieldRef<"users_permissions", 'Boolean'>
    readonly role_permission_update: FieldRef<"users_permissions", 'Boolean'>
    readonly offices_view: FieldRef<"users_permissions", 'Boolean'>
    readonly offices_add: FieldRef<"users_permissions", 'Boolean'>
    readonly offices_update: FieldRef<"users_permissions", 'Boolean'>
    readonly parks_view: FieldRef<"users_permissions", 'Boolean'>
    readonly parks_add: FieldRef<"users_permissions", 'Boolean'>
    readonly parks_update: FieldRef<"users_permissions", 'Boolean'>
    readonly system_report_view: FieldRef<"users_permissions", 'Boolean'>
    readonly alerts_view: FieldRef<"users_permissions", 'Boolean'>
    readonly office_attendance_view: FieldRef<"users_permissions", 'Boolean'>
    readonly office_attendance_add: FieldRef<"users_permissions", 'Boolean'>
    readonly office_attendance_update: FieldRef<"users_permissions", 'Boolean'>
    readonly office_footfall_view: FieldRef<"users_permissions", 'Boolean'>
    readonly office_footfall_add: FieldRef<"users_permissions", 'Boolean'>
    readonly office_footfall_update: FieldRef<"users_permissions", 'Boolean'>
    readonly office_sentimental_view: FieldRef<"users_permissions", 'Boolean'>
    readonly office_sentimental_add: FieldRef<"users_permissions", 'Boolean'>
    readonly office_sentimental_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_attendance_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_attendance_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_attendance_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_footfall_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_footfall_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_footfall_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_sentimental_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_sentimental_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_sentimental_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_irrigation_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_irrigation_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_irrigation_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_landscaping_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_landscaping_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_landscaping_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_litter_detection_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_litter_detection_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_litter_detection_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_intrusion_detection_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_intrusion_detection_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_intrusion_detection_update: FieldRef<"users_permissions", 'Boolean'>
    readonly park_smoking_detection_view: FieldRef<"users_permissions", 'Boolean'>
    readonly park_smoking_detection_add: FieldRef<"users_permissions", 'Boolean'>
    readonly park_smoking_detection_update: FieldRef<"users_permissions", 'Boolean'>
    readonly my_account_view: FieldRef<"users_permissions", 'Boolean'>
    readonly settings_view: FieldRef<"users_permissions", 'Boolean'>
    readonly createdAt: FieldRef<"users_permissions", 'DateTime'>
    readonly updatedAt: FieldRef<"users_permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users_permissions findUnique
   */
  export type users_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which users_permissions to fetch.
     */
    where: users_permissionsWhereUniqueInput
  }

  /**
   * users_permissions findUniqueOrThrow
   */
  export type users_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which users_permissions to fetch.
     */
    where: users_permissionsWhereUniqueInput
  }

  /**
   * users_permissions findFirst
   */
  export type users_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which users_permissions to fetch.
     */
    where?: users_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_permissions to fetch.
     */
    orderBy?: users_permissionsOrderByWithRelationInput | users_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_permissions.
     */
    cursor?: users_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_permissions.
     */
    distinct?: Users_permissionsScalarFieldEnum | Users_permissionsScalarFieldEnum[]
  }

  /**
   * users_permissions findFirstOrThrow
   */
  export type users_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which users_permissions to fetch.
     */
    where?: users_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_permissions to fetch.
     */
    orderBy?: users_permissionsOrderByWithRelationInput | users_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_permissions.
     */
    cursor?: users_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_permissions.
     */
    distinct?: Users_permissionsScalarFieldEnum | Users_permissionsScalarFieldEnum[]
  }

  /**
   * users_permissions findMany
   */
  export type users_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which users_permissions to fetch.
     */
    where?: users_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_permissions to fetch.
     */
    orderBy?: users_permissionsOrderByWithRelationInput | users_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users_permissions.
     */
    cursor?: users_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_permissions.
     */
    skip?: number
    distinct?: Users_permissionsScalarFieldEnum | Users_permissionsScalarFieldEnum[]
  }

  /**
   * users_permissions create
   */
  export type users_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a users_permissions.
     */
    data?: XOR<users_permissionsCreateInput, users_permissionsUncheckedCreateInput>
  }

  /**
   * users_permissions createMany
   */
  export type users_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users_permissions.
     */
    data: users_permissionsCreateManyInput | users_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users_permissions update
   */
  export type users_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a users_permissions.
     */
    data: XOR<users_permissionsUpdateInput, users_permissionsUncheckedUpdateInput>
    /**
     * Choose, which users_permissions to update.
     */
    where: users_permissionsWhereUniqueInput
  }

  /**
   * users_permissions updateMany
   */
  export type users_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users_permissions.
     */
    data: XOR<users_permissionsUpdateManyMutationInput, users_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which users_permissions to update
     */
    where?: users_permissionsWhereInput
    /**
     * Limit how many users_permissions to update.
     */
    limit?: number
  }

  /**
   * users_permissions upsert
   */
  export type users_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the users_permissions to update in case it exists.
     */
    where: users_permissionsWhereUniqueInput
    /**
     * In case the users_permissions found by the `where` argument doesn't exist, create a new users_permissions with this data.
     */
    create: XOR<users_permissionsCreateInput, users_permissionsUncheckedCreateInput>
    /**
     * In case the users_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<users_permissionsUpdateInput, users_permissionsUncheckedUpdateInput>
  }

  /**
   * users_permissions delete
   */
  export type users_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    /**
     * Filter which users_permissions to delete.
     */
    where: users_permissionsWhereUniqueInput
  }

  /**
   * users_permissions deleteMany
   */
  export type users_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users_permissions to delete
     */
    where?: users_permissionsWhereInput
    /**
     * Limit how many users_permissions to delete.
     */
    limit?: number
  }

  /**
   * users_permissions.users_roles
   */
  export type users_permissions$users_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    where?: users_rolesWhereInput
  }

  /**
   * users_permissions without action
   */
  export type users_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model users_roles
   */

  export type AggregateUsers_roles = {
    _count: Users_rolesCountAggregateOutputType | null
    _avg: Users_rolesAvgAggregateOutputType | null
    _sum: Users_rolesSumAggregateOutputType | null
    _min: Users_rolesMinAggregateOutputType | null
    _max: Users_rolesMaxAggregateOutputType | null
  }

  export type Users_rolesAvgAggregateOutputType = {
    Id: number | null
  }

  export type Users_rolesSumAggregateOutputType = {
    Id: number | null
  }

  export type Users_rolesMinAggregateOutputType = {
    Id: number | null
    role_name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Users_rolesMaxAggregateOutputType = {
    Id: number | null
    role_name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Users_rolesCountAggregateOutputType = {
    Id: number
    role_name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Users_rolesAvgAggregateInputType = {
    Id?: true
  }

  export type Users_rolesSumAggregateInputType = {
    Id?: true
  }

  export type Users_rolesMinAggregateInputType = {
    Id?: true
    role_name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Users_rolesMaxAggregateInputType = {
    Id?: true
    role_name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Users_rolesCountAggregateInputType = {
    Id?: true
    role_name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Users_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users_roles to aggregate.
     */
    where?: users_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_roles to fetch.
     */
    orderBy?: users_rolesOrderByWithRelationInput | users_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: users_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users_roles
    **/
    _count?: true | Users_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Users_rolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Users_rolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Users_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Users_rolesMaxAggregateInputType
  }

  export type GetUsers_rolesAggregateType<T extends Users_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers_roles[P]>
      : GetScalarType<T[P], AggregateUsers_roles[P]>
  }




  export type users_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: users_rolesWhereInput
    orderBy?: users_rolesOrderByWithAggregationInput | users_rolesOrderByWithAggregationInput[]
    by: Users_rolesScalarFieldEnum[] | Users_rolesScalarFieldEnum
    having?: users_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Users_rolesCountAggregateInputType | true
    _avg?: Users_rolesAvgAggregateInputType
    _sum?: Users_rolesSumAggregateInputType
    _min?: Users_rolesMinAggregateInputType
    _max?: Users_rolesMaxAggregateInputType
  }

  export type Users_rolesGroupByOutputType = {
    Id: number
    role_name: string | null
    createdAt: Date | null
    updatedAt: Date
    _count: Users_rolesCountAggregateOutputType | null
    _avg: Users_rolesAvgAggregateOutputType | null
    _sum: Users_rolesSumAggregateOutputType | null
    _min: Users_rolesMinAggregateOutputType | null
    _max: Users_rolesMaxAggregateOutputType | null
  }

  type GetUsers_rolesGroupByPayload<T extends users_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Users_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Users_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Users_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], Users_rolesGroupByOutputType[P]>
        }
      >
    >


  export type users_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    role_name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | users_roles$usersArgs<ExtArgs>
    users_permissions?: boolean | users_roles$users_permissionsArgs<ExtArgs>
    _count?: boolean | Users_rolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users_roles"]>



  export type users_rolesSelectScalar = {
    Id?: boolean
    role_name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type users_rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "role_name" | "createdAt" | "updatedAt", ExtArgs["result"]["users_roles"]>
  export type users_rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | users_roles$usersArgs<ExtArgs>
    users_permissions?: boolean | users_roles$users_permissionsArgs<ExtArgs>
    _count?: boolean | Users_rolesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $users_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users_roles"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>[]
      users_permissions: Prisma.$users_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      role_name: string | null
      createdAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["users_roles"]>
    composites: {}
  }

  type users_rolesGetPayload<S extends boolean | null | undefined | users_rolesDefaultArgs> = $Result.GetResult<Prisma.$users_rolesPayload, S>

  type users_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<users_rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Users_rolesCountAggregateInputType | true
    }

  export interface users_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users_roles'], meta: { name: 'users_roles' } }
    /**
     * Find zero or one Users_roles that matches the filter.
     * @param {users_rolesFindUniqueArgs} args - Arguments to find a Users_roles
     * @example
     * // Get one Users_roles
     * const users_roles = await prisma.users_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends users_rolesFindUniqueArgs>(args: SelectSubset<T, users_rolesFindUniqueArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users_roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {users_rolesFindUniqueOrThrowArgs} args - Arguments to find a Users_roles
     * @example
     * // Get one Users_roles
     * const users_roles = await prisma.users_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends users_rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, users_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_rolesFindFirstArgs} args - Arguments to find a Users_roles
     * @example
     * // Get one Users_roles
     * const users_roles = await prisma.users_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends users_rolesFindFirstArgs>(args?: SelectSubset<T, users_rolesFindFirstArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_rolesFindFirstOrThrowArgs} args - Arguments to find a Users_roles
     * @example
     * // Get one Users_roles
     * const users_roles = await prisma.users_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends users_rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, users_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users_roles
     * const users_roles = await prisma.users_roles.findMany()
     * 
     * // Get first 10 Users_roles
     * const users_roles = await prisma.users_roles.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const users_rolesWithIdOnly = await prisma.users_roles.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends users_rolesFindManyArgs>(args?: SelectSubset<T, users_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users_roles.
     * @param {users_rolesCreateArgs} args - Arguments to create a Users_roles.
     * @example
     * // Create one Users_roles
     * const Users_roles = await prisma.users_roles.create({
     *   data: {
     *     // ... data to create a Users_roles
     *   }
     * })
     * 
     */
    create<T extends users_rolesCreateArgs>(args: SelectSubset<T, users_rolesCreateArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users_roles.
     * @param {users_rolesCreateManyArgs} args - Arguments to create many Users_roles.
     * @example
     * // Create many Users_roles
     * const users_roles = await prisma.users_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends users_rolesCreateManyArgs>(args?: SelectSubset<T, users_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users_roles.
     * @param {users_rolesDeleteArgs} args - Arguments to delete one Users_roles.
     * @example
     * // Delete one Users_roles
     * const Users_roles = await prisma.users_roles.delete({
     *   where: {
     *     // ... filter to delete one Users_roles
     *   }
     * })
     * 
     */
    delete<T extends users_rolesDeleteArgs>(args: SelectSubset<T, users_rolesDeleteArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users_roles.
     * @param {users_rolesUpdateArgs} args - Arguments to update one Users_roles.
     * @example
     * // Update one Users_roles
     * const users_roles = await prisma.users_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends users_rolesUpdateArgs>(args: SelectSubset<T, users_rolesUpdateArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users_roles.
     * @param {users_rolesDeleteManyArgs} args - Arguments to filter Users_roles to delete.
     * @example
     * // Delete a few Users_roles
     * const { count } = await prisma.users_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends users_rolesDeleteManyArgs>(args?: SelectSubset<T, users_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users_roles
     * const users_roles = await prisma.users_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends users_rolesUpdateManyArgs>(args: SelectSubset<T, users_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users_roles.
     * @param {users_rolesUpsertArgs} args - Arguments to update or create a Users_roles.
     * @example
     * // Update or create a Users_roles
     * const users_roles = await prisma.users_roles.upsert({
     *   create: {
     *     // ... data to create a Users_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users_roles we want to update
     *   }
     * })
     */
    upsert<T extends users_rolesUpsertArgs>(args: SelectSubset<T, users_rolesUpsertArgs<ExtArgs>>): Prisma__users_rolesClient<$Result.GetResult<Prisma.$users_rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_rolesCountArgs} args - Arguments to filter Users_roles to count.
     * @example
     * // Count the number of Users_roles
     * const count = await prisma.users_roles.count({
     *   where: {
     *     // ... the filter for the Users_roles we want to count
     *   }
     * })
    **/
    count<T extends users_rolesCountArgs>(
      args?: Subset<T, users_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Users_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Users_rolesAggregateArgs>(args: Subset<T, Users_rolesAggregateArgs>): Prisma.PrismaPromise<GetUsers_rolesAggregateType<T>>

    /**
     * Group by Users_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends users_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: users_rolesGroupByArgs['orderBy'] }
        : { orderBy?: users_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, users_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsers_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users_roles model
   */
  readonly fields: users_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__users_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends users_roles$usersArgs<ExtArgs> = {}>(args?: Subset<T, users_roles$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users_permissions<T extends users_roles$users_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, users_roles$users_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$users_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users_roles model
   */
  interface users_rolesFieldRefs {
    readonly Id: FieldRef<"users_roles", 'Int'>
    readonly role_name: FieldRef<"users_roles", 'String'>
    readonly createdAt: FieldRef<"users_roles", 'DateTime'>
    readonly updatedAt: FieldRef<"users_roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users_roles findUnique
   */
  export type users_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * Filter, which users_roles to fetch.
     */
    where: users_rolesWhereUniqueInput
  }

  /**
   * users_roles findUniqueOrThrow
   */
  export type users_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * Filter, which users_roles to fetch.
     */
    where: users_rolesWhereUniqueInput
  }

  /**
   * users_roles findFirst
   */
  export type users_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * Filter, which users_roles to fetch.
     */
    where?: users_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_roles to fetch.
     */
    orderBy?: users_rolesOrderByWithRelationInput | users_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_roles.
     */
    cursor?: users_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_roles.
     */
    distinct?: Users_rolesScalarFieldEnum | Users_rolesScalarFieldEnum[]
  }

  /**
   * users_roles findFirstOrThrow
   */
  export type users_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * Filter, which users_roles to fetch.
     */
    where?: users_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_roles to fetch.
     */
    orderBy?: users_rolesOrderByWithRelationInput | users_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_roles.
     */
    cursor?: users_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_roles.
     */
    distinct?: Users_rolesScalarFieldEnum | Users_rolesScalarFieldEnum[]
  }

  /**
   * users_roles findMany
   */
  export type users_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * Filter, which users_roles to fetch.
     */
    where?: users_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_roles to fetch.
     */
    orderBy?: users_rolesOrderByWithRelationInput | users_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users_roles.
     */
    cursor?: users_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_roles.
     */
    skip?: number
    distinct?: Users_rolesScalarFieldEnum | Users_rolesScalarFieldEnum[]
  }

  /**
   * users_roles create
   */
  export type users_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a users_roles.
     */
    data?: XOR<users_rolesCreateInput, users_rolesUncheckedCreateInput>
  }

  /**
   * users_roles createMany
   */
  export type users_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users_roles.
     */
    data: users_rolesCreateManyInput | users_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users_roles update
   */
  export type users_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a users_roles.
     */
    data: XOR<users_rolesUpdateInput, users_rolesUncheckedUpdateInput>
    /**
     * Choose, which users_roles to update.
     */
    where: users_rolesWhereUniqueInput
  }

  /**
   * users_roles updateMany
   */
  export type users_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users_roles.
     */
    data: XOR<users_rolesUpdateManyMutationInput, users_rolesUncheckedUpdateManyInput>
    /**
     * Filter which users_roles to update
     */
    where?: users_rolesWhereInput
    /**
     * Limit how many users_roles to update.
     */
    limit?: number
  }

  /**
   * users_roles upsert
   */
  export type users_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the users_roles to update in case it exists.
     */
    where: users_rolesWhereUniqueInput
    /**
     * In case the users_roles found by the `where` argument doesn't exist, create a new users_roles with this data.
     */
    create: XOR<users_rolesCreateInput, users_rolesUncheckedCreateInput>
    /**
     * In case the users_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<users_rolesUpdateInput, users_rolesUncheckedUpdateInput>
  }

  /**
   * users_roles delete
   */
  export type users_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
    /**
     * Filter which users_roles to delete.
     */
    where: users_rolesWhereUniqueInput
  }

  /**
   * users_roles deleteMany
   */
  export type users_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users_roles to delete
     */
    where?: users_rolesWhereInput
    /**
     * Limit how many users_roles to delete.
     */
    limit?: number
  }

  /**
   * users_roles.users
   */
  export type users_roles$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users_roles.users_permissions
   */
  export type users_roles$users_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_permissions
     */
    select?: users_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_permissions
     */
    omit?: users_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_permissionsInclude<ExtArgs> | null
    where?: users_permissionsWhereInput
    orderBy?: users_permissionsOrderByWithRelationInput | users_permissionsOrderByWithRelationInput[]
    cursor?: users_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Users_permissionsScalarFieldEnum | Users_permissionsScalarFieldEnum[]
  }

  /**
   * users_roles without action
   */
  export type users_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users_roles
     */
    select?: users_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users_roles
     */
    omit?: users_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: users_rolesInclude<ExtArgs> | null
  }


  /**
   * Model parks_footfall_analysis
   */

  export type AggregateParks_footfall_analysis = {
    _count: Parks_footfall_analysisCountAggregateOutputType | null
    _avg: Parks_footfall_analysisAvgAggregateOutputType | null
    _sum: Parks_footfall_analysisSumAggregateOutputType | null
    _min: Parks_footfall_analysisMinAggregateOutputType | null
    _max: Parks_footfall_analysisMaxAggregateOutputType | null
  }

  export type Parks_footfall_analysisAvgAggregateOutputType = {
    id: number | null
    park_Id: number | null
    person_Id: number | null
  }

  export type Parks_footfall_analysisSumAggregateOutputType = {
    id: number | null
    park_Id: number | null
    person_Id: number | null
  }

  export type Parks_footfall_analysisMinAggregateOutputType = {
    id: number | null
    park_Id: number | null
    detection_Id: string | null
    person_Id: number | null
    gender: string | null
    is_child: boolean | null
    time: Date | null
    detected_camera_Id: string | null
    detected_camera_name: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
  }

  export type Parks_footfall_analysisMaxAggregateOutputType = {
    id: number | null
    park_Id: number | null
    detection_Id: string | null
    person_Id: number | null
    gender: string | null
    is_child: boolean | null
    time: Date | null
    detected_camera_Id: string | null
    detected_camera_name: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
  }

  export type Parks_footfall_analysisCountAggregateOutputType = {
    id: number
    park_Id: number
    detection_Id: number
    person_Id: number
    gender: number
    is_child: number
    time: number
    detected_camera_Id: number
    detected_camera_name: number
    abc1: number
    abc2: number
    abc3: number
    _all: number
  }


  export type Parks_footfall_analysisAvgAggregateInputType = {
    id?: true
    park_Id?: true
    person_Id?: true
  }

  export type Parks_footfall_analysisSumAggregateInputType = {
    id?: true
    park_Id?: true
    person_Id?: true
  }

  export type Parks_footfall_analysisMinAggregateInputType = {
    id?: true
    park_Id?: true
    detection_Id?: true
    person_Id?: true
    gender?: true
    is_child?: true
    time?: true
    detected_camera_Id?: true
    detected_camera_name?: true
    abc1?: true
    abc2?: true
    abc3?: true
  }

  export type Parks_footfall_analysisMaxAggregateInputType = {
    id?: true
    park_Id?: true
    detection_Id?: true
    person_Id?: true
    gender?: true
    is_child?: true
    time?: true
    detected_camera_Id?: true
    detected_camera_name?: true
    abc1?: true
    abc2?: true
    abc3?: true
  }

  export type Parks_footfall_analysisCountAggregateInputType = {
    id?: true
    park_Id?: true
    detection_Id?: true
    person_Id?: true
    gender?: true
    is_child?: true
    time?: true
    detected_camera_Id?: true
    detected_camera_name?: true
    abc1?: true
    abc2?: true
    abc3?: true
    _all?: true
  }

  export type Parks_footfall_analysisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_footfall_analysis to aggregate.
     */
    where?: parks_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_footfall_analyses to fetch.
     */
    orderBy?: parks_footfall_analysisOrderByWithRelationInput | parks_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parks_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_footfall_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parks_footfall_analyses
    **/
    _count?: true | Parks_footfall_analysisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parks_footfall_analysisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parks_footfall_analysisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parks_footfall_analysisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parks_footfall_analysisMaxAggregateInputType
  }

  export type GetParks_footfall_analysisAggregateType<T extends Parks_footfall_analysisAggregateArgs> = {
        [P in keyof T & keyof AggregateParks_footfall_analysis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParks_footfall_analysis[P]>
      : GetScalarType<T[P], AggregateParks_footfall_analysis[P]>
  }




  export type parks_footfall_analysisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parks_footfall_analysisWhereInput
    orderBy?: parks_footfall_analysisOrderByWithAggregationInput | parks_footfall_analysisOrderByWithAggregationInput[]
    by: Parks_footfall_analysisScalarFieldEnum[] | Parks_footfall_analysisScalarFieldEnum
    having?: parks_footfall_analysisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parks_footfall_analysisCountAggregateInputType | true
    _avg?: Parks_footfall_analysisAvgAggregateInputType
    _sum?: Parks_footfall_analysisSumAggregateInputType
    _min?: Parks_footfall_analysisMinAggregateInputType
    _max?: Parks_footfall_analysisMaxAggregateInputType
  }

  export type Parks_footfall_analysisGroupByOutputType = {
    id: number
    park_Id: number
    detection_Id: string
    person_Id: number
    gender: string | null
    is_child: boolean
    time: Date
    detected_camera_Id: string
    detected_camera_name: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
    _count: Parks_footfall_analysisCountAggregateOutputType | null
    _avg: Parks_footfall_analysisAvgAggregateOutputType | null
    _sum: Parks_footfall_analysisSumAggregateOutputType | null
    _min: Parks_footfall_analysisMinAggregateOutputType | null
    _max: Parks_footfall_analysisMaxAggregateOutputType | null
  }

  type GetParks_footfall_analysisGroupByPayload<T extends parks_footfall_analysisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parks_footfall_analysisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parks_footfall_analysisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parks_footfall_analysisGroupByOutputType[P]>
            : GetScalarType<T[P], Parks_footfall_analysisGroupByOutputType[P]>
        }
      >
    >


  export type parks_footfall_analysisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    park_Id?: boolean
    detection_Id?: boolean
    person_Id?: boolean
    gender?: boolean
    is_child?: boolean
    time?: boolean
    detected_camera_Id?: boolean
    detected_camera_name?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
    park?: boolean | parksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parks_footfall_analysis"]>



  export type parks_footfall_analysisSelectScalar = {
    id?: boolean
    park_Id?: boolean
    detection_Id?: boolean
    person_Id?: boolean
    gender?: boolean
    is_child?: boolean
    time?: boolean
    detected_camera_Id?: boolean
    detected_camera_name?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
  }

  export type parks_footfall_analysisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "park_Id" | "detection_Id" | "person_Id" | "gender" | "is_child" | "time" | "detected_camera_Id" | "detected_camera_name" | "abc1" | "abc2" | "abc3", ExtArgs["result"]["parks_footfall_analysis"]>
  export type parks_footfall_analysisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    park?: boolean | parksDefaultArgs<ExtArgs>
  }

  export type $parks_footfall_analysisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parks_footfall_analysis"
    objects: {
      park: Prisma.$parksPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      park_Id: number
      detection_Id: string
      person_Id: number
      gender: string | null
      is_child: boolean
      time: Date
      detected_camera_Id: string
      detected_camera_name: string | null
      abc1: string | null
      abc2: string | null
      abc3: string | null
    }, ExtArgs["result"]["parks_footfall_analysis"]>
    composites: {}
  }

  type parks_footfall_analysisGetPayload<S extends boolean | null | undefined | parks_footfall_analysisDefaultArgs> = $Result.GetResult<Prisma.$parks_footfall_analysisPayload, S>

  type parks_footfall_analysisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<parks_footfall_analysisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Parks_footfall_analysisCountAggregateInputType | true
    }

  export interface parks_footfall_analysisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parks_footfall_analysis'], meta: { name: 'parks_footfall_analysis' } }
    /**
     * Find zero or one Parks_footfall_analysis that matches the filter.
     * @param {parks_footfall_analysisFindUniqueArgs} args - Arguments to find a Parks_footfall_analysis
     * @example
     * // Get one Parks_footfall_analysis
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends parks_footfall_analysisFindUniqueArgs>(args: SelectSubset<T, parks_footfall_analysisFindUniqueArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Parks_footfall_analysis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {parks_footfall_analysisFindUniqueOrThrowArgs} args - Arguments to find a Parks_footfall_analysis
     * @example
     * // Get one Parks_footfall_analysis
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends parks_footfall_analysisFindUniqueOrThrowArgs>(args: SelectSubset<T, parks_footfall_analysisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_footfall_analysis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_footfall_analysisFindFirstArgs} args - Arguments to find a Parks_footfall_analysis
     * @example
     * // Get one Parks_footfall_analysis
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends parks_footfall_analysisFindFirstArgs>(args?: SelectSubset<T, parks_footfall_analysisFindFirstArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Parks_footfall_analysis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_footfall_analysisFindFirstOrThrowArgs} args - Arguments to find a Parks_footfall_analysis
     * @example
     * // Get one Parks_footfall_analysis
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends parks_footfall_analysisFindFirstOrThrowArgs>(args?: SelectSubset<T, parks_footfall_analysisFindFirstOrThrowArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Parks_footfall_analyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_footfall_analysisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parks_footfall_analyses
     * const parks_footfall_analyses = await prisma.parks_footfall_analysis.findMany()
     * 
     * // Get first 10 Parks_footfall_analyses
     * const parks_footfall_analyses = await prisma.parks_footfall_analysis.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const parks_footfall_analysisWithIdOnly = await prisma.parks_footfall_analysis.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends parks_footfall_analysisFindManyArgs>(args?: SelectSubset<T, parks_footfall_analysisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Parks_footfall_analysis.
     * @param {parks_footfall_analysisCreateArgs} args - Arguments to create a Parks_footfall_analysis.
     * @example
     * // Create one Parks_footfall_analysis
     * const Parks_footfall_analysis = await prisma.parks_footfall_analysis.create({
     *   data: {
     *     // ... data to create a Parks_footfall_analysis
     *   }
     * })
     * 
     */
    create<T extends parks_footfall_analysisCreateArgs>(args: SelectSubset<T, parks_footfall_analysisCreateArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Parks_footfall_analyses.
     * @param {parks_footfall_analysisCreateManyArgs} args - Arguments to create many Parks_footfall_analyses.
     * @example
     * // Create many Parks_footfall_analyses
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends parks_footfall_analysisCreateManyArgs>(args?: SelectSubset<T, parks_footfall_analysisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parks_footfall_analysis.
     * @param {parks_footfall_analysisDeleteArgs} args - Arguments to delete one Parks_footfall_analysis.
     * @example
     * // Delete one Parks_footfall_analysis
     * const Parks_footfall_analysis = await prisma.parks_footfall_analysis.delete({
     *   where: {
     *     // ... filter to delete one Parks_footfall_analysis
     *   }
     * })
     * 
     */
    delete<T extends parks_footfall_analysisDeleteArgs>(args: SelectSubset<T, parks_footfall_analysisDeleteArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Parks_footfall_analysis.
     * @param {parks_footfall_analysisUpdateArgs} args - Arguments to update one Parks_footfall_analysis.
     * @example
     * // Update one Parks_footfall_analysis
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends parks_footfall_analysisUpdateArgs>(args: SelectSubset<T, parks_footfall_analysisUpdateArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Parks_footfall_analyses.
     * @param {parks_footfall_analysisDeleteManyArgs} args - Arguments to filter Parks_footfall_analyses to delete.
     * @example
     * // Delete a few Parks_footfall_analyses
     * const { count } = await prisma.parks_footfall_analysis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends parks_footfall_analysisDeleteManyArgs>(args?: SelectSubset<T, parks_footfall_analysisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parks_footfall_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_footfall_analysisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parks_footfall_analyses
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends parks_footfall_analysisUpdateManyArgs>(args: SelectSubset<T, parks_footfall_analysisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parks_footfall_analysis.
     * @param {parks_footfall_analysisUpsertArgs} args - Arguments to update or create a Parks_footfall_analysis.
     * @example
     * // Update or create a Parks_footfall_analysis
     * const parks_footfall_analysis = await prisma.parks_footfall_analysis.upsert({
     *   create: {
     *     // ... data to create a Parks_footfall_analysis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parks_footfall_analysis we want to update
     *   }
     * })
     */
    upsert<T extends parks_footfall_analysisUpsertArgs>(args: SelectSubset<T, parks_footfall_analysisUpsertArgs<ExtArgs>>): Prisma__parks_footfall_analysisClient<$Result.GetResult<Prisma.$parks_footfall_analysisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Parks_footfall_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_footfall_analysisCountArgs} args - Arguments to filter Parks_footfall_analyses to count.
     * @example
     * // Count the number of Parks_footfall_analyses
     * const count = await prisma.parks_footfall_analysis.count({
     *   where: {
     *     // ... the filter for the Parks_footfall_analyses we want to count
     *   }
     * })
    **/
    count<T extends parks_footfall_analysisCountArgs>(
      args?: Subset<T, parks_footfall_analysisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parks_footfall_analysisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parks_footfall_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parks_footfall_analysisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parks_footfall_analysisAggregateArgs>(args: Subset<T, Parks_footfall_analysisAggregateArgs>): Prisma.PrismaPromise<GetParks_footfall_analysisAggregateType<T>>

    /**
     * Group by Parks_footfall_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parks_footfall_analysisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parks_footfall_analysisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parks_footfall_analysisGroupByArgs['orderBy'] }
        : { orderBy?: parks_footfall_analysisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parks_footfall_analysisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParks_footfall_analysisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parks_footfall_analysis model
   */
  readonly fields: parks_footfall_analysisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parks_footfall_analysis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parks_footfall_analysisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    park<T extends parksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, parksDefaultArgs<ExtArgs>>): Prisma__parksClient<$Result.GetResult<Prisma.$parksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the parks_footfall_analysis model
   */
  interface parks_footfall_analysisFieldRefs {
    readonly id: FieldRef<"parks_footfall_analysis", 'Int'>
    readonly park_Id: FieldRef<"parks_footfall_analysis", 'Int'>
    readonly detection_Id: FieldRef<"parks_footfall_analysis", 'String'>
    readonly person_Id: FieldRef<"parks_footfall_analysis", 'Int'>
    readonly gender: FieldRef<"parks_footfall_analysis", 'String'>
    readonly is_child: FieldRef<"parks_footfall_analysis", 'Boolean'>
    readonly time: FieldRef<"parks_footfall_analysis", 'DateTime'>
    readonly detected_camera_Id: FieldRef<"parks_footfall_analysis", 'String'>
    readonly detected_camera_name: FieldRef<"parks_footfall_analysis", 'String'>
    readonly abc1: FieldRef<"parks_footfall_analysis", 'String'>
    readonly abc2: FieldRef<"parks_footfall_analysis", 'String'>
    readonly abc3: FieldRef<"parks_footfall_analysis", 'String'>
  }
    

  // Custom InputTypes
  /**
   * parks_footfall_analysis findUnique
   */
  export type parks_footfall_analysisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_footfall_analysis to fetch.
     */
    where: parks_footfall_analysisWhereUniqueInput
  }

  /**
   * parks_footfall_analysis findUniqueOrThrow
   */
  export type parks_footfall_analysisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_footfall_analysis to fetch.
     */
    where: parks_footfall_analysisWhereUniqueInput
  }

  /**
   * parks_footfall_analysis findFirst
   */
  export type parks_footfall_analysisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_footfall_analysis to fetch.
     */
    where?: parks_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_footfall_analyses to fetch.
     */
    orderBy?: parks_footfall_analysisOrderByWithRelationInput | parks_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_footfall_analyses.
     */
    cursor?: parks_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_footfall_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_footfall_analyses.
     */
    distinct?: Parks_footfall_analysisScalarFieldEnum | Parks_footfall_analysisScalarFieldEnum[]
  }

  /**
   * parks_footfall_analysis findFirstOrThrow
   */
  export type parks_footfall_analysisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_footfall_analysis to fetch.
     */
    where?: parks_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_footfall_analyses to fetch.
     */
    orderBy?: parks_footfall_analysisOrderByWithRelationInput | parks_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parks_footfall_analyses.
     */
    cursor?: parks_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_footfall_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parks_footfall_analyses.
     */
    distinct?: Parks_footfall_analysisScalarFieldEnum | Parks_footfall_analysisScalarFieldEnum[]
  }

  /**
   * parks_footfall_analysis findMany
   */
  export type parks_footfall_analysisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which parks_footfall_analyses to fetch.
     */
    where?: parks_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parks_footfall_analyses to fetch.
     */
    orderBy?: parks_footfall_analysisOrderByWithRelationInput | parks_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parks_footfall_analyses.
     */
    cursor?: parks_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parks_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parks_footfall_analyses.
     */
    skip?: number
    distinct?: Parks_footfall_analysisScalarFieldEnum | Parks_footfall_analysisScalarFieldEnum[]
  }

  /**
   * parks_footfall_analysis create
   */
  export type parks_footfall_analysisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * The data needed to create a parks_footfall_analysis.
     */
    data: XOR<parks_footfall_analysisCreateInput, parks_footfall_analysisUncheckedCreateInput>
  }

  /**
   * parks_footfall_analysis createMany
   */
  export type parks_footfall_analysisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parks_footfall_analyses.
     */
    data: parks_footfall_analysisCreateManyInput | parks_footfall_analysisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * parks_footfall_analysis update
   */
  export type parks_footfall_analysisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * The data needed to update a parks_footfall_analysis.
     */
    data: XOR<parks_footfall_analysisUpdateInput, parks_footfall_analysisUncheckedUpdateInput>
    /**
     * Choose, which parks_footfall_analysis to update.
     */
    where: parks_footfall_analysisWhereUniqueInput
  }

  /**
   * parks_footfall_analysis updateMany
   */
  export type parks_footfall_analysisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parks_footfall_analyses.
     */
    data: XOR<parks_footfall_analysisUpdateManyMutationInput, parks_footfall_analysisUncheckedUpdateManyInput>
    /**
     * Filter which parks_footfall_analyses to update
     */
    where?: parks_footfall_analysisWhereInput
    /**
     * Limit how many parks_footfall_analyses to update.
     */
    limit?: number
  }

  /**
   * parks_footfall_analysis upsert
   */
  export type parks_footfall_analysisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * The filter to search for the parks_footfall_analysis to update in case it exists.
     */
    where: parks_footfall_analysisWhereUniqueInput
    /**
     * In case the parks_footfall_analysis found by the `where` argument doesn't exist, create a new parks_footfall_analysis with this data.
     */
    create: XOR<parks_footfall_analysisCreateInput, parks_footfall_analysisUncheckedCreateInput>
    /**
     * In case the parks_footfall_analysis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parks_footfall_analysisUpdateInput, parks_footfall_analysisUncheckedUpdateInput>
  }

  /**
   * parks_footfall_analysis delete
   */
  export type parks_footfall_analysisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter which parks_footfall_analysis to delete.
     */
    where: parks_footfall_analysisWhereUniqueInput
  }

  /**
   * parks_footfall_analysis deleteMany
   */
  export type parks_footfall_analysisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parks_footfall_analyses to delete
     */
    where?: parks_footfall_analysisWhereInput
    /**
     * Limit how many parks_footfall_analyses to delete.
     */
    limit?: number
  }

  /**
   * parks_footfall_analysis without action
   */
  export type parks_footfall_analysisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parks_footfall_analysis
     */
    select?: parks_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the parks_footfall_analysis
     */
    omit?: parks_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: parks_footfall_analysisInclude<ExtArgs> | null
  }


  /**
   * Model offices_footfall_analysis
   */

  export type AggregateOffices_footfall_analysis = {
    _count: Offices_footfall_analysisCountAggregateOutputType | null
    _avg: Offices_footfall_analysisAvgAggregateOutputType | null
    _sum: Offices_footfall_analysisSumAggregateOutputType | null
    _min: Offices_footfall_analysisMinAggregateOutputType | null
    _max: Offices_footfall_analysisMaxAggregateOutputType | null
  }

  export type Offices_footfall_analysisAvgAggregateOutputType = {
    id: number | null
    office_Id: number | null
    person_Id: number | null
  }

  export type Offices_footfall_analysisSumAggregateOutputType = {
    id: number | null
    office_Id: number | null
    person_Id: number | null
  }

  export type Offices_footfall_analysisMinAggregateOutputType = {
    id: number | null
    office_Id: number | null
    detection_Id: string | null
    person_Id: number | null
    gender: string | null
    is_child: boolean | null
    time: Date | null
    detected_camera_Id: string | null
    detected_camera_name: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
  }

  export type Offices_footfall_analysisMaxAggregateOutputType = {
    id: number | null
    office_Id: number | null
    detection_Id: string | null
    person_Id: number | null
    gender: string | null
    is_child: boolean | null
    time: Date | null
    detected_camera_Id: string | null
    detected_camera_name: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
  }

  export type Offices_footfall_analysisCountAggregateOutputType = {
    id: number
    office_Id: number
    detection_Id: number
    person_Id: number
    gender: number
    is_child: number
    time: number
    detected_camera_Id: number
    detected_camera_name: number
    abc1: number
    abc2: number
    abc3: number
    _all: number
  }


  export type Offices_footfall_analysisAvgAggregateInputType = {
    id?: true
    office_Id?: true
    person_Id?: true
  }

  export type Offices_footfall_analysisSumAggregateInputType = {
    id?: true
    office_Id?: true
    person_Id?: true
  }

  export type Offices_footfall_analysisMinAggregateInputType = {
    id?: true
    office_Id?: true
    detection_Id?: true
    person_Id?: true
    gender?: true
    is_child?: true
    time?: true
    detected_camera_Id?: true
    detected_camera_name?: true
    abc1?: true
    abc2?: true
    abc3?: true
  }

  export type Offices_footfall_analysisMaxAggregateInputType = {
    id?: true
    office_Id?: true
    detection_Id?: true
    person_Id?: true
    gender?: true
    is_child?: true
    time?: true
    detected_camera_Id?: true
    detected_camera_name?: true
    abc1?: true
    abc2?: true
    abc3?: true
  }

  export type Offices_footfall_analysisCountAggregateInputType = {
    id?: true
    office_Id?: true
    detection_Id?: true
    person_Id?: true
    gender?: true
    is_child?: true
    time?: true
    detected_camera_Id?: true
    detected_camera_name?: true
    abc1?: true
    abc2?: true
    abc3?: true
    _all?: true
  }

  export type Offices_footfall_analysisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_footfall_analysis to aggregate.
     */
    where?: offices_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_footfall_analyses to fetch.
     */
    orderBy?: offices_footfall_analysisOrderByWithRelationInput | offices_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offices_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_footfall_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offices_footfall_analyses
    **/
    _count?: true | Offices_footfall_analysisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Offices_footfall_analysisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Offices_footfall_analysisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Offices_footfall_analysisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Offices_footfall_analysisMaxAggregateInputType
  }

  export type GetOffices_footfall_analysisAggregateType<T extends Offices_footfall_analysisAggregateArgs> = {
        [P in keyof T & keyof AggregateOffices_footfall_analysis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffices_footfall_analysis[P]>
      : GetScalarType<T[P], AggregateOffices_footfall_analysis[P]>
  }




  export type offices_footfall_analysisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offices_footfall_analysisWhereInput
    orderBy?: offices_footfall_analysisOrderByWithAggregationInput | offices_footfall_analysisOrderByWithAggregationInput[]
    by: Offices_footfall_analysisScalarFieldEnum[] | Offices_footfall_analysisScalarFieldEnum
    having?: offices_footfall_analysisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Offices_footfall_analysisCountAggregateInputType | true
    _avg?: Offices_footfall_analysisAvgAggregateInputType
    _sum?: Offices_footfall_analysisSumAggregateInputType
    _min?: Offices_footfall_analysisMinAggregateInputType
    _max?: Offices_footfall_analysisMaxAggregateInputType
  }

  export type Offices_footfall_analysisGroupByOutputType = {
    id: number
    office_Id: number
    detection_Id: string
    person_Id: number
    gender: string | null
    is_child: boolean
    time: Date
    detected_camera_Id: string
    detected_camera_name: string | null
    abc1: string | null
    abc2: string | null
    abc3: string | null
    _count: Offices_footfall_analysisCountAggregateOutputType | null
    _avg: Offices_footfall_analysisAvgAggregateOutputType | null
    _sum: Offices_footfall_analysisSumAggregateOutputType | null
    _min: Offices_footfall_analysisMinAggregateOutputType | null
    _max: Offices_footfall_analysisMaxAggregateOutputType | null
  }

  type GetOffices_footfall_analysisGroupByPayload<T extends offices_footfall_analysisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Offices_footfall_analysisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Offices_footfall_analysisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Offices_footfall_analysisGroupByOutputType[P]>
            : GetScalarType<T[P], Offices_footfall_analysisGroupByOutputType[P]>
        }
      >
    >


  export type offices_footfall_analysisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    office_Id?: boolean
    detection_Id?: boolean
    person_Id?: boolean
    gender?: boolean
    is_child?: boolean
    time?: boolean
    detected_camera_Id?: boolean
    detected_camera_name?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
    office?: boolean | officesDefaultArgs<ExtArgs>
    person?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offices_footfall_analysis"]>



  export type offices_footfall_analysisSelectScalar = {
    id?: boolean
    office_Id?: boolean
    detection_Id?: boolean
    person_Id?: boolean
    gender?: boolean
    is_child?: boolean
    time?: boolean
    detected_camera_Id?: boolean
    detected_camera_name?: boolean
    abc1?: boolean
    abc2?: boolean
    abc3?: boolean
  }

  export type offices_footfall_analysisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "office_Id" | "detection_Id" | "person_Id" | "gender" | "is_child" | "time" | "detected_camera_Id" | "detected_camera_name" | "abc1" | "abc2" | "abc3", ExtArgs["result"]["offices_footfall_analysis"]>
  export type offices_footfall_analysisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    office?: boolean | officesDefaultArgs<ExtArgs>
    person?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $offices_footfall_analysisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offices_footfall_analysis"
    objects: {
      office: Prisma.$officesPayload<ExtArgs>
      person: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      office_Id: number
      detection_Id: string
      person_Id: number
      gender: string | null
      is_child: boolean
      time: Date
      detected_camera_Id: string
      detected_camera_name: string | null
      abc1: string | null
      abc2: string | null
      abc3: string | null
    }, ExtArgs["result"]["offices_footfall_analysis"]>
    composites: {}
  }

  type offices_footfall_analysisGetPayload<S extends boolean | null | undefined | offices_footfall_analysisDefaultArgs> = $Result.GetResult<Prisma.$offices_footfall_analysisPayload, S>

  type offices_footfall_analysisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<offices_footfall_analysisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Offices_footfall_analysisCountAggregateInputType | true
    }

  export interface offices_footfall_analysisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offices_footfall_analysis'], meta: { name: 'offices_footfall_analysis' } }
    /**
     * Find zero or one Offices_footfall_analysis that matches the filter.
     * @param {offices_footfall_analysisFindUniqueArgs} args - Arguments to find a Offices_footfall_analysis
     * @example
     * // Get one Offices_footfall_analysis
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends offices_footfall_analysisFindUniqueArgs>(args: SelectSubset<T, offices_footfall_analysisFindUniqueArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offices_footfall_analysis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {offices_footfall_analysisFindUniqueOrThrowArgs} args - Arguments to find a Offices_footfall_analysis
     * @example
     * // Get one Offices_footfall_analysis
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends offices_footfall_analysisFindUniqueOrThrowArgs>(args: SelectSubset<T, offices_footfall_analysisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_footfall_analysis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_footfall_analysisFindFirstArgs} args - Arguments to find a Offices_footfall_analysis
     * @example
     * // Get one Offices_footfall_analysis
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends offices_footfall_analysisFindFirstArgs>(args?: SelectSubset<T, offices_footfall_analysisFindFirstArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offices_footfall_analysis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_footfall_analysisFindFirstOrThrowArgs} args - Arguments to find a Offices_footfall_analysis
     * @example
     * // Get one Offices_footfall_analysis
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends offices_footfall_analysisFindFirstOrThrowArgs>(args?: SelectSubset<T, offices_footfall_analysisFindFirstOrThrowArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offices_footfall_analyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_footfall_analysisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offices_footfall_analyses
     * const offices_footfall_analyses = await prisma.offices_footfall_analysis.findMany()
     * 
     * // Get first 10 Offices_footfall_analyses
     * const offices_footfall_analyses = await prisma.offices_footfall_analysis.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const offices_footfall_analysisWithIdOnly = await prisma.offices_footfall_analysis.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends offices_footfall_analysisFindManyArgs>(args?: SelectSubset<T, offices_footfall_analysisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offices_footfall_analysis.
     * @param {offices_footfall_analysisCreateArgs} args - Arguments to create a Offices_footfall_analysis.
     * @example
     * // Create one Offices_footfall_analysis
     * const Offices_footfall_analysis = await prisma.offices_footfall_analysis.create({
     *   data: {
     *     // ... data to create a Offices_footfall_analysis
     *   }
     * })
     * 
     */
    create<T extends offices_footfall_analysisCreateArgs>(args: SelectSubset<T, offices_footfall_analysisCreateArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offices_footfall_analyses.
     * @param {offices_footfall_analysisCreateManyArgs} args - Arguments to create many Offices_footfall_analyses.
     * @example
     * // Create many Offices_footfall_analyses
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends offices_footfall_analysisCreateManyArgs>(args?: SelectSubset<T, offices_footfall_analysisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Offices_footfall_analysis.
     * @param {offices_footfall_analysisDeleteArgs} args - Arguments to delete one Offices_footfall_analysis.
     * @example
     * // Delete one Offices_footfall_analysis
     * const Offices_footfall_analysis = await prisma.offices_footfall_analysis.delete({
     *   where: {
     *     // ... filter to delete one Offices_footfall_analysis
     *   }
     * })
     * 
     */
    delete<T extends offices_footfall_analysisDeleteArgs>(args: SelectSubset<T, offices_footfall_analysisDeleteArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offices_footfall_analysis.
     * @param {offices_footfall_analysisUpdateArgs} args - Arguments to update one Offices_footfall_analysis.
     * @example
     * // Update one Offices_footfall_analysis
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends offices_footfall_analysisUpdateArgs>(args: SelectSubset<T, offices_footfall_analysisUpdateArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offices_footfall_analyses.
     * @param {offices_footfall_analysisDeleteManyArgs} args - Arguments to filter Offices_footfall_analyses to delete.
     * @example
     * // Delete a few Offices_footfall_analyses
     * const { count } = await prisma.offices_footfall_analysis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends offices_footfall_analysisDeleteManyArgs>(args?: SelectSubset<T, offices_footfall_analysisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offices_footfall_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_footfall_analysisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offices_footfall_analyses
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends offices_footfall_analysisUpdateManyArgs>(args: SelectSubset<T, offices_footfall_analysisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Offices_footfall_analysis.
     * @param {offices_footfall_analysisUpsertArgs} args - Arguments to update or create a Offices_footfall_analysis.
     * @example
     * // Update or create a Offices_footfall_analysis
     * const offices_footfall_analysis = await prisma.offices_footfall_analysis.upsert({
     *   create: {
     *     // ... data to create a Offices_footfall_analysis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offices_footfall_analysis we want to update
     *   }
     * })
     */
    upsert<T extends offices_footfall_analysisUpsertArgs>(args: SelectSubset<T, offices_footfall_analysisUpsertArgs<ExtArgs>>): Prisma__offices_footfall_analysisClient<$Result.GetResult<Prisma.$offices_footfall_analysisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offices_footfall_analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_footfall_analysisCountArgs} args - Arguments to filter Offices_footfall_analyses to count.
     * @example
     * // Count the number of Offices_footfall_analyses
     * const count = await prisma.offices_footfall_analysis.count({
     *   where: {
     *     // ... the filter for the Offices_footfall_analyses we want to count
     *   }
     * })
    **/
    count<T extends offices_footfall_analysisCountArgs>(
      args?: Subset<T, offices_footfall_analysisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Offices_footfall_analysisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offices_footfall_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Offices_footfall_analysisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Offices_footfall_analysisAggregateArgs>(args: Subset<T, Offices_footfall_analysisAggregateArgs>): Prisma.PrismaPromise<GetOffices_footfall_analysisAggregateType<T>>

    /**
     * Group by Offices_footfall_analysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offices_footfall_analysisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offices_footfall_analysisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offices_footfall_analysisGroupByArgs['orderBy'] }
        : { orderBy?: offices_footfall_analysisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offices_footfall_analysisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffices_footfall_analysisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offices_footfall_analysis model
   */
  readonly fields: offices_footfall_analysisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offices_footfall_analysis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offices_footfall_analysisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    office<T extends officesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, officesDefaultArgs<ExtArgs>>): Prisma__officesClient<$Result.GetResult<Prisma.$officesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    person<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offices_footfall_analysis model
   */
  interface offices_footfall_analysisFieldRefs {
    readonly id: FieldRef<"offices_footfall_analysis", 'Int'>
    readonly office_Id: FieldRef<"offices_footfall_analysis", 'Int'>
    readonly detection_Id: FieldRef<"offices_footfall_analysis", 'String'>
    readonly person_Id: FieldRef<"offices_footfall_analysis", 'Int'>
    readonly gender: FieldRef<"offices_footfall_analysis", 'String'>
    readonly is_child: FieldRef<"offices_footfall_analysis", 'Boolean'>
    readonly time: FieldRef<"offices_footfall_analysis", 'DateTime'>
    readonly detected_camera_Id: FieldRef<"offices_footfall_analysis", 'String'>
    readonly detected_camera_name: FieldRef<"offices_footfall_analysis", 'String'>
    readonly abc1: FieldRef<"offices_footfall_analysis", 'String'>
    readonly abc2: FieldRef<"offices_footfall_analysis", 'String'>
    readonly abc3: FieldRef<"offices_footfall_analysis", 'String'>
  }
    

  // Custom InputTypes
  /**
   * offices_footfall_analysis findUnique
   */
  export type offices_footfall_analysisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_footfall_analysis to fetch.
     */
    where: offices_footfall_analysisWhereUniqueInput
  }

  /**
   * offices_footfall_analysis findUniqueOrThrow
   */
  export type offices_footfall_analysisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_footfall_analysis to fetch.
     */
    where: offices_footfall_analysisWhereUniqueInput
  }

  /**
   * offices_footfall_analysis findFirst
   */
  export type offices_footfall_analysisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_footfall_analysis to fetch.
     */
    where?: offices_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_footfall_analyses to fetch.
     */
    orderBy?: offices_footfall_analysisOrderByWithRelationInput | offices_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_footfall_analyses.
     */
    cursor?: offices_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_footfall_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_footfall_analyses.
     */
    distinct?: Offices_footfall_analysisScalarFieldEnum | Offices_footfall_analysisScalarFieldEnum[]
  }

  /**
   * offices_footfall_analysis findFirstOrThrow
   */
  export type offices_footfall_analysisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_footfall_analysis to fetch.
     */
    where?: offices_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_footfall_analyses to fetch.
     */
    orderBy?: offices_footfall_analysisOrderByWithRelationInput | offices_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offices_footfall_analyses.
     */
    cursor?: offices_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_footfall_analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offices_footfall_analyses.
     */
    distinct?: Offices_footfall_analysisScalarFieldEnum | Offices_footfall_analysisScalarFieldEnum[]
  }

  /**
   * offices_footfall_analysis findMany
   */
  export type offices_footfall_analysisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter, which offices_footfall_analyses to fetch.
     */
    where?: offices_footfall_analysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offices_footfall_analyses to fetch.
     */
    orderBy?: offices_footfall_analysisOrderByWithRelationInput | offices_footfall_analysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offices_footfall_analyses.
     */
    cursor?: offices_footfall_analysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offices_footfall_analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offices_footfall_analyses.
     */
    skip?: number
    distinct?: Offices_footfall_analysisScalarFieldEnum | Offices_footfall_analysisScalarFieldEnum[]
  }

  /**
   * offices_footfall_analysis create
   */
  export type offices_footfall_analysisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * The data needed to create a offices_footfall_analysis.
     */
    data: XOR<offices_footfall_analysisCreateInput, offices_footfall_analysisUncheckedCreateInput>
  }

  /**
   * offices_footfall_analysis createMany
   */
  export type offices_footfall_analysisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offices_footfall_analyses.
     */
    data: offices_footfall_analysisCreateManyInput | offices_footfall_analysisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offices_footfall_analysis update
   */
  export type offices_footfall_analysisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * The data needed to update a offices_footfall_analysis.
     */
    data: XOR<offices_footfall_analysisUpdateInput, offices_footfall_analysisUncheckedUpdateInput>
    /**
     * Choose, which offices_footfall_analysis to update.
     */
    where: offices_footfall_analysisWhereUniqueInput
  }

  /**
   * offices_footfall_analysis updateMany
   */
  export type offices_footfall_analysisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offices_footfall_analyses.
     */
    data: XOR<offices_footfall_analysisUpdateManyMutationInput, offices_footfall_analysisUncheckedUpdateManyInput>
    /**
     * Filter which offices_footfall_analyses to update
     */
    where?: offices_footfall_analysisWhereInput
    /**
     * Limit how many offices_footfall_analyses to update.
     */
    limit?: number
  }

  /**
   * offices_footfall_analysis upsert
   */
  export type offices_footfall_analysisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * The filter to search for the offices_footfall_analysis to update in case it exists.
     */
    where: offices_footfall_analysisWhereUniqueInput
    /**
     * In case the offices_footfall_analysis found by the `where` argument doesn't exist, create a new offices_footfall_analysis with this data.
     */
    create: XOR<offices_footfall_analysisCreateInput, offices_footfall_analysisUncheckedCreateInput>
    /**
     * In case the offices_footfall_analysis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offices_footfall_analysisUpdateInput, offices_footfall_analysisUncheckedUpdateInput>
  }

  /**
   * offices_footfall_analysis delete
   */
  export type offices_footfall_analysisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
    /**
     * Filter which offices_footfall_analysis to delete.
     */
    where: offices_footfall_analysisWhereUniqueInput
  }

  /**
   * offices_footfall_analysis deleteMany
   */
  export type offices_footfall_analysisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offices_footfall_analyses to delete
     */
    where?: offices_footfall_analysisWhereInput
    /**
     * Limit how many offices_footfall_analyses to delete.
     */
    limit?: number
  }

  /**
   * offices_footfall_analysis without action
   */
  export type offices_footfall_analysisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offices_footfall_analysis
     */
    select?: offices_footfall_analysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offices_footfall_analysis
     */
    omit?: offices_footfall_analysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offices_footfall_analysisInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Access_secretScalarFieldEnum: {
    Id: 'Id',
    value: 'value'
  };

  export type Access_secretScalarFieldEnum = (typeof Access_secretScalarFieldEnum)[keyof typeof Access_secretScalarFieldEnum]


  export const Live_stream_favouritesScalarFieldEnum: {
    Id: 'Id',
    emp_Id: 'emp_Id',
    park_camera_Id: 'park_camera_Id',
    office_camera_Id: 'office_camera_Id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Live_stream_favouritesScalarFieldEnum = (typeof Live_stream_favouritesScalarFieldEnum)[keyof typeof Live_stream_favouritesScalarFieldEnum]


  export const Office_streamsScalarFieldEnum: {
    Id: 'Id',
    office_Id: 'office_Id',
    stream_url: 'stream_url',
    stream_api_key: 'stream_api_key',
    stream_path: 'stream_path',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Office_streamsScalarFieldEnum = (typeof Office_streamsScalarFieldEnum)[keyof typeof Office_streamsScalarFieldEnum]


  export const OfficesScalarFieldEnum: {
    Id: 'Id',
    office_Id: 'office_Id',
    office_english_name: 'office_english_name',
    office_arabic_name: 'office_arabic_name',
    image: 'image',
    latitude: 'latitude',
    longitude: 'longitude',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    location: 'location'
  };

  export type OfficesScalarFieldEnum = (typeof OfficesScalarFieldEnum)[keyof typeof OfficesScalarFieldEnum]


  export const Offices_attendanceScalarFieldEnum: {
    Id: 'Id',
    office_Id: 'office_Id',
    person_Id: 'person_Id',
    entry_time: 'entry_time',
    exit_time: 'exit_time',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Offices_attendanceScalarFieldEnum = (typeof Offices_attendanceScalarFieldEnum)[keyof typeof Offices_attendanceScalarFieldEnum]


  export const Offices_camerasScalarFieldEnum: {
    Id: 'Id',
    office_Id: 'office_Id',
    camera_Id: 'camera_Id',
    camera_english_name: 'camera_english_name',
    camera_arabic_name: 'camera_arabic_name',
    latitude: 'latitude',
    longitude: 'longitude',
    ip_address: 'ip_address',
    last_active_date: 'last_active_date',
    last_active_time: 'last_active_time',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    location: 'location',
    attendance: 'attendance',
    footfall: 'footfall',
    sentiment: 'sentiment'
  };

  export type Offices_camerasScalarFieldEnum = (typeof Offices_camerasScalarFieldEnum)[keyof typeof Offices_camerasScalarFieldEnum]


  export const Offices_sentiment_analysisScalarFieldEnum: {
    Id: 'Id',
    office_Id: 'office_Id',
    person_Id: 'person_Id',
    detection_Id: 'detection_Id',
    person_name: 'person_name',
    person_image: 'person_image',
    gender: 'gender',
    check_in_image: 'check_in_image',
    sentiment_of: 'sentiment_of',
    check_in_date: 'check_in_date',
    check_in_time: 'check_in_time',
    check_in_sentiment: 'check_in_sentiment',
    entry_camera_Id: 'entry_camera_Id',
    check_out_date: 'check_out_date',
    check_out_time: 'check_out_time',
    check_out_capture: 'check_out_capture',
    check_out_sentiment: 'check_out_sentiment',
    exit_camera_Id: 'exit_camera_Id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Offices_sentiment_analysisScalarFieldEnum = (typeof Offices_sentiment_analysisScalarFieldEnum)[keyof typeof Offices_sentiment_analysisScalarFieldEnum]


  export const Park_camerasScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    camera_Id: 'camera_Id',
    camera_english_name: 'camera_english_name',
    camera_arabic_name: 'camera_arabic_name',
    latitude: 'latitude',
    longitude: 'longitude',
    ip_address: 'ip_address',
    last_active_date: 'last_active_date',
    last_active_time: 'last_active_time',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    location: 'location',
    attendance: 'attendance',
    footfall: 'footfall',
    sentiment: 'sentiment',
    behaviour: 'behaviour',
    irrigation: 'irrigation',
    landscaping: 'landscaping',
    litter_detection: 'litter_detection',
    smoking_detection: 'smoking_detection',
    intrusion: 'intrusion',
    stream_url: 'stream_url',
    stream_api_key: 'stream_api_key',
    stream_path: 'stream_path',
    password: 'password'
  };

  export type Park_camerasScalarFieldEnum = (typeof Park_camerasScalarFieldEnum)[keyof typeof Park_camerasScalarFieldEnum]


  export const Park_streamsScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    stream_url: 'stream_url',
    stream_api_key: 'stream_api_key',
    stream_path: 'stream_path',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Park_streamsScalarFieldEnum = (typeof Park_streamsScalarFieldEnum)[keyof typeof Park_streamsScalarFieldEnum]


  export const TermsPrivacyScalarFieldEnum: {
    id: 'id',
    terms: 'terms',
    privacyPolicy: 'privacyPolicy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TermsPrivacyScalarFieldEnum = (typeof TermsPrivacyScalarFieldEnum)[keyof typeof TermsPrivacyScalarFieldEnum]


  export const FAQScalarFieldEnum: {
    id: 'id',
    question: 'question',
    answer: 'answer',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FAQScalarFieldEnum = (typeof FAQScalarFieldEnum)[keyof typeof FAQScalarFieldEnum]


  export const Park_zonesScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    zone_Id: 'zone_Id',
    zone_english_name: 'zone_english_name',
    zone_arabic_name: 'zone_arabic_name',
    latitude: 'latitude',
    longitude: 'longitude',
    device_ip: 'device_ip',
    web_api: 'web_api',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    location: 'location'
  };

  export type Park_zonesScalarFieldEnum = (typeof Park_zonesScalarFieldEnum)[keyof typeof Park_zonesScalarFieldEnum]


  export const ParksScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    park_english_name: 'park_english_name',
    park_arabic_name: 'park_arabic_name',
    image: 'image',
    latitude: 'latitude',
    longitude: 'longitude',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    location: 'location'
  };

  export type ParksScalarFieldEnum = (typeof ParksScalarFieldEnum)[keyof typeof ParksScalarFieldEnum]


  export const Parks_attendanceScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    person_Id: 'person_Id',
    entry_time: 'entry_time',
    exit_time: 'exit_time',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_attendanceScalarFieldEnum = (typeof Parks_attendanceScalarFieldEnum)[keyof typeof Parks_attendanceScalarFieldEnum]


  export const Parks_behaviour_alertsScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    person_Id: 'person_Id',
    camera_Id: 'camera_Id',
    detection_Id: 'detection_Id',
    detection_code: 'detection_code',
    detection_date: 'detection_date',
    detection_time: 'detection_time',
    description: 'description',
    detected_behaviour: 'detected_behaviour',
    is_employee: 'is_employee',
    snap_shot: 'snap_shot',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_behaviour_alertsScalarFieldEnum = (typeof Parks_behaviour_alertsScalarFieldEnum)[keyof typeof Parks_behaviour_alertsScalarFieldEnum]


  export const Parks_intrusion_detectionScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    location: 'location',
    camera_Id: 'camera_Id',
    occurrence_date: 'occurrence_date',
    occurrence_time: 'occurrence_time',
    snap_shot: 'snap_shot',
    posted_to_intranet_date: 'posted_to_intranet_date',
    posted_to_intranet_time: 'posted_to_intranet_time',
    detection_Id: 'detection_Id',
    detection_date: 'detection_date',
    detection_time: 'detection_time',
    description: 'description',
    is_employee: 'is_employee',
    current_status: 'current_status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_intrusion_detectionScalarFieldEnum = (typeof Parks_intrusion_detectionScalarFieldEnum)[keyof typeof Parks_intrusion_detectionScalarFieldEnum]


  export const Parks_irrigation_job_historyScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    zone_Id: 'zone_Id',
    job_Id: 'job_Id',
    job_started_at: 'job_started_at',
    job_completed_at: 'job_completed_at',
    job_status: 'job_status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_irrigation_job_historyScalarFieldEnum = (typeof Parks_irrigation_job_historyScalarFieldEnum)[keyof typeof Parks_irrigation_job_historyScalarFieldEnum]


  export const Parks_landscapingScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    case_Id: 'case_Id',
    location: 'location',
    snap_shot: 'snap_shot',
    type: 'type',
    status: 'status',
    detection_Id: 'detection_Id',
    detection_date: 'detection_date',
    detection_time: 'detection_time',
    description: 'description',
    current_status: 'current_status',
    camera_Id: 'camera_Id',
    after_image: 'after_image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_landscapingScalarFieldEnum = (typeof Parks_landscapingScalarFieldEnum)[keyof typeof Parks_landscapingScalarFieldEnum]


  export const Parks_litter_detectionScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    case_Id: 'case_Id',
    location: 'location',
    occurrence_date: 'occurrence_date',
    occurrence_time: 'occurrence_time',
    snap_shot: 'snap_shot',
    status: 'status',
    detection_Id: 'detection_Id',
    detection_date: 'detection_date',
    detection_time: 'detection_time',
    description: 'description',
    current_status: 'current_status',
    camera_Id: 'camera_Id',
    after_image: 'after_image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_litter_detectionScalarFieldEnum = (typeof Parks_litter_detectionScalarFieldEnum)[keyof typeof Parks_litter_detectionScalarFieldEnum]


  export const Ticket_details_tableScalarFieldEnum: {
    id: 'id',
    status: 'status',
    date: 'date',
    time: 'time',
    comments: 'comments',
    image: 'image',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3',
    abc4: 'abc4',
    litterDetectionId: 'litterDetectionId',
    landscapingId: 'landscapingId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Ticket_details_tableScalarFieldEnum = (typeof Ticket_details_tableScalarFieldEnum)[keyof typeof Ticket_details_tableScalarFieldEnum]


  export const Parks_sentiment_analysisScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    person_Id: 'person_Id',
    detection_Id: 'detection_Id',
    person_name: 'person_name',
    person_image: 'person_image',
    gender: 'gender',
    check_in_image: 'check_in_image',
    sentiment_of: 'sentiment_of',
    check_in_date: 'check_in_date',
    check_in_time: 'check_in_time',
    check_in_sentiment: 'check_in_sentiment',
    entry_camera_Id: 'entry_camera_Id',
    check_out_date: 'check_out_date',
    check_out_time: 'check_out_time',
    check_out_capture: 'check_out_capture',
    check_out_sentiment: 'check_out_sentiment',
    exit_camera_Id: 'exit_camera_Id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_sentiment_analysisScalarFieldEnum = (typeof Parks_sentiment_analysisScalarFieldEnum)[keyof typeof Parks_sentiment_analysisScalarFieldEnum]


  export const Parks_smoking_detectionScalarFieldEnum: {
    Id: 'Id',
    park_Id: 'park_Id',
    location: 'location',
    camera_Id: 'camera_Id',
    occurrence_date: 'occurrence_date',
    occurrence_time: 'occurrence_time',
    snap_shot: 'snap_shot',
    posted_to_intranet_date: 'posted_to_intranet_date',
    posted_to_intranet_time: 'posted_to_intranet_time',
    detection_Id: 'detection_Id',
    detection_date: 'detection_date',
    detection_time: 'detection_time',
    description: 'description',
    is_employee: 'is_employee',
    current_status: 'current_status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Parks_smoking_detectionScalarFieldEnum = (typeof Parks_smoking_detectionScalarFieldEnum)[keyof typeof Parks_smoking_detectionScalarFieldEnum]


  export const Intranet_posting_historyScalarFieldEnum: {
    id: 'id',
    smokingDetectionId: 'smokingDetectionId',
    intrusionDetectionId: 'intrusionDetectionId',
    title: 'title',
    intranet_id: 'intranet_id',
    comments: 'comments',
    date: 'date',
    time: 'time',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3'
  };

  export type Intranet_posting_historyScalarFieldEnum = (typeof Intranet_posting_historyScalarFieldEnum)[keyof typeof Intranet_posting_historyScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    Id: 'Id',
    emp_Id: 'emp_Id',
    gender: 'gender',
    emp__eng_name: 'emp__eng_name',
    emp__arabic_name: 'emp__arabic_name',
    country_code: 'country_code',
    phone: 'phone',
    email: 'email',
    dep_eng_name: 'dep_eng_name',
    dep_arabic_name: 'dep_arabic_name',
    desig_eng_name: 'desig_eng_name',
    desig_arabic_name: 'desig_arabic_name',
    unit_eng_name: 'unit_eng_name',
    unit_arabic_name: 'unit_arabic_name',
    committe_eng_name: 'committe_eng_name',
    committe_arabic_name: 'committe_arabic_name',
    ai_engine_access: 'ai_engine_access',
    last_login: 'last_login',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    role_Id: 'role_Id'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Users_permissionsScalarFieldEnum: {
    Id: 'Id',
    role_Id: 'role_Id',
    dashboard_view: 'dashboard_view',
    role_permission_view: 'role_permission_view',
    role_permission_add: 'role_permission_add',
    role_permission_update: 'role_permission_update',
    offices_view: 'offices_view',
    offices_add: 'offices_add',
    offices_update: 'offices_update',
    parks_view: 'parks_view',
    parks_add: 'parks_add',
    parks_update: 'parks_update',
    system_report_view: 'system_report_view',
    alerts_view: 'alerts_view',
    office_attendance_view: 'office_attendance_view',
    office_attendance_add: 'office_attendance_add',
    office_attendance_update: 'office_attendance_update',
    office_footfall_view: 'office_footfall_view',
    office_footfall_add: 'office_footfall_add',
    office_footfall_update: 'office_footfall_update',
    office_sentimental_view: 'office_sentimental_view',
    office_sentimental_add: 'office_sentimental_add',
    office_sentimental_update: 'office_sentimental_update',
    park_attendance_view: 'park_attendance_view',
    park_attendance_add: 'park_attendance_add',
    park_attendance_update: 'park_attendance_update',
    park_footfall_view: 'park_footfall_view',
    park_footfall_add: 'park_footfall_add',
    park_footfall_update: 'park_footfall_update',
    park_sentimental_view: 'park_sentimental_view',
    park_sentimental_add: 'park_sentimental_add',
    park_sentimental_update: 'park_sentimental_update',
    park_irrigation_view: 'park_irrigation_view',
    park_irrigation_add: 'park_irrigation_add',
    park_irrigation_update: 'park_irrigation_update',
    park_landscaping_view: 'park_landscaping_view',
    park_landscaping_add: 'park_landscaping_add',
    park_landscaping_update: 'park_landscaping_update',
    park_litter_detection_view: 'park_litter_detection_view',
    park_litter_detection_add: 'park_litter_detection_add',
    park_litter_detection_update: 'park_litter_detection_update',
    park_intrusion_detection_view: 'park_intrusion_detection_view',
    park_intrusion_detection_add: 'park_intrusion_detection_add',
    park_intrusion_detection_update: 'park_intrusion_detection_update',
    park_smoking_detection_view: 'park_smoking_detection_view',
    park_smoking_detection_add: 'park_smoking_detection_add',
    park_smoking_detection_update: 'park_smoking_detection_update',
    my_account_view: 'my_account_view',
    settings_view: 'settings_view',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Users_permissionsScalarFieldEnum = (typeof Users_permissionsScalarFieldEnum)[keyof typeof Users_permissionsScalarFieldEnum]


  export const Users_rolesScalarFieldEnum: {
    Id: 'Id',
    role_name: 'role_name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Users_rolesScalarFieldEnum = (typeof Users_rolesScalarFieldEnum)[keyof typeof Users_rolesScalarFieldEnum]


  export const Parks_footfall_analysisScalarFieldEnum: {
    id: 'id',
    park_Id: 'park_Id',
    detection_Id: 'detection_Id',
    person_Id: 'person_Id',
    gender: 'gender',
    is_child: 'is_child',
    time: 'time',
    detected_camera_Id: 'detected_camera_Id',
    detected_camera_name: 'detected_camera_name',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3'
  };

  export type Parks_footfall_analysisScalarFieldEnum = (typeof Parks_footfall_analysisScalarFieldEnum)[keyof typeof Parks_footfall_analysisScalarFieldEnum]


  export const Offices_footfall_analysisScalarFieldEnum: {
    id: 'id',
    office_Id: 'office_Id',
    detection_Id: 'detection_Id',
    person_Id: 'person_Id',
    gender: 'gender',
    is_child: 'is_child',
    time: 'time',
    detected_camera_Id: 'detected_camera_Id',
    detected_camera_name: 'detected_camera_name',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3'
  };

  export type Offices_footfall_analysisScalarFieldEnum = (typeof Offices_footfall_analysisScalarFieldEnum)[keyof typeof Offices_footfall_analysisScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const access_secretOrderByRelevanceFieldEnum: {
    value: 'value'
  };

  export type access_secretOrderByRelevanceFieldEnum = (typeof access_secretOrderByRelevanceFieldEnum)[keyof typeof access_secretOrderByRelevanceFieldEnum]


  export const office_streamsOrderByRelevanceFieldEnum: {
    stream_url: 'stream_url',
    stream_api_key: 'stream_api_key',
    stream_path: 'stream_path',
    password: 'password'
  };

  export type office_streamsOrderByRelevanceFieldEnum = (typeof office_streamsOrderByRelevanceFieldEnum)[keyof typeof office_streamsOrderByRelevanceFieldEnum]


  export const officesOrderByRelevanceFieldEnum: {
    office_Id: 'office_Id',
    office_english_name: 'office_english_name',
    office_arabic_name: 'office_arabic_name',
    image: 'image',
    location: 'location'
  };

  export type officesOrderByRelevanceFieldEnum = (typeof officesOrderByRelevanceFieldEnum)[keyof typeof officesOrderByRelevanceFieldEnum]


  export const offices_camerasOrderByRelevanceFieldEnum: {
    camera_Id: 'camera_Id',
    camera_english_name: 'camera_english_name',
    camera_arabic_name: 'camera_arabic_name',
    ip_address: 'ip_address',
    status: 'status',
    location: 'location'
  };

  export type offices_camerasOrderByRelevanceFieldEnum = (typeof offices_camerasOrderByRelevanceFieldEnum)[keyof typeof offices_camerasOrderByRelevanceFieldEnum]


  export const offices_sentiment_analysisOrderByRelevanceFieldEnum: {
    person_Id: 'person_Id',
    detection_Id: 'detection_Id',
    person_name: 'person_name',
    person_image: 'person_image',
    gender: 'gender',
    check_in_image: 'check_in_image',
    check_in_sentiment: 'check_in_sentiment',
    check_out_capture: 'check_out_capture',
    check_out_sentiment: 'check_out_sentiment'
  };

  export type offices_sentiment_analysisOrderByRelevanceFieldEnum = (typeof offices_sentiment_analysisOrderByRelevanceFieldEnum)[keyof typeof offices_sentiment_analysisOrderByRelevanceFieldEnum]


  export const park_camerasOrderByRelevanceFieldEnum: {
    camera_Id: 'camera_Id',
    camera_english_name: 'camera_english_name',
    camera_arabic_name: 'camera_arabic_name',
    ip_address: 'ip_address',
    status: 'status',
    location: 'location',
    stream_url: 'stream_url',
    stream_api_key: 'stream_api_key',
    stream_path: 'stream_path',
    password: 'password'
  };

  export type park_camerasOrderByRelevanceFieldEnum = (typeof park_camerasOrderByRelevanceFieldEnum)[keyof typeof park_camerasOrderByRelevanceFieldEnum]


  export const park_streamsOrderByRelevanceFieldEnum: {
    stream_url: 'stream_url',
    stream_api_key: 'stream_api_key',
    stream_path: 'stream_path',
    password: 'password'
  };

  export type park_streamsOrderByRelevanceFieldEnum = (typeof park_streamsOrderByRelevanceFieldEnum)[keyof typeof park_streamsOrderByRelevanceFieldEnum]


  export const TermsPrivacyOrderByRelevanceFieldEnum: {
    terms: 'terms',
    privacyPolicy: 'privacyPolicy'
  };

  export type TermsPrivacyOrderByRelevanceFieldEnum = (typeof TermsPrivacyOrderByRelevanceFieldEnum)[keyof typeof TermsPrivacyOrderByRelevanceFieldEnum]


  export const FAQOrderByRelevanceFieldEnum: {
    question: 'question',
    answer: 'answer'
  };

  export type FAQOrderByRelevanceFieldEnum = (typeof FAQOrderByRelevanceFieldEnum)[keyof typeof FAQOrderByRelevanceFieldEnum]


  export const park_zonesOrderByRelevanceFieldEnum: {
    zone_Id: 'zone_Id',
    zone_english_name: 'zone_english_name',
    zone_arabic_name: 'zone_arabic_name',
    device_ip: 'device_ip',
    web_api: 'web_api',
    status: 'status',
    location: 'location'
  };

  export type park_zonesOrderByRelevanceFieldEnum = (typeof park_zonesOrderByRelevanceFieldEnum)[keyof typeof park_zonesOrderByRelevanceFieldEnum]


  export const parksOrderByRelevanceFieldEnum: {
    park_Id: 'park_Id',
    park_english_name: 'park_english_name',
    park_arabic_name: 'park_arabic_name',
    image: 'image',
    location: 'location'
  };

  export type parksOrderByRelevanceFieldEnum = (typeof parksOrderByRelevanceFieldEnum)[keyof typeof parksOrderByRelevanceFieldEnum]


  export const parks_behaviour_alertsOrderByRelevanceFieldEnum: {
    person_Id: 'person_Id',
    detection_Id: 'detection_Id',
    detection_code: 'detection_code',
    description: 'description',
    detected_behaviour: 'detected_behaviour',
    snap_shot: 'snap_shot'
  };

  export type parks_behaviour_alertsOrderByRelevanceFieldEnum = (typeof parks_behaviour_alertsOrderByRelevanceFieldEnum)[keyof typeof parks_behaviour_alertsOrderByRelevanceFieldEnum]


  export const parks_intrusion_detectionOrderByRelevanceFieldEnum: {
    location: 'location',
    snap_shot: 'snap_shot',
    detection_Id: 'detection_Id',
    description: 'description',
    current_status: 'current_status'
  };

  export type parks_intrusion_detectionOrderByRelevanceFieldEnum = (typeof parks_intrusion_detectionOrderByRelevanceFieldEnum)[keyof typeof parks_intrusion_detectionOrderByRelevanceFieldEnum]


  export const parks_irrigation_job_historyOrderByRelevanceFieldEnum: {
    job_Id: 'job_Id',
    job_status: 'job_status'
  };

  export type parks_irrigation_job_historyOrderByRelevanceFieldEnum = (typeof parks_irrigation_job_historyOrderByRelevanceFieldEnum)[keyof typeof parks_irrigation_job_historyOrderByRelevanceFieldEnum]


  export const parks_landscapingOrderByRelevanceFieldEnum: {
    case_Id: 'case_Id',
    location: 'location',
    snap_shot: 'snap_shot',
    type: 'type',
    status: 'status',
    detection_Id: 'detection_Id',
    description: 'description',
    current_status: 'current_status',
    after_image: 'after_image'
  };

  export type parks_landscapingOrderByRelevanceFieldEnum = (typeof parks_landscapingOrderByRelevanceFieldEnum)[keyof typeof parks_landscapingOrderByRelevanceFieldEnum]


  export const parks_litter_detectionOrderByRelevanceFieldEnum: {
    case_Id: 'case_Id',
    location: 'location',
    snap_shot: 'snap_shot',
    status: 'status',
    detection_Id: 'detection_Id',
    description: 'description',
    current_status: 'current_status',
    after_image: 'after_image'
  };

  export type parks_litter_detectionOrderByRelevanceFieldEnum = (typeof parks_litter_detectionOrderByRelevanceFieldEnum)[keyof typeof parks_litter_detectionOrderByRelevanceFieldEnum]


  export const ticket_details_tableOrderByRelevanceFieldEnum: {
    status: 'status',
    comments: 'comments',
    image: 'image',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3',
    abc4: 'abc4'
  };

  export type ticket_details_tableOrderByRelevanceFieldEnum = (typeof ticket_details_tableOrderByRelevanceFieldEnum)[keyof typeof ticket_details_tableOrderByRelevanceFieldEnum]


  export const parks_sentiment_analysisOrderByRelevanceFieldEnum: {
    person_Id: 'person_Id',
    detection_Id: 'detection_Id',
    person_name: 'person_name',
    person_image: 'person_image',
    gender: 'gender',
    check_in_image: 'check_in_image',
    check_in_sentiment: 'check_in_sentiment',
    check_out_capture: 'check_out_capture',
    check_out_sentiment: 'check_out_sentiment'
  };

  export type parks_sentiment_analysisOrderByRelevanceFieldEnum = (typeof parks_sentiment_analysisOrderByRelevanceFieldEnum)[keyof typeof parks_sentiment_analysisOrderByRelevanceFieldEnum]


  export const parks_smoking_detectionOrderByRelevanceFieldEnum: {
    location: 'location',
    snap_shot: 'snap_shot',
    detection_Id: 'detection_Id',
    description: 'description',
    current_status: 'current_status'
  };

  export type parks_smoking_detectionOrderByRelevanceFieldEnum = (typeof parks_smoking_detectionOrderByRelevanceFieldEnum)[keyof typeof parks_smoking_detectionOrderByRelevanceFieldEnum]


  export const intranet_posting_historyOrderByRelevanceFieldEnum: {
    title: 'title',
    intranet_id: 'intranet_id',
    comments: 'comments',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3'
  };

  export type intranet_posting_historyOrderByRelevanceFieldEnum = (typeof intranet_posting_historyOrderByRelevanceFieldEnum)[keyof typeof intranet_posting_historyOrderByRelevanceFieldEnum]


  export const usersOrderByRelevanceFieldEnum: {
    emp_Id: 'emp_Id',
    gender: 'gender',
    emp__eng_name: 'emp__eng_name',
    emp__arabic_name: 'emp__arabic_name',
    country_code: 'country_code',
    phone: 'phone',
    email: 'email',
    dep_eng_name: 'dep_eng_name',
    dep_arabic_name: 'dep_arabic_name',
    desig_eng_name: 'desig_eng_name',
    desig_arabic_name: 'desig_arabic_name',
    unit_eng_name: 'unit_eng_name',
    unit_arabic_name: 'unit_arabic_name',
    committe_eng_name: 'committe_eng_name',
    committe_arabic_name: 'committe_arabic_name'
  };

  export type usersOrderByRelevanceFieldEnum = (typeof usersOrderByRelevanceFieldEnum)[keyof typeof usersOrderByRelevanceFieldEnum]


  export const users_rolesOrderByRelevanceFieldEnum: {
    role_name: 'role_name'
  };

  export type users_rolesOrderByRelevanceFieldEnum = (typeof users_rolesOrderByRelevanceFieldEnum)[keyof typeof users_rolesOrderByRelevanceFieldEnum]


  export const parks_footfall_analysisOrderByRelevanceFieldEnum: {
    detection_Id: 'detection_Id',
    gender: 'gender',
    detected_camera_Id: 'detected_camera_Id',
    detected_camera_name: 'detected_camera_name',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3'
  };

  export type parks_footfall_analysisOrderByRelevanceFieldEnum = (typeof parks_footfall_analysisOrderByRelevanceFieldEnum)[keyof typeof parks_footfall_analysisOrderByRelevanceFieldEnum]


  export const offices_footfall_analysisOrderByRelevanceFieldEnum: {
    detection_Id: 'detection_Id',
    gender: 'gender',
    detected_camera_Id: 'detected_camera_Id',
    detected_camera_name: 'detected_camera_name',
    abc1: 'abc1',
    abc2: 'abc2',
    abc3: 'abc3'
  };

  export type offices_footfall_analysisOrderByRelevanceFieldEnum = (typeof offices_footfall_analysisOrderByRelevanceFieldEnum)[keyof typeof offices_footfall_analysisOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'offices_sentiment_analysis_sentiment_of'
   */
  export type Enumoffices_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'offices_sentiment_analysis_sentiment_of'>
    


  /**
   * Reference to a field of type 'parks_sentiment_analysis_sentiment_of'
   */
  export type Enumparks_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'parks_sentiment_analysis_sentiment_of'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type access_secretWhereInput = {
    AND?: access_secretWhereInput | access_secretWhereInput[]
    OR?: access_secretWhereInput[]
    NOT?: access_secretWhereInput | access_secretWhereInput[]
    Id?: IntFilter<"access_secret"> | number
    value?: StringNullableFilter<"access_secret"> | string | null
  }

  export type access_secretOrderByWithRelationInput = {
    Id?: SortOrder
    value?: SortOrderInput | SortOrder
    _relevance?: access_secretOrderByRelevanceInput
  }

  export type access_secretWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: access_secretWhereInput | access_secretWhereInput[]
    OR?: access_secretWhereInput[]
    NOT?: access_secretWhereInput | access_secretWhereInput[]
    value?: StringNullableFilter<"access_secret"> | string | null
  }, "Id">

  export type access_secretOrderByWithAggregationInput = {
    Id?: SortOrder
    value?: SortOrderInput | SortOrder
    _count?: access_secretCountOrderByAggregateInput
    _avg?: access_secretAvgOrderByAggregateInput
    _max?: access_secretMaxOrderByAggregateInput
    _min?: access_secretMinOrderByAggregateInput
    _sum?: access_secretSumOrderByAggregateInput
  }

  export type access_secretScalarWhereWithAggregatesInput = {
    AND?: access_secretScalarWhereWithAggregatesInput | access_secretScalarWhereWithAggregatesInput[]
    OR?: access_secretScalarWhereWithAggregatesInput[]
    NOT?: access_secretScalarWhereWithAggregatesInput | access_secretScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"access_secret"> | number
    value?: StringNullableWithAggregatesFilter<"access_secret"> | string | null
  }

  export type live_stream_favouritesWhereInput = {
    AND?: live_stream_favouritesWhereInput | live_stream_favouritesWhereInput[]
    OR?: live_stream_favouritesWhereInput[]
    NOT?: live_stream_favouritesWhereInput | live_stream_favouritesWhereInput[]
    Id?: IntFilter<"live_stream_favourites"> | number
    emp_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    park_camera_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    office_camera_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    createdAt?: DateTimeNullableFilter<"live_stream_favourites"> | Date | string | null
    updatedAt?: DateTimeFilter<"live_stream_favourites"> | Date | string
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    offices_cameras?: XOR<Offices_camerasNullableScalarRelationFilter, offices_camerasWhereInput> | null
  }

  export type live_stream_favouritesOrderByWithRelationInput = {
    Id?: SortOrder
    emp_Id?: SortOrderInput | SortOrder
    park_camera_Id?: SortOrderInput | SortOrder
    office_camera_Id?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    users?: usersOrderByWithRelationInput
    park_cameras?: park_camerasOrderByWithRelationInput
    offices_cameras?: offices_camerasOrderByWithRelationInput
  }

  export type live_stream_favouritesWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: live_stream_favouritesWhereInput | live_stream_favouritesWhereInput[]
    OR?: live_stream_favouritesWhereInput[]
    NOT?: live_stream_favouritesWhereInput | live_stream_favouritesWhereInput[]
    emp_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    park_camera_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    office_camera_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    createdAt?: DateTimeNullableFilter<"live_stream_favourites"> | Date | string | null
    updatedAt?: DateTimeFilter<"live_stream_favourites"> | Date | string
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    offices_cameras?: XOR<Offices_camerasNullableScalarRelationFilter, offices_camerasWhereInput> | null
  }, "Id">

  export type live_stream_favouritesOrderByWithAggregationInput = {
    Id?: SortOrder
    emp_Id?: SortOrderInput | SortOrder
    park_camera_Id?: SortOrderInput | SortOrder
    office_camera_Id?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: live_stream_favouritesCountOrderByAggregateInput
    _avg?: live_stream_favouritesAvgOrderByAggregateInput
    _max?: live_stream_favouritesMaxOrderByAggregateInput
    _min?: live_stream_favouritesMinOrderByAggregateInput
    _sum?: live_stream_favouritesSumOrderByAggregateInput
  }

  export type live_stream_favouritesScalarWhereWithAggregatesInput = {
    AND?: live_stream_favouritesScalarWhereWithAggregatesInput | live_stream_favouritesScalarWhereWithAggregatesInput[]
    OR?: live_stream_favouritesScalarWhereWithAggregatesInput[]
    NOT?: live_stream_favouritesScalarWhereWithAggregatesInput | live_stream_favouritesScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"live_stream_favourites"> | number
    emp_Id?: IntNullableWithAggregatesFilter<"live_stream_favourites"> | number | null
    park_camera_Id?: IntNullableWithAggregatesFilter<"live_stream_favourites"> | number | null
    office_camera_Id?: IntNullableWithAggregatesFilter<"live_stream_favourites"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"live_stream_favourites"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"live_stream_favourites"> | Date | string
  }

  export type office_streamsWhereInput = {
    AND?: office_streamsWhereInput | office_streamsWhereInput[]
    OR?: office_streamsWhereInput[]
    NOT?: office_streamsWhereInput | office_streamsWhereInput[]
    Id?: IntFilter<"office_streams"> | number
    office_Id?: IntNullableFilter<"office_streams"> | number | null
    stream_url?: StringNullableFilter<"office_streams"> | string | null
    stream_api_key?: StringNullableFilter<"office_streams"> | string | null
    stream_path?: StringNullableFilter<"office_streams"> | string | null
    password?: StringNullableFilter<"office_streams"> | string | null
    createdAt?: DateTimeNullableFilter<"office_streams"> | Date | string | null
    updatedAt?: DateTimeFilter<"office_streams"> | Date | string
    offices?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
  }

  export type office_streamsOrderByWithRelationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    stream_url?: SortOrderInput | SortOrder
    stream_api_key?: SortOrderInput | SortOrder
    stream_path?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    offices?: officesOrderByWithRelationInput
    _relevance?: office_streamsOrderByRelevanceInput
  }

  export type office_streamsWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: office_streamsWhereInput | office_streamsWhereInput[]
    OR?: office_streamsWhereInput[]
    NOT?: office_streamsWhereInput | office_streamsWhereInput[]
    office_Id?: IntNullableFilter<"office_streams"> | number | null
    stream_url?: StringNullableFilter<"office_streams"> | string | null
    stream_api_key?: StringNullableFilter<"office_streams"> | string | null
    stream_path?: StringNullableFilter<"office_streams"> | string | null
    password?: StringNullableFilter<"office_streams"> | string | null
    createdAt?: DateTimeNullableFilter<"office_streams"> | Date | string | null
    updatedAt?: DateTimeFilter<"office_streams"> | Date | string
    offices?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
  }, "Id">

  export type office_streamsOrderByWithAggregationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    stream_url?: SortOrderInput | SortOrder
    stream_api_key?: SortOrderInput | SortOrder
    stream_path?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: office_streamsCountOrderByAggregateInput
    _avg?: office_streamsAvgOrderByAggregateInput
    _max?: office_streamsMaxOrderByAggregateInput
    _min?: office_streamsMinOrderByAggregateInput
    _sum?: office_streamsSumOrderByAggregateInput
  }

  export type office_streamsScalarWhereWithAggregatesInput = {
    AND?: office_streamsScalarWhereWithAggregatesInput | office_streamsScalarWhereWithAggregatesInput[]
    OR?: office_streamsScalarWhereWithAggregatesInput[]
    NOT?: office_streamsScalarWhereWithAggregatesInput | office_streamsScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"office_streams"> | number
    office_Id?: IntNullableWithAggregatesFilter<"office_streams"> | number | null
    stream_url?: StringNullableWithAggregatesFilter<"office_streams"> | string | null
    stream_api_key?: StringNullableWithAggregatesFilter<"office_streams"> | string | null
    stream_path?: StringNullableWithAggregatesFilter<"office_streams"> | string | null
    password?: StringNullableWithAggregatesFilter<"office_streams"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"office_streams"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"office_streams"> | Date | string
  }

  export type officesWhereInput = {
    AND?: officesWhereInput | officesWhereInput[]
    OR?: officesWhereInput[]
    NOT?: officesWhereInput | officesWhereInput[]
    Id?: IntFilter<"offices"> | number
    office_Id?: StringNullableFilter<"offices"> | string | null
    office_english_name?: StringNullableFilter<"offices"> | string | null
    office_arabic_name?: StringNullableFilter<"offices"> | string | null
    image?: StringNullableFilter<"offices"> | string | null
    latitude?: DecimalNullableFilter<"offices"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"offices"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"offices"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices"> | Date | string
    location?: StringNullableFilter<"offices"> | string | null
    office_streams?: Office_streamsListRelationFilter
    offices_attendance?: Offices_attendanceListRelationFilter
    offices_cameras?: Offices_camerasListRelationFilter
    offices_sentiment_analysis?: Offices_sentiment_analysisListRelationFilter
    offices_footfall_analysis?: Offices_footfall_analysisListRelationFilter
  }

  export type officesOrderByWithRelationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    office_english_name?: SortOrderInput | SortOrder
    office_arabic_name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    office_streams?: office_streamsOrderByRelationAggregateInput
    offices_attendance?: offices_attendanceOrderByRelationAggregateInput
    offices_cameras?: offices_camerasOrderByRelationAggregateInput
    offices_sentiment_analysis?: offices_sentiment_analysisOrderByRelationAggregateInput
    offices_footfall_analysis?: offices_footfall_analysisOrderByRelationAggregateInput
    _relevance?: officesOrderByRelevanceInput
  }

  export type officesWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    office_Id?: string
    AND?: officesWhereInput | officesWhereInput[]
    OR?: officesWhereInput[]
    NOT?: officesWhereInput | officesWhereInput[]
    office_english_name?: StringNullableFilter<"offices"> | string | null
    office_arabic_name?: StringNullableFilter<"offices"> | string | null
    image?: StringNullableFilter<"offices"> | string | null
    latitude?: DecimalNullableFilter<"offices"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"offices"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"offices"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices"> | Date | string
    location?: StringNullableFilter<"offices"> | string | null
    office_streams?: Office_streamsListRelationFilter
    offices_attendance?: Offices_attendanceListRelationFilter
    offices_cameras?: Offices_camerasListRelationFilter
    offices_sentiment_analysis?: Offices_sentiment_analysisListRelationFilter
    offices_footfall_analysis?: Offices_footfall_analysisListRelationFilter
  }, "Id" | "office_Id">

  export type officesOrderByWithAggregationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    office_english_name?: SortOrderInput | SortOrder
    office_arabic_name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    _count?: officesCountOrderByAggregateInput
    _avg?: officesAvgOrderByAggregateInput
    _max?: officesMaxOrderByAggregateInput
    _min?: officesMinOrderByAggregateInput
    _sum?: officesSumOrderByAggregateInput
  }

  export type officesScalarWhereWithAggregatesInput = {
    AND?: officesScalarWhereWithAggregatesInput | officesScalarWhereWithAggregatesInput[]
    OR?: officesScalarWhereWithAggregatesInput[]
    NOT?: officesScalarWhereWithAggregatesInput | officesScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"offices"> | number
    office_Id?: StringNullableWithAggregatesFilter<"offices"> | string | null
    office_english_name?: StringNullableWithAggregatesFilter<"offices"> | string | null
    office_arabic_name?: StringNullableWithAggregatesFilter<"offices"> | string | null
    image?: StringNullableWithAggregatesFilter<"offices"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"offices"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"offices"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"offices"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"offices"> | Date | string
    location?: StringNullableWithAggregatesFilter<"offices"> | string | null
  }

  export type offices_attendanceWhereInput = {
    AND?: offices_attendanceWhereInput | offices_attendanceWhereInput[]
    OR?: offices_attendanceWhereInput[]
    NOT?: offices_attendanceWhereInput | offices_attendanceWhereInput[]
    Id?: IntFilter<"offices_attendance"> | number
    office_Id?: IntNullableFilter<"offices_attendance"> | number | null
    person_Id?: IntNullableFilter<"offices_attendance"> | number | null
    entry_time?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    exit_time?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_attendance"> | Date | string
    office?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
    user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type offices_attendanceOrderByWithRelationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    entry_time?: SortOrderInput | SortOrder
    exit_time?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    office?: officesOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type offices_attendanceWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: offices_attendanceWhereInput | offices_attendanceWhereInput[]
    OR?: offices_attendanceWhereInput[]
    NOT?: offices_attendanceWhereInput | offices_attendanceWhereInput[]
    office_Id?: IntNullableFilter<"offices_attendance"> | number | null
    person_Id?: IntNullableFilter<"offices_attendance"> | number | null
    entry_time?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    exit_time?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_attendance"> | Date | string
    office?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
    user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "Id">

  export type offices_attendanceOrderByWithAggregationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    entry_time?: SortOrderInput | SortOrder
    exit_time?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: offices_attendanceCountOrderByAggregateInput
    _avg?: offices_attendanceAvgOrderByAggregateInput
    _max?: offices_attendanceMaxOrderByAggregateInput
    _min?: offices_attendanceMinOrderByAggregateInput
    _sum?: offices_attendanceSumOrderByAggregateInput
  }

  export type offices_attendanceScalarWhereWithAggregatesInput = {
    AND?: offices_attendanceScalarWhereWithAggregatesInput | offices_attendanceScalarWhereWithAggregatesInput[]
    OR?: offices_attendanceScalarWhereWithAggregatesInput[]
    NOT?: offices_attendanceScalarWhereWithAggregatesInput | offices_attendanceScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"offices_attendance"> | number
    office_Id?: IntNullableWithAggregatesFilter<"offices_attendance"> | number | null
    person_Id?: IntNullableWithAggregatesFilter<"offices_attendance"> | number | null
    entry_time?: DateTimeNullableWithAggregatesFilter<"offices_attendance"> | Date | string | null
    exit_time?: DateTimeNullableWithAggregatesFilter<"offices_attendance"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"offices_attendance"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"offices_attendance"> | Date | string
  }

  export type offices_camerasWhereInput = {
    AND?: offices_camerasWhereInput | offices_camerasWhereInput[]
    OR?: offices_camerasWhereInput[]
    NOT?: offices_camerasWhereInput | offices_camerasWhereInput[]
    Id?: IntFilter<"offices_cameras"> | number
    office_Id?: IntNullableFilter<"offices_cameras"> | number | null
    camera_Id?: StringNullableFilter<"offices_cameras"> | string | null
    camera_english_name?: StringNullableFilter<"offices_cameras"> | string | null
    camera_arabic_name?: StringNullableFilter<"offices_cameras"> | string | null
    latitude?: DecimalNullableFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableFilter<"offices_cameras"> | string | null
    last_active_date?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    status?: StringNullableFilter<"offices_cameras"> | string | null
    createdAt?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_cameras"> | Date | string
    location?: StringNullableFilter<"offices_cameras"> | string | null
    attendance?: BoolFilter<"offices_cameras"> | boolean
    footfall?: BoolFilter<"offices_cameras"> | boolean
    sentiment?: BoolFilter<"offices_cameras"> | boolean
    live_stream_favourites?: Live_stream_favouritesListRelationFilter
    offices?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: Offices_sentiment_analysisListRelationFilter
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: Offices_sentiment_analysisListRelationFilter
  }

  export type offices_camerasOrderByWithRelationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    camera_english_name?: SortOrderInput | SortOrder
    camera_arabic_name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    last_active_date?: SortOrderInput | SortOrder
    last_active_time?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
    live_stream_favourites?: live_stream_favouritesOrderByRelationAggregateInput
    offices?: officesOrderByWithRelationInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisOrderByRelationAggregateInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisOrderByRelationAggregateInput
    _relevance?: offices_camerasOrderByRelevanceInput
  }

  export type offices_camerasWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    office_Id_camera_Id?: offices_camerasOffice_IdCamera_IdCompoundUniqueInput
    AND?: offices_camerasWhereInput | offices_camerasWhereInput[]
    OR?: offices_camerasWhereInput[]
    NOT?: offices_camerasWhereInput | offices_camerasWhereInput[]
    office_Id?: IntNullableFilter<"offices_cameras"> | number | null
    camera_Id?: StringNullableFilter<"offices_cameras"> | string | null
    camera_english_name?: StringNullableFilter<"offices_cameras"> | string | null
    camera_arabic_name?: StringNullableFilter<"offices_cameras"> | string | null
    latitude?: DecimalNullableFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableFilter<"offices_cameras"> | string | null
    last_active_date?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    status?: StringNullableFilter<"offices_cameras"> | string | null
    createdAt?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_cameras"> | Date | string
    location?: StringNullableFilter<"offices_cameras"> | string | null
    attendance?: BoolFilter<"offices_cameras"> | boolean
    footfall?: BoolFilter<"offices_cameras"> | boolean
    sentiment?: BoolFilter<"offices_cameras"> | boolean
    live_stream_favourites?: Live_stream_favouritesListRelationFilter
    offices?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: Offices_sentiment_analysisListRelationFilter
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: Offices_sentiment_analysisListRelationFilter
  }, "Id" | "office_Id_camera_Id">

  export type offices_camerasOrderByWithAggregationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    camera_english_name?: SortOrderInput | SortOrder
    camera_arabic_name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    last_active_date?: SortOrderInput | SortOrder
    last_active_time?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
    _count?: offices_camerasCountOrderByAggregateInput
    _avg?: offices_camerasAvgOrderByAggregateInput
    _max?: offices_camerasMaxOrderByAggregateInput
    _min?: offices_camerasMinOrderByAggregateInput
    _sum?: offices_camerasSumOrderByAggregateInput
  }

  export type offices_camerasScalarWhereWithAggregatesInput = {
    AND?: offices_camerasScalarWhereWithAggregatesInput | offices_camerasScalarWhereWithAggregatesInput[]
    OR?: offices_camerasScalarWhereWithAggregatesInput[]
    NOT?: offices_camerasScalarWhereWithAggregatesInput | offices_camerasScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"offices_cameras"> | number
    office_Id?: IntNullableWithAggregatesFilter<"offices_cameras"> | number | null
    camera_Id?: StringNullableWithAggregatesFilter<"offices_cameras"> | string | null
    camera_english_name?: StringNullableWithAggregatesFilter<"offices_cameras"> | string | null
    camera_arabic_name?: StringNullableWithAggregatesFilter<"offices_cameras"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableWithAggregatesFilter<"offices_cameras"> | string | null
    last_active_date?: DateTimeNullableWithAggregatesFilter<"offices_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableWithAggregatesFilter<"offices_cameras"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"offices_cameras"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"offices_cameras"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"offices_cameras"> | Date | string
    location?: StringNullableWithAggregatesFilter<"offices_cameras"> | string | null
    attendance?: BoolWithAggregatesFilter<"offices_cameras"> | boolean
    footfall?: BoolWithAggregatesFilter<"offices_cameras"> | boolean
    sentiment?: BoolWithAggregatesFilter<"offices_cameras"> | boolean
  }

  export type offices_sentiment_analysisWhereInput = {
    AND?: offices_sentiment_analysisWhereInput | offices_sentiment_analysisWhereInput[]
    OR?: offices_sentiment_analysisWhereInput[]
    NOT?: offices_sentiment_analysisWhereInput | offices_sentiment_analysisWhereInput[]
    Id?: IntFilter<"offices_sentiment_analysis"> | number
    office_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    person_Id?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    detection_Id?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    person_name?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    person_image?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    gender?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    check_in_image?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    sentiment_of?: Enumoffices_sentiment_analysis_sentiment_ofNullableFilter<"offices_sentiment_analysis"> | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_sentiment_analysis"> | Date | string
    offices?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: XOR<Offices_camerasNullableScalarRelationFilter, offices_camerasWhereInput> | null
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: XOR<Offices_camerasNullableScalarRelationFilter, offices_camerasWhereInput> | null
  }

  export type offices_sentiment_analysisOrderByWithRelationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    person_name?: SortOrderInput | SortOrder
    person_image?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    check_in_image?: SortOrderInput | SortOrder
    sentiment_of?: SortOrderInput | SortOrder
    check_in_date?: SortOrderInput | SortOrder
    check_in_time?: SortOrderInput | SortOrder
    check_in_sentiment?: SortOrderInput | SortOrder
    entry_camera_Id?: SortOrderInput | SortOrder
    check_out_date?: SortOrderInput | SortOrder
    check_out_time?: SortOrderInput | SortOrder
    check_out_capture?: SortOrderInput | SortOrder
    check_out_sentiment?: SortOrderInput | SortOrder
    exit_camera_Id?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    offices?: officesOrderByWithRelationInput
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasOrderByWithRelationInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasOrderByWithRelationInput
    _relevance?: offices_sentiment_analysisOrderByRelevanceInput
  }

  export type offices_sentiment_analysisWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: offices_sentiment_analysisWhereInput | offices_sentiment_analysisWhereInput[]
    OR?: offices_sentiment_analysisWhereInput[]
    NOT?: offices_sentiment_analysisWhereInput | offices_sentiment_analysisWhereInput[]
    office_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    person_Id?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    detection_Id?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    person_name?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    person_image?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    gender?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    check_in_image?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    sentiment_of?: Enumoffices_sentiment_analysis_sentiment_ofNullableFilter<"offices_sentiment_analysis"> | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_sentiment_analysis"> | Date | string
    offices?: XOR<OfficesNullableScalarRelationFilter, officesWhereInput> | null
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: XOR<Offices_camerasNullableScalarRelationFilter, offices_camerasWhereInput> | null
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: XOR<Offices_camerasNullableScalarRelationFilter, offices_camerasWhereInput> | null
  }, "Id">

  export type offices_sentiment_analysisOrderByWithAggregationInput = {
    Id?: SortOrder
    office_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    person_name?: SortOrderInput | SortOrder
    person_image?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    check_in_image?: SortOrderInput | SortOrder
    sentiment_of?: SortOrderInput | SortOrder
    check_in_date?: SortOrderInput | SortOrder
    check_in_time?: SortOrderInput | SortOrder
    check_in_sentiment?: SortOrderInput | SortOrder
    entry_camera_Id?: SortOrderInput | SortOrder
    check_out_date?: SortOrderInput | SortOrder
    check_out_time?: SortOrderInput | SortOrder
    check_out_capture?: SortOrderInput | SortOrder
    check_out_sentiment?: SortOrderInput | SortOrder
    exit_camera_Id?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: offices_sentiment_analysisCountOrderByAggregateInput
    _avg?: offices_sentiment_analysisAvgOrderByAggregateInput
    _max?: offices_sentiment_analysisMaxOrderByAggregateInput
    _min?: offices_sentiment_analysisMinOrderByAggregateInput
    _sum?: offices_sentiment_analysisSumOrderByAggregateInput
  }

  export type offices_sentiment_analysisScalarWhereWithAggregatesInput = {
    AND?: offices_sentiment_analysisScalarWhereWithAggregatesInput | offices_sentiment_analysisScalarWhereWithAggregatesInput[]
    OR?: offices_sentiment_analysisScalarWhereWithAggregatesInput[]
    NOT?: offices_sentiment_analysisScalarWhereWithAggregatesInput | offices_sentiment_analysisScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"offices_sentiment_analysis"> | number
    office_Id?: IntNullableWithAggregatesFilter<"offices_sentiment_analysis"> | number | null
    person_Id?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    detection_Id?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    person_name?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    person_image?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    gender?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    check_in_image?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    sentiment_of?: Enumoffices_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<"offices_sentiment_analysis"> | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableWithAggregatesFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableWithAggregatesFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableWithAggregatesFilter<"offices_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableWithAggregatesFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableWithAggregatesFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableWithAggregatesFilter<"offices_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableWithAggregatesFilter<"offices_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"offices_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"offices_sentiment_analysis"> | Date | string
  }

  export type park_camerasWhereInput = {
    AND?: park_camerasWhereInput | park_camerasWhereInput[]
    OR?: park_camerasWhereInput[]
    NOT?: park_camerasWhereInput | park_camerasWhereInput[]
    Id?: IntFilter<"park_cameras"> | number
    park_Id?: IntNullableFilter<"park_cameras"> | number | null
    camera_Id?: StringNullableFilter<"park_cameras"> | string | null
    camera_english_name?: StringNullableFilter<"park_cameras"> | string | null
    camera_arabic_name?: StringNullableFilter<"park_cameras"> | string | null
    latitude?: DecimalNullableFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableFilter<"park_cameras"> | string | null
    last_active_date?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    status?: StringNullableFilter<"park_cameras"> | string | null
    createdAt?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_cameras"> | Date | string
    location?: StringNullableFilter<"park_cameras"> | string | null
    attendance?: BoolNullableFilter<"park_cameras"> | boolean | null
    footfall?: BoolNullableFilter<"park_cameras"> | boolean | null
    sentiment?: BoolNullableFilter<"park_cameras"> | boolean | null
    behaviour?: BoolNullableFilter<"park_cameras"> | boolean | null
    irrigation?: BoolNullableFilter<"park_cameras"> | boolean | null
    landscaping?: BoolNullableFilter<"park_cameras"> | boolean | null
    litter_detection?: BoolNullableFilter<"park_cameras"> | boolean | null
    smoking_detection?: BoolNullableFilter<"park_cameras"> | boolean | null
    intrusion?: BoolNullableFilter<"park_cameras"> | boolean | null
    stream_url?: StringNullableFilter<"park_cameras"> | string | null
    stream_api_key?: StringNullableFilter<"park_cameras"> | string | null
    stream_path?: StringNullableFilter<"park_cameras"> | string | null
    password?: StringNullableFilter<"park_cameras"> | string | null
    live_stream_favourites?: Live_stream_favouritesListRelationFilter
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    parks_behaviour_alerts?: Parks_behaviour_alertsListRelationFilter
    parks_intrusion_detection?: Parks_intrusion_detectionListRelationFilter
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: Parks_sentiment_analysisListRelationFilter
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: Parks_sentiment_analysisListRelationFilter
    parks_smoking_detection?: Parks_smoking_detectionListRelationFilter
    parks_landscaping?: Parks_landscapingListRelationFilter
    parks_litter_detection?: Parks_litter_detectionListRelationFilter
  }

  export type park_camerasOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    camera_english_name?: SortOrderInput | SortOrder
    camera_arabic_name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    last_active_date?: SortOrderInput | SortOrder
    last_active_time?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    attendance?: SortOrderInput | SortOrder
    footfall?: SortOrderInput | SortOrder
    sentiment?: SortOrderInput | SortOrder
    behaviour?: SortOrderInput | SortOrder
    irrigation?: SortOrderInput | SortOrder
    landscaping?: SortOrderInput | SortOrder
    litter_detection?: SortOrderInput | SortOrder
    smoking_detection?: SortOrderInput | SortOrder
    intrusion?: SortOrderInput | SortOrder
    stream_url?: SortOrderInput | SortOrder
    stream_api_key?: SortOrderInput | SortOrder
    stream_path?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    live_stream_favourites?: live_stream_favouritesOrderByRelationAggregateInput
    parks?: parksOrderByWithRelationInput
    parks_behaviour_alerts?: parks_behaviour_alertsOrderByRelationAggregateInput
    parks_intrusion_detection?: parks_intrusion_detectionOrderByRelationAggregateInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisOrderByRelationAggregateInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisOrderByRelationAggregateInput
    parks_smoking_detection?: parks_smoking_detectionOrderByRelationAggregateInput
    parks_landscaping?: parks_landscapingOrderByRelationAggregateInput
    parks_litter_detection?: parks_litter_detectionOrderByRelationAggregateInput
    _relevance?: park_camerasOrderByRelevanceInput
  }

  export type park_camerasWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    park_Id_camera_Id?: park_camerasPark_IdCamera_IdCompoundUniqueInput
    AND?: park_camerasWhereInput | park_camerasWhereInput[]
    OR?: park_camerasWhereInput[]
    NOT?: park_camerasWhereInput | park_camerasWhereInput[]
    park_Id?: IntNullableFilter<"park_cameras"> | number | null
    camera_Id?: StringNullableFilter<"park_cameras"> | string | null
    camera_english_name?: StringNullableFilter<"park_cameras"> | string | null
    camera_arabic_name?: StringNullableFilter<"park_cameras"> | string | null
    latitude?: DecimalNullableFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableFilter<"park_cameras"> | string | null
    last_active_date?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    status?: StringNullableFilter<"park_cameras"> | string | null
    createdAt?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_cameras"> | Date | string
    location?: StringNullableFilter<"park_cameras"> | string | null
    attendance?: BoolNullableFilter<"park_cameras"> | boolean | null
    footfall?: BoolNullableFilter<"park_cameras"> | boolean | null
    sentiment?: BoolNullableFilter<"park_cameras"> | boolean | null
    behaviour?: BoolNullableFilter<"park_cameras"> | boolean | null
    irrigation?: BoolNullableFilter<"park_cameras"> | boolean | null
    landscaping?: BoolNullableFilter<"park_cameras"> | boolean | null
    litter_detection?: BoolNullableFilter<"park_cameras"> | boolean | null
    smoking_detection?: BoolNullableFilter<"park_cameras"> | boolean | null
    intrusion?: BoolNullableFilter<"park_cameras"> | boolean | null
    stream_url?: StringNullableFilter<"park_cameras"> | string | null
    stream_api_key?: StringNullableFilter<"park_cameras"> | string | null
    stream_path?: StringNullableFilter<"park_cameras"> | string | null
    password?: StringNullableFilter<"park_cameras"> | string | null
    live_stream_favourites?: Live_stream_favouritesListRelationFilter
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    parks_behaviour_alerts?: Parks_behaviour_alertsListRelationFilter
    parks_intrusion_detection?: Parks_intrusion_detectionListRelationFilter
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: Parks_sentiment_analysisListRelationFilter
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: Parks_sentiment_analysisListRelationFilter
    parks_smoking_detection?: Parks_smoking_detectionListRelationFilter
    parks_landscaping?: Parks_landscapingListRelationFilter
    parks_litter_detection?: Parks_litter_detectionListRelationFilter
  }, "Id" | "park_Id_camera_Id">

  export type park_camerasOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    camera_english_name?: SortOrderInput | SortOrder
    camera_arabic_name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    last_active_date?: SortOrderInput | SortOrder
    last_active_time?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    attendance?: SortOrderInput | SortOrder
    footfall?: SortOrderInput | SortOrder
    sentiment?: SortOrderInput | SortOrder
    behaviour?: SortOrderInput | SortOrder
    irrigation?: SortOrderInput | SortOrder
    landscaping?: SortOrderInput | SortOrder
    litter_detection?: SortOrderInput | SortOrder
    smoking_detection?: SortOrderInput | SortOrder
    intrusion?: SortOrderInput | SortOrder
    stream_url?: SortOrderInput | SortOrder
    stream_api_key?: SortOrderInput | SortOrder
    stream_path?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    _count?: park_camerasCountOrderByAggregateInput
    _avg?: park_camerasAvgOrderByAggregateInput
    _max?: park_camerasMaxOrderByAggregateInput
    _min?: park_camerasMinOrderByAggregateInput
    _sum?: park_camerasSumOrderByAggregateInput
  }

  export type park_camerasScalarWhereWithAggregatesInput = {
    AND?: park_camerasScalarWhereWithAggregatesInput | park_camerasScalarWhereWithAggregatesInput[]
    OR?: park_camerasScalarWhereWithAggregatesInput[]
    NOT?: park_camerasScalarWhereWithAggregatesInput | park_camerasScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"park_cameras"> | number
    park_Id?: IntNullableWithAggregatesFilter<"park_cameras"> | number | null
    camera_Id?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    camera_english_name?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    camera_arabic_name?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    last_active_date?: DateTimeNullableWithAggregatesFilter<"park_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableWithAggregatesFilter<"park_cameras"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"park_cameras"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"park_cameras"> | Date | string
    location?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    attendance?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    footfall?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    sentiment?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    behaviour?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    irrigation?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    landscaping?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    litter_detection?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    smoking_detection?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    intrusion?: BoolNullableWithAggregatesFilter<"park_cameras"> | boolean | null
    stream_url?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    stream_api_key?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    stream_path?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
    password?: StringNullableWithAggregatesFilter<"park_cameras"> | string | null
  }

  export type park_streamsWhereInput = {
    AND?: park_streamsWhereInput | park_streamsWhereInput[]
    OR?: park_streamsWhereInput[]
    NOT?: park_streamsWhereInput | park_streamsWhereInput[]
    Id?: IntFilter<"park_streams"> | number
    park_Id?: IntNullableFilter<"park_streams"> | number | null
    stream_url?: StringNullableFilter<"park_streams"> | string | null
    stream_api_key?: StringNullableFilter<"park_streams"> | string | null
    stream_path?: StringNullableFilter<"park_streams"> | string | null
    password?: StringNullableFilter<"park_streams"> | string | null
    createdAt?: DateTimeNullableFilter<"park_streams"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_streams"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
  }

  export type park_streamsOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    stream_url?: SortOrderInput | SortOrder
    stream_api_key?: SortOrderInput | SortOrder
    stream_path?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    _relevance?: park_streamsOrderByRelevanceInput
  }

  export type park_streamsWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: park_streamsWhereInput | park_streamsWhereInput[]
    OR?: park_streamsWhereInput[]
    NOT?: park_streamsWhereInput | park_streamsWhereInput[]
    park_Id?: IntNullableFilter<"park_streams"> | number | null
    stream_url?: StringNullableFilter<"park_streams"> | string | null
    stream_api_key?: StringNullableFilter<"park_streams"> | string | null
    stream_path?: StringNullableFilter<"park_streams"> | string | null
    password?: StringNullableFilter<"park_streams"> | string | null
    createdAt?: DateTimeNullableFilter<"park_streams"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_streams"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
  }, "Id">

  export type park_streamsOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    stream_url?: SortOrderInput | SortOrder
    stream_api_key?: SortOrderInput | SortOrder
    stream_path?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: park_streamsCountOrderByAggregateInput
    _avg?: park_streamsAvgOrderByAggregateInput
    _max?: park_streamsMaxOrderByAggregateInput
    _min?: park_streamsMinOrderByAggregateInput
    _sum?: park_streamsSumOrderByAggregateInput
  }

  export type park_streamsScalarWhereWithAggregatesInput = {
    AND?: park_streamsScalarWhereWithAggregatesInput | park_streamsScalarWhereWithAggregatesInput[]
    OR?: park_streamsScalarWhereWithAggregatesInput[]
    NOT?: park_streamsScalarWhereWithAggregatesInput | park_streamsScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"park_streams"> | number
    park_Id?: IntNullableWithAggregatesFilter<"park_streams"> | number | null
    stream_url?: StringNullableWithAggregatesFilter<"park_streams"> | string | null
    stream_api_key?: StringNullableWithAggregatesFilter<"park_streams"> | string | null
    stream_path?: StringNullableWithAggregatesFilter<"park_streams"> | string | null
    password?: StringNullableWithAggregatesFilter<"park_streams"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"park_streams"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"park_streams"> | Date | string
  }

  export type TermsPrivacyWhereInput = {
    AND?: TermsPrivacyWhereInput | TermsPrivacyWhereInput[]
    OR?: TermsPrivacyWhereInput[]
    NOT?: TermsPrivacyWhereInput | TermsPrivacyWhereInput[]
    id?: IntFilter<"TermsPrivacy"> | number
    terms?: StringNullableFilter<"TermsPrivacy"> | string | null
    privacyPolicy?: StringNullableFilter<"TermsPrivacy"> | string | null
    createdAt?: DateTimeFilter<"TermsPrivacy"> | Date | string
    updatedAt?: DateTimeFilter<"TermsPrivacy"> | Date | string
  }

  export type TermsPrivacyOrderByWithRelationInput = {
    id?: SortOrder
    terms?: SortOrderInput | SortOrder
    privacyPolicy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _relevance?: TermsPrivacyOrderByRelevanceInput
  }

  export type TermsPrivacyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TermsPrivacyWhereInput | TermsPrivacyWhereInput[]
    OR?: TermsPrivacyWhereInput[]
    NOT?: TermsPrivacyWhereInput | TermsPrivacyWhereInput[]
    terms?: StringNullableFilter<"TermsPrivacy"> | string | null
    privacyPolicy?: StringNullableFilter<"TermsPrivacy"> | string | null
    createdAt?: DateTimeFilter<"TermsPrivacy"> | Date | string
    updatedAt?: DateTimeFilter<"TermsPrivacy"> | Date | string
  }, "id">

  export type TermsPrivacyOrderByWithAggregationInput = {
    id?: SortOrder
    terms?: SortOrderInput | SortOrder
    privacyPolicy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TermsPrivacyCountOrderByAggregateInput
    _avg?: TermsPrivacyAvgOrderByAggregateInput
    _max?: TermsPrivacyMaxOrderByAggregateInput
    _min?: TermsPrivacyMinOrderByAggregateInput
    _sum?: TermsPrivacySumOrderByAggregateInput
  }

  export type TermsPrivacyScalarWhereWithAggregatesInput = {
    AND?: TermsPrivacyScalarWhereWithAggregatesInput | TermsPrivacyScalarWhereWithAggregatesInput[]
    OR?: TermsPrivacyScalarWhereWithAggregatesInput[]
    NOT?: TermsPrivacyScalarWhereWithAggregatesInput | TermsPrivacyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TermsPrivacy"> | number
    terms?: StringNullableWithAggregatesFilter<"TermsPrivacy"> | string | null
    privacyPolicy?: StringNullableWithAggregatesFilter<"TermsPrivacy"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TermsPrivacy"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TermsPrivacy"> | Date | string
  }

  export type FAQWhereInput = {
    AND?: FAQWhereInput | FAQWhereInput[]
    OR?: FAQWhereInput[]
    NOT?: FAQWhereInput | FAQWhereInput[]
    id?: IntFilter<"FAQ"> | number
    question?: StringFilter<"FAQ"> | string
    answer?: StringFilter<"FAQ"> | string
    createdAt?: DateTimeFilter<"FAQ"> | Date | string
    updatedAt?: DateTimeFilter<"FAQ"> | Date | string
  }

  export type FAQOrderByWithRelationInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _relevance?: FAQOrderByRelevanceInput
  }

  export type FAQWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FAQWhereInput | FAQWhereInput[]
    OR?: FAQWhereInput[]
    NOT?: FAQWhereInput | FAQWhereInput[]
    question?: StringFilter<"FAQ"> | string
    answer?: StringFilter<"FAQ"> | string
    createdAt?: DateTimeFilter<"FAQ"> | Date | string
    updatedAt?: DateTimeFilter<"FAQ"> | Date | string
  }, "id">

  export type FAQOrderByWithAggregationInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FAQCountOrderByAggregateInput
    _avg?: FAQAvgOrderByAggregateInput
    _max?: FAQMaxOrderByAggregateInput
    _min?: FAQMinOrderByAggregateInput
    _sum?: FAQSumOrderByAggregateInput
  }

  export type FAQScalarWhereWithAggregatesInput = {
    AND?: FAQScalarWhereWithAggregatesInput | FAQScalarWhereWithAggregatesInput[]
    OR?: FAQScalarWhereWithAggregatesInput[]
    NOT?: FAQScalarWhereWithAggregatesInput | FAQScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FAQ"> | number
    question?: StringWithAggregatesFilter<"FAQ"> | string
    answer?: StringWithAggregatesFilter<"FAQ"> | string
    createdAt?: DateTimeWithAggregatesFilter<"FAQ"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FAQ"> | Date | string
  }

  export type park_zonesWhereInput = {
    AND?: park_zonesWhereInput | park_zonesWhereInput[]
    OR?: park_zonesWhereInput[]
    NOT?: park_zonesWhereInput | park_zonesWhereInput[]
    Id?: IntFilter<"park_zones"> | number
    park_Id?: IntNullableFilter<"park_zones"> | number | null
    zone_Id?: StringNullableFilter<"park_zones"> | string | null
    zone_english_name?: StringNullableFilter<"park_zones"> | string | null
    zone_arabic_name?: StringNullableFilter<"park_zones"> | string | null
    latitude?: DecimalNullableFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    device_ip?: StringNullableFilter<"park_zones"> | string | null
    web_api?: StringNullableFilter<"park_zones"> | string | null
    status?: StringNullableFilter<"park_zones"> | string | null
    createdAt?: DateTimeNullableFilter<"park_zones"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_zones"> | Date | string
    location?: StringNullableFilter<"park_zones"> | string | null
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    parks_irrigation_job_history?: Parks_irrigation_job_historyListRelationFilter
  }

  export type park_zonesOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    zone_Id?: SortOrderInput | SortOrder
    zone_english_name?: SortOrderInput | SortOrder
    zone_arabic_name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    device_ip?: SortOrderInput | SortOrder
    web_api?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    parks?: parksOrderByWithRelationInput
    parks_irrigation_job_history?: parks_irrigation_job_historyOrderByRelationAggregateInput
    _relevance?: park_zonesOrderByRelevanceInput
  }

  export type park_zonesWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    park_Id_zone_Id?: park_zonesPark_IdZone_IdCompoundUniqueInput
    AND?: park_zonesWhereInput | park_zonesWhereInput[]
    OR?: park_zonesWhereInput[]
    NOT?: park_zonesWhereInput | park_zonesWhereInput[]
    park_Id?: IntNullableFilter<"park_zones"> | number | null
    zone_Id?: StringNullableFilter<"park_zones"> | string | null
    zone_english_name?: StringNullableFilter<"park_zones"> | string | null
    zone_arabic_name?: StringNullableFilter<"park_zones"> | string | null
    latitude?: DecimalNullableFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    device_ip?: StringNullableFilter<"park_zones"> | string | null
    web_api?: StringNullableFilter<"park_zones"> | string | null
    status?: StringNullableFilter<"park_zones"> | string | null
    createdAt?: DateTimeNullableFilter<"park_zones"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_zones"> | Date | string
    location?: StringNullableFilter<"park_zones"> | string | null
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    parks_irrigation_job_history?: Parks_irrigation_job_historyListRelationFilter
  }, "Id" | "park_Id_zone_Id">

  export type park_zonesOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    zone_Id?: SortOrderInput | SortOrder
    zone_english_name?: SortOrderInput | SortOrder
    zone_arabic_name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    device_ip?: SortOrderInput | SortOrder
    web_api?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    _count?: park_zonesCountOrderByAggregateInput
    _avg?: park_zonesAvgOrderByAggregateInput
    _max?: park_zonesMaxOrderByAggregateInput
    _min?: park_zonesMinOrderByAggregateInput
    _sum?: park_zonesSumOrderByAggregateInput
  }

  export type park_zonesScalarWhereWithAggregatesInput = {
    AND?: park_zonesScalarWhereWithAggregatesInput | park_zonesScalarWhereWithAggregatesInput[]
    OR?: park_zonesScalarWhereWithAggregatesInput[]
    NOT?: park_zonesScalarWhereWithAggregatesInput | park_zonesScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"park_zones"> | number
    park_Id?: IntNullableWithAggregatesFilter<"park_zones"> | number | null
    zone_Id?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
    zone_english_name?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
    zone_arabic_name?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    device_ip?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
    web_api?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
    status?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"park_zones"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"park_zones"> | Date | string
    location?: StringNullableWithAggregatesFilter<"park_zones"> | string | null
  }

  export type parksWhereInput = {
    AND?: parksWhereInput | parksWhereInput[]
    OR?: parksWhereInput[]
    NOT?: parksWhereInput | parksWhereInput[]
    Id?: IntFilter<"parks"> | number
    park_Id?: StringNullableFilter<"parks"> | string | null
    park_english_name?: StringNullableFilter<"parks"> | string | null
    park_arabic_name?: StringNullableFilter<"parks"> | string | null
    image?: StringNullableFilter<"parks"> | string | null
    latitude?: DecimalNullableFilter<"parks"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"parks"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"parks"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks"> | Date | string
    location?: StringNullableFilter<"parks"> | string | null
    park_cameras?: Park_camerasListRelationFilter
    park_streams?: Park_streamsListRelationFilter
    park_zones?: Park_zonesListRelationFilter
    parks_attendance?: Parks_attendanceListRelationFilter
    parks_behaviour_alerts?: Parks_behaviour_alertsListRelationFilter
    parks_intrusion_detection?: Parks_intrusion_detectionListRelationFilter
    parks_irrigation_job_history?: Parks_irrigation_job_historyListRelationFilter
    parks_landscaping?: Parks_landscapingListRelationFilter
    parks_litter_detection?: Parks_litter_detectionListRelationFilter
    parks_sentiment_analysis?: Parks_sentiment_analysisListRelationFilter
    parks_smoking_detection?: Parks_smoking_detectionListRelationFilter
    parks_footfall_analysis?: Parks_footfall_analysisListRelationFilter
  }

  export type parksOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    park_english_name?: SortOrderInput | SortOrder
    park_arabic_name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    park_cameras?: park_camerasOrderByRelationAggregateInput
    park_streams?: park_streamsOrderByRelationAggregateInput
    park_zones?: park_zonesOrderByRelationAggregateInput
    parks_attendance?: parks_attendanceOrderByRelationAggregateInput
    parks_behaviour_alerts?: parks_behaviour_alertsOrderByRelationAggregateInput
    parks_intrusion_detection?: parks_intrusion_detectionOrderByRelationAggregateInput
    parks_irrigation_job_history?: parks_irrigation_job_historyOrderByRelationAggregateInput
    parks_landscaping?: parks_landscapingOrderByRelationAggregateInput
    parks_litter_detection?: parks_litter_detectionOrderByRelationAggregateInput
    parks_sentiment_analysis?: parks_sentiment_analysisOrderByRelationAggregateInput
    parks_smoking_detection?: parks_smoking_detectionOrderByRelationAggregateInput
    parks_footfall_analysis?: parks_footfall_analysisOrderByRelationAggregateInput
    _relevance?: parksOrderByRelevanceInput
  }

  export type parksWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    park_Id?: string
    AND?: parksWhereInput | parksWhereInput[]
    OR?: parksWhereInput[]
    NOT?: parksWhereInput | parksWhereInput[]
    park_english_name?: StringNullableFilter<"parks"> | string | null
    park_arabic_name?: StringNullableFilter<"parks"> | string | null
    image?: StringNullableFilter<"parks"> | string | null
    latitude?: DecimalNullableFilter<"parks"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"parks"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"parks"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks"> | Date | string
    location?: StringNullableFilter<"parks"> | string | null
    park_cameras?: Park_camerasListRelationFilter
    park_streams?: Park_streamsListRelationFilter
    park_zones?: Park_zonesListRelationFilter
    parks_attendance?: Parks_attendanceListRelationFilter
    parks_behaviour_alerts?: Parks_behaviour_alertsListRelationFilter
    parks_intrusion_detection?: Parks_intrusion_detectionListRelationFilter
    parks_irrigation_job_history?: Parks_irrigation_job_historyListRelationFilter
    parks_landscaping?: Parks_landscapingListRelationFilter
    parks_litter_detection?: Parks_litter_detectionListRelationFilter
    parks_sentiment_analysis?: Parks_sentiment_analysisListRelationFilter
    parks_smoking_detection?: Parks_smoking_detectionListRelationFilter
    parks_footfall_analysis?: Parks_footfall_analysisListRelationFilter
  }, "Id" | "park_Id">

  export type parksOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    park_english_name?: SortOrderInput | SortOrder
    park_arabic_name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    location?: SortOrderInput | SortOrder
    _count?: parksCountOrderByAggregateInput
    _avg?: parksAvgOrderByAggregateInput
    _max?: parksMaxOrderByAggregateInput
    _min?: parksMinOrderByAggregateInput
    _sum?: parksSumOrderByAggregateInput
  }

  export type parksScalarWhereWithAggregatesInput = {
    AND?: parksScalarWhereWithAggregatesInput | parksScalarWhereWithAggregatesInput[]
    OR?: parksScalarWhereWithAggregatesInput[]
    NOT?: parksScalarWhereWithAggregatesInput | parksScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks"> | number
    park_Id?: StringNullableWithAggregatesFilter<"parks"> | string | null
    park_english_name?: StringNullableWithAggregatesFilter<"parks"> | string | null
    park_arabic_name?: StringNullableWithAggregatesFilter<"parks"> | string | null
    image?: StringNullableWithAggregatesFilter<"parks"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"parks"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"parks"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks"> | Date | string
    location?: StringNullableWithAggregatesFilter<"parks"> | string | null
  }

  export type parks_attendanceWhereInput = {
    AND?: parks_attendanceWhereInput | parks_attendanceWhereInput[]
    OR?: parks_attendanceWhereInput[]
    NOT?: parks_attendanceWhereInput | parks_attendanceWhereInput[]
    Id?: IntFilter<"parks_attendance"> | number
    park_Id?: IntNullableFilter<"parks_attendance"> | number | null
    person_Id?: IntNullableFilter<"parks_attendance"> | number | null
    entry_time?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    exit_time?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_attendance"> | Date | string
    park?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type parks_attendanceOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    entry_time?: SortOrderInput | SortOrder
    exit_time?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    park?: parksOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type parks_attendanceWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_attendanceWhereInput | parks_attendanceWhereInput[]
    OR?: parks_attendanceWhereInput[]
    NOT?: parks_attendanceWhereInput | parks_attendanceWhereInput[]
    park_Id?: IntNullableFilter<"parks_attendance"> | number | null
    person_Id?: IntNullableFilter<"parks_attendance"> | number | null
    entry_time?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    exit_time?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_attendance"> | Date | string
    park?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "Id">

  export type parks_attendanceOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    entry_time?: SortOrderInput | SortOrder
    exit_time?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_attendanceCountOrderByAggregateInput
    _avg?: parks_attendanceAvgOrderByAggregateInput
    _max?: parks_attendanceMaxOrderByAggregateInput
    _min?: parks_attendanceMinOrderByAggregateInput
    _sum?: parks_attendanceSumOrderByAggregateInput
  }

  export type parks_attendanceScalarWhereWithAggregatesInput = {
    AND?: parks_attendanceScalarWhereWithAggregatesInput | parks_attendanceScalarWhereWithAggregatesInput[]
    OR?: parks_attendanceScalarWhereWithAggregatesInput[]
    NOT?: parks_attendanceScalarWhereWithAggregatesInput | parks_attendanceScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_attendance"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_attendance"> | number | null
    person_Id?: IntNullableWithAggregatesFilter<"parks_attendance"> | number | null
    entry_time?: DateTimeNullableWithAggregatesFilter<"parks_attendance"> | Date | string | null
    exit_time?: DateTimeNullableWithAggregatesFilter<"parks_attendance"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_attendance"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_attendance"> | Date | string
  }

  export type parks_behaviour_alertsWhereInput = {
    AND?: parks_behaviour_alertsWhereInput | parks_behaviour_alertsWhereInput[]
    OR?: parks_behaviour_alertsWhereInput[]
    NOT?: parks_behaviour_alertsWhereInput | parks_behaviour_alertsWhereInput[]
    Id?: IntFilter<"parks_behaviour_alerts"> | number
    park_Id?: IntNullableFilter<"parks_behaviour_alerts"> | number | null
    person_Id?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    camera_Id?: IntNullableFilter<"parks_behaviour_alerts"> | number | null
    detection_Id?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detection_code?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    description?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detected_behaviour?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    is_employee?: BoolNullableFilter<"parks_behaviour_alerts"> | boolean | null
    snap_shot?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_behaviour_alerts"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
  }

  export type parks_behaviour_alertsOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_code?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    detected_behaviour?: SortOrderInput | SortOrder
    is_employee?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_cameras?: park_camerasOrderByWithRelationInput
    _relevance?: parks_behaviour_alertsOrderByRelevanceInput
  }

  export type parks_behaviour_alertsWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_behaviour_alertsWhereInput | parks_behaviour_alertsWhereInput[]
    OR?: parks_behaviour_alertsWhereInput[]
    NOT?: parks_behaviour_alertsWhereInput | parks_behaviour_alertsWhereInput[]
    park_Id?: IntNullableFilter<"parks_behaviour_alerts"> | number | null
    person_Id?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    camera_Id?: IntNullableFilter<"parks_behaviour_alerts"> | number | null
    detection_Id?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detection_code?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    description?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detected_behaviour?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    is_employee?: BoolNullableFilter<"parks_behaviour_alerts"> | boolean | null
    snap_shot?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_behaviour_alerts"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
  }, "Id">

  export type parks_behaviour_alertsOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_code?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    detected_behaviour?: SortOrderInput | SortOrder
    is_employee?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_behaviour_alertsCountOrderByAggregateInput
    _avg?: parks_behaviour_alertsAvgOrderByAggregateInput
    _max?: parks_behaviour_alertsMaxOrderByAggregateInput
    _min?: parks_behaviour_alertsMinOrderByAggregateInput
    _sum?: parks_behaviour_alertsSumOrderByAggregateInput
  }

  export type parks_behaviour_alertsScalarWhereWithAggregatesInput = {
    AND?: parks_behaviour_alertsScalarWhereWithAggregatesInput | parks_behaviour_alertsScalarWhereWithAggregatesInput[]
    OR?: parks_behaviour_alertsScalarWhereWithAggregatesInput[]
    NOT?: parks_behaviour_alertsScalarWhereWithAggregatesInput | parks_behaviour_alertsScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_behaviour_alerts"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_behaviour_alerts"> | number | null
    person_Id?: StringNullableWithAggregatesFilter<"parks_behaviour_alerts"> | string | null
    camera_Id?: IntNullableWithAggregatesFilter<"parks_behaviour_alerts"> | number | null
    detection_Id?: StringNullableWithAggregatesFilter<"parks_behaviour_alerts"> | string | null
    detection_code?: StringNullableWithAggregatesFilter<"parks_behaviour_alerts"> | string | null
    detection_date?: DateTimeNullableWithAggregatesFilter<"parks_behaviour_alerts"> | Date | string | null
    detection_time?: DateTimeNullableWithAggregatesFilter<"parks_behaviour_alerts"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"parks_behaviour_alerts"> | string | null
    detected_behaviour?: StringNullableWithAggregatesFilter<"parks_behaviour_alerts"> | string | null
    is_employee?: BoolNullableWithAggregatesFilter<"parks_behaviour_alerts"> | boolean | null
    snap_shot?: StringNullableWithAggregatesFilter<"parks_behaviour_alerts"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_behaviour_alerts"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_behaviour_alerts"> | Date | string
  }

  export type parks_intrusion_detectionWhereInput = {
    AND?: parks_intrusion_detectionWhereInput | parks_intrusion_detectionWhereInput[]
    OR?: parks_intrusion_detectionWhereInput[]
    NOT?: parks_intrusion_detectionWhereInput | parks_intrusion_detectionWhereInput[]
    Id?: IntFilter<"parks_intrusion_detection"> | number
    park_Id?: IntNullableFilter<"parks_intrusion_detection"> | number | null
    location?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_intrusion_detection"> | number | null
    occurrence_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    detection_Id?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    is_employee?: BoolNullableFilter<"parks_intrusion_detection"> | boolean | null
    current_status?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_intrusion_detection"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    intranet_posting_history?: Intranet_posting_historyListRelationFilter
  }

  export type parks_intrusion_detectionOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    occurrence_date?: SortOrderInput | SortOrder
    occurrence_time?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    posted_to_intranet_date?: SortOrderInput | SortOrder
    posted_to_intranet_time?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_employee?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_cameras?: park_camerasOrderByWithRelationInput
    intranet_posting_history?: intranet_posting_historyOrderByRelationAggregateInput
    _relevance?: parks_intrusion_detectionOrderByRelevanceInput
  }

  export type parks_intrusion_detectionWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_intrusion_detectionWhereInput | parks_intrusion_detectionWhereInput[]
    OR?: parks_intrusion_detectionWhereInput[]
    NOT?: parks_intrusion_detectionWhereInput | parks_intrusion_detectionWhereInput[]
    park_Id?: IntNullableFilter<"parks_intrusion_detection"> | number | null
    location?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_intrusion_detection"> | number | null
    occurrence_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    detection_Id?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    is_employee?: BoolNullableFilter<"parks_intrusion_detection"> | boolean | null
    current_status?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_intrusion_detection"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    intranet_posting_history?: Intranet_posting_historyListRelationFilter
  }, "Id">

  export type parks_intrusion_detectionOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    occurrence_date?: SortOrderInput | SortOrder
    occurrence_time?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    posted_to_intranet_date?: SortOrderInput | SortOrder
    posted_to_intranet_time?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_employee?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_intrusion_detectionCountOrderByAggregateInput
    _avg?: parks_intrusion_detectionAvgOrderByAggregateInput
    _max?: parks_intrusion_detectionMaxOrderByAggregateInput
    _min?: parks_intrusion_detectionMinOrderByAggregateInput
    _sum?: parks_intrusion_detectionSumOrderByAggregateInput
  }

  export type parks_intrusion_detectionScalarWhereWithAggregatesInput = {
    AND?: parks_intrusion_detectionScalarWhereWithAggregatesInput | parks_intrusion_detectionScalarWhereWithAggregatesInput[]
    OR?: parks_intrusion_detectionScalarWhereWithAggregatesInput[]
    NOT?: parks_intrusion_detectionScalarWhereWithAggregatesInput | parks_intrusion_detectionScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_intrusion_detection"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_intrusion_detection"> | number | null
    location?: StringNullableWithAggregatesFilter<"parks_intrusion_detection"> | string | null
    camera_Id?: IntNullableWithAggregatesFilter<"parks_intrusion_detection"> | number | null
    occurrence_date?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    snap_shot?: StringNullableWithAggregatesFilter<"parks_intrusion_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    detection_Id?: StringNullableWithAggregatesFilter<"parks_intrusion_detection"> | string | null
    detection_date?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    detection_time?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"parks_intrusion_detection"> | string | null
    is_employee?: BoolNullableWithAggregatesFilter<"parks_intrusion_detection"> | boolean | null
    current_status?: StringNullableWithAggregatesFilter<"parks_intrusion_detection"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_intrusion_detection"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_intrusion_detection"> | Date | string
  }

  export type parks_irrigation_job_historyWhereInput = {
    AND?: parks_irrigation_job_historyWhereInput | parks_irrigation_job_historyWhereInput[]
    OR?: parks_irrigation_job_historyWhereInput[]
    NOT?: parks_irrigation_job_historyWhereInput | parks_irrigation_job_historyWhereInput[]
    Id?: IntFilter<"parks_irrigation_job_history"> | number
    park_Id?: IntNullableFilter<"parks_irrigation_job_history"> | number | null
    zone_Id?: IntNullableFilter<"parks_irrigation_job_history"> | number | null
    job_Id?: StringNullableFilter<"parks_irrigation_job_history"> | string | null
    job_started_at?: DateTimeFilter<"parks_irrigation_job_history"> | Date | string
    job_completed_at?: DateTimeNullableFilter<"parks_irrigation_job_history"> | Date | string | null
    job_status?: StringNullableFilter<"parks_irrigation_job_history"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_irrigation_job_history"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_irrigation_job_history"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_zones?: XOR<Park_zonesNullableScalarRelationFilter, park_zonesWhereInput> | null
  }

  export type parks_irrigation_job_historyOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    zone_Id?: SortOrderInput | SortOrder
    job_Id?: SortOrderInput | SortOrder
    job_started_at?: SortOrder
    job_completed_at?: SortOrderInput | SortOrder
    job_status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_zones?: park_zonesOrderByWithRelationInput
    _relevance?: parks_irrigation_job_historyOrderByRelevanceInput
  }

  export type parks_irrigation_job_historyWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_irrigation_job_historyWhereInput | parks_irrigation_job_historyWhereInput[]
    OR?: parks_irrigation_job_historyWhereInput[]
    NOT?: parks_irrigation_job_historyWhereInput | parks_irrigation_job_historyWhereInput[]
    park_Id?: IntNullableFilter<"parks_irrigation_job_history"> | number | null
    zone_Id?: IntNullableFilter<"parks_irrigation_job_history"> | number | null
    job_Id?: StringNullableFilter<"parks_irrigation_job_history"> | string | null
    job_started_at?: DateTimeFilter<"parks_irrigation_job_history"> | Date | string
    job_completed_at?: DateTimeNullableFilter<"parks_irrigation_job_history"> | Date | string | null
    job_status?: StringNullableFilter<"parks_irrigation_job_history"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_irrigation_job_history"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_irrigation_job_history"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_zones?: XOR<Park_zonesNullableScalarRelationFilter, park_zonesWhereInput> | null
  }, "Id">

  export type parks_irrigation_job_historyOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    zone_Id?: SortOrderInput | SortOrder
    job_Id?: SortOrderInput | SortOrder
    job_started_at?: SortOrder
    job_completed_at?: SortOrderInput | SortOrder
    job_status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_irrigation_job_historyCountOrderByAggregateInput
    _avg?: parks_irrigation_job_historyAvgOrderByAggregateInput
    _max?: parks_irrigation_job_historyMaxOrderByAggregateInput
    _min?: parks_irrigation_job_historyMinOrderByAggregateInput
    _sum?: parks_irrigation_job_historySumOrderByAggregateInput
  }

  export type parks_irrigation_job_historyScalarWhereWithAggregatesInput = {
    AND?: parks_irrigation_job_historyScalarWhereWithAggregatesInput | parks_irrigation_job_historyScalarWhereWithAggregatesInput[]
    OR?: parks_irrigation_job_historyScalarWhereWithAggregatesInput[]
    NOT?: parks_irrigation_job_historyScalarWhereWithAggregatesInput | parks_irrigation_job_historyScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_irrigation_job_history"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_irrigation_job_history"> | number | null
    zone_Id?: IntNullableWithAggregatesFilter<"parks_irrigation_job_history"> | number | null
    job_Id?: StringNullableWithAggregatesFilter<"parks_irrigation_job_history"> | string | null
    job_started_at?: DateTimeWithAggregatesFilter<"parks_irrigation_job_history"> | Date | string
    job_completed_at?: DateTimeNullableWithAggregatesFilter<"parks_irrigation_job_history"> | Date | string | null
    job_status?: StringNullableWithAggregatesFilter<"parks_irrigation_job_history"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_irrigation_job_history"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_irrigation_job_history"> | Date | string
  }

  export type parks_landscapingWhereInput = {
    AND?: parks_landscapingWhereInput | parks_landscapingWhereInput[]
    OR?: parks_landscapingWhereInput[]
    NOT?: parks_landscapingWhereInput | parks_landscapingWhereInput[]
    Id?: IntFilter<"parks_landscaping"> | number
    park_Id?: IntNullableFilter<"parks_landscaping"> | number | null
    case_Id?: StringNullableFilter<"parks_landscaping"> | string | null
    location?: StringNullableFilter<"parks_landscaping"> | string | null
    snap_shot?: StringNullableFilter<"parks_landscaping"> | string | null
    type?: StringNullableFilter<"parks_landscaping"> | string | null
    status?: StringNullableFilter<"parks_landscaping"> | string | null
    detection_Id?: StringNullableFilter<"parks_landscaping"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    description?: StringNullableFilter<"parks_landscaping"> | string | null
    current_status?: StringNullableFilter<"parks_landscaping"> | string | null
    camera_Id?: IntNullableFilter<"parks_landscaping"> | number | null
    after_image?: StringNullableFilter<"parks_landscaping"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_landscaping"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    ticket_details?: Ticket_details_tableListRelationFilter
  }

  export type parks_landscapingOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    case_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    after_image?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_cameras?: park_camerasOrderByWithRelationInput
    ticket_details?: ticket_details_tableOrderByRelationAggregateInput
    _relevance?: parks_landscapingOrderByRelevanceInput
  }

  export type parks_landscapingWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_landscapingWhereInput | parks_landscapingWhereInput[]
    OR?: parks_landscapingWhereInput[]
    NOT?: parks_landscapingWhereInput | parks_landscapingWhereInput[]
    park_Id?: IntNullableFilter<"parks_landscaping"> | number | null
    case_Id?: StringNullableFilter<"parks_landscaping"> | string | null
    location?: StringNullableFilter<"parks_landscaping"> | string | null
    snap_shot?: StringNullableFilter<"parks_landscaping"> | string | null
    type?: StringNullableFilter<"parks_landscaping"> | string | null
    status?: StringNullableFilter<"parks_landscaping"> | string | null
    detection_Id?: StringNullableFilter<"parks_landscaping"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    description?: StringNullableFilter<"parks_landscaping"> | string | null
    current_status?: StringNullableFilter<"parks_landscaping"> | string | null
    camera_Id?: IntNullableFilter<"parks_landscaping"> | number | null
    after_image?: StringNullableFilter<"parks_landscaping"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_landscaping"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    ticket_details?: Ticket_details_tableListRelationFilter
  }, "Id">

  export type parks_landscapingOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    case_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    after_image?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_landscapingCountOrderByAggregateInput
    _avg?: parks_landscapingAvgOrderByAggregateInput
    _max?: parks_landscapingMaxOrderByAggregateInput
    _min?: parks_landscapingMinOrderByAggregateInput
    _sum?: parks_landscapingSumOrderByAggregateInput
  }

  export type parks_landscapingScalarWhereWithAggregatesInput = {
    AND?: parks_landscapingScalarWhereWithAggregatesInput | parks_landscapingScalarWhereWithAggregatesInput[]
    OR?: parks_landscapingScalarWhereWithAggregatesInput[]
    NOT?: parks_landscapingScalarWhereWithAggregatesInput | parks_landscapingScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_landscaping"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_landscaping"> | number | null
    case_Id?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    location?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    snap_shot?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    type?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    status?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    detection_Id?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    detection_date?: DateTimeNullableWithAggregatesFilter<"parks_landscaping"> | Date | string | null
    detection_time?: DateTimeNullableWithAggregatesFilter<"parks_landscaping"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    current_status?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    camera_Id?: IntNullableWithAggregatesFilter<"parks_landscaping"> | number | null
    after_image?: StringNullableWithAggregatesFilter<"parks_landscaping"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_landscaping"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_landscaping"> | Date | string
  }

  export type parks_litter_detectionWhereInput = {
    AND?: parks_litter_detectionWhereInput | parks_litter_detectionWhereInput[]
    OR?: parks_litter_detectionWhereInput[]
    NOT?: parks_litter_detectionWhereInput | parks_litter_detectionWhereInput[]
    Id?: IntFilter<"parks_litter_detection"> | number
    park_Id?: IntNullableFilter<"parks_litter_detection"> | number | null
    case_Id?: StringNullableFilter<"parks_litter_detection"> | string | null
    location?: StringNullableFilter<"parks_litter_detection"> | string | null
    occurrence_date?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_litter_detection"> | string | null
    status?: StringNullableFilter<"parks_litter_detection"> | string | null
    detection_Id?: StringNullableFilter<"parks_litter_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_litter_detection"> | string | null
    current_status?: StringNullableFilter<"parks_litter_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_litter_detection"> | number | null
    after_image?: StringNullableFilter<"parks_litter_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_litter_detection"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    ticket_details?: Ticket_details_tableListRelationFilter
  }

  export type parks_litter_detectionOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    case_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    occurrence_date?: SortOrderInput | SortOrder
    occurrence_time?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    after_image?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_cameras?: park_camerasOrderByWithRelationInput
    ticket_details?: ticket_details_tableOrderByRelationAggregateInput
    _relevance?: parks_litter_detectionOrderByRelevanceInput
  }

  export type parks_litter_detectionWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_litter_detectionWhereInput | parks_litter_detectionWhereInput[]
    OR?: parks_litter_detectionWhereInput[]
    NOT?: parks_litter_detectionWhereInput | parks_litter_detectionWhereInput[]
    park_Id?: IntNullableFilter<"parks_litter_detection"> | number | null
    case_Id?: StringNullableFilter<"parks_litter_detection"> | string | null
    location?: StringNullableFilter<"parks_litter_detection"> | string | null
    occurrence_date?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_litter_detection"> | string | null
    status?: StringNullableFilter<"parks_litter_detection"> | string | null
    detection_Id?: StringNullableFilter<"parks_litter_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_litter_detection"> | string | null
    current_status?: StringNullableFilter<"parks_litter_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_litter_detection"> | number | null
    after_image?: StringNullableFilter<"parks_litter_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_litter_detection"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    ticket_details?: Ticket_details_tableListRelationFilter
  }, "Id">

  export type parks_litter_detectionOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    case_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    occurrence_date?: SortOrderInput | SortOrder
    occurrence_time?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    after_image?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_litter_detectionCountOrderByAggregateInput
    _avg?: parks_litter_detectionAvgOrderByAggregateInput
    _max?: parks_litter_detectionMaxOrderByAggregateInput
    _min?: parks_litter_detectionMinOrderByAggregateInput
    _sum?: parks_litter_detectionSumOrderByAggregateInput
  }

  export type parks_litter_detectionScalarWhereWithAggregatesInput = {
    AND?: parks_litter_detectionScalarWhereWithAggregatesInput | parks_litter_detectionScalarWhereWithAggregatesInput[]
    OR?: parks_litter_detectionScalarWhereWithAggregatesInput[]
    NOT?: parks_litter_detectionScalarWhereWithAggregatesInput | parks_litter_detectionScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_litter_detection"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_litter_detection"> | number | null
    case_Id?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    location?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    occurrence_date?: DateTimeNullableWithAggregatesFilter<"parks_litter_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableWithAggregatesFilter<"parks_litter_detection"> | Date | string | null
    snap_shot?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    status?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    detection_Id?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    detection_date?: DateTimeNullableWithAggregatesFilter<"parks_litter_detection"> | Date | string | null
    detection_time?: DateTimeNullableWithAggregatesFilter<"parks_litter_detection"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    current_status?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    camera_Id?: IntNullableWithAggregatesFilter<"parks_litter_detection"> | number | null
    after_image?: StringNullableWithAggregatesFilter<"parks_litter_detection"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_litter_detection"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_litter_detection"> | Date | string
  }

  export type ticket_details_tableWhereInput = {
    AND?: ticket_details_tableWhereInput | ticket_details_tableWhereInput[]
    OR?: ticket_details_tableWhereInput[]
    NOT?: ticket_details_tableWhereInput | ticket_details_tableWhereInput[]
    id?: IntFilter<"ticket_details_table"> | number
    status?: StringNullableFilter<"ticket_details_table"> | string | null
    date?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    time?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    comments?: StringNullableFilter<"ticket_details_table"> | string | null
    image?: StringNullableFilter<"ticket_details_table"> | string | null
    abc1?: StringNullableFilter<"ticket_details_table"> | string | null
    abc2?: StringNullableFilter<"ticket_details_table"> | string | null
    abc3?: StringNullableFilter<"ticket_details_table"> | string | null
    abc4?: StringNullableFilter<"ticket_details_table"> | string | null
    litterDetectionId?: IntNullableFilter<"ticket_details_table"> | number | null
    landscapingId?: IntNullableFilter<"ticket_details_table"> | number | null
    createdAt?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    updatedAt?: DateTimeFilter<"ticket_details_table"> | Date | string
    parks_litter_detection?: XOR<Parks_litter_detectionNullableScalarRelationFilter, parks_litter_detectionWhereInput> | null
    parks_landscaping?: XOR<Parks_landscapingNullableScalarRelationFilter, parks_landscapingWhereInput> | null
  }

  export type ticket_details_tableOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    time?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    abc4?: SortOrderInput | SortOrder
    litterDetectionId?: SortOrderInput | SortOrder
    landscapingId?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks_litter_detection?: parks_litter_detectionOrderByWithRelationInput
    parks_landscaping?: parks_landscapingOrderByWithRelationInput
    _relevance?: ticket_details_tableOrderByRelevanceInput
  }

  export type ticket_details_tableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ticket_details_tableWhereInput | ticket_details_tableWhereInput[]
    OR?: ticket_details_tableWhereInput[]
    NOT?: ticket_details_tableWhereInput | ticket_details_tableWhereInput[]
    status?: StringNullableFilter<"ticket_details_table"> | string | null
    date?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    time?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    comments?: StringNullableFilter<"ticket_details_table"> | string | null
    image?: StringNullableFilter<"ticket_details_table"> | string | null
    abc1?: StringNullableFilter<"ticket_details_table"> | string | null
    abc2?: StringNullableFilter<"ticket_details_table"> | string | null
    abc3?: StringNullableFilter<"ticket_details_table"> | string | null
    abc4?: StringNullableFilter<"ticket_details_table"> | string | null
    litterDetectionId?: IntNullableFilter<"ticket_details_table"> | number | null
    landscapingId?: IntNullableFilter<"ticket_details_table"> | number | null
    createdAt?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    updatedAt?: DateTimeFilter<"ticket_details_table"> | Date | string
    parks_litter_detection?: XOR<Parks_litter_detectionNullableScalarRelationFilter, parks_litter_detectionWhereInput> | null
    parks_landscaping?: XOR<Parks_landscapingNullableScalarRelationFilter, parks_landscapingWhereInput> | null
  }, "id">

  export type ticket_details_tableOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    time?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    abc4?: SortOrderInput | SortOrder
    litterDetectionId?: SortOrderInput | SortOrder
    landscapingId?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: ticket_details_tableCountOrderByAggregateInput
    _avg?: ticket_details_tableAvgOrderByAggregateInput
    _max?: ticket_details_tableMaxOrderByAggregateInput
    _min?: ticket_details_tableMinOrderByAggregateInput
    _sum?: ticket_details_tableSumOrderByAggregateInput
  }

  export type ticket_details_tableScalarWhereWithAggregatesInput = {
    AND?: ticket_details_tableScalarWhereWithAggregatesInput | ticket_details_tableScalarWhereWithAggregatesInput[]
    OR?: ticket_details_tableScalarWhereWithAggregatesInput[]
    NOT?: ticket_details_tableScalarWhereWithAggregatesInput | ticket_details_tableScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ticket_details_table"> | number
    status?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"ticket_details_table"> | Date | string | null
    time?: DateTimeNullableWithAggregatesFilter<"ticket_details_table"> | Date | string | null
    comments?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    image?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    abc1?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    abc2?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    abc3?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    abc4?: StringNullableWithAggregatesFilter<"ticket_details_table"> | string | null
    litterDetectionId?: IntNullableWithAggregatesFilter<"ticket_details_table"> | number | null
    landscapingId?: IntNullableWithAggregatesFilter<"ticket_details_table"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"ticket_details_table"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ticket_details_table"> | Date | string
  }

  export type parks_sentiment_analysisWhereInput = {
    AND?: parks_sentiment_analysisWhereInput | parks_sentiment_analysisWhereInput[]
    OR?: parks_sentiment_analysisWhereInput[]
    NOT?: parks_sentiment_analysisWhereInput | parks_sentiment_analysisWhereInput[]
    Id?: IntFilter<"parks_sentiment_analysis"> | number
    park_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    person_Id?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    detection_Id?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    person_name?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    person_image?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    gender?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    check_in_image?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    sentiment_of?: Enumparks_sentiment_analysis_sentiment_ofNullableFilter<"parks_sentiment_analysis"> | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_sentiment_analysis"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
  }

  export type parks_sentiment_analysisOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    person_name?: SortOrderInput | SortOrder
    person_image?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    check_in_image?: SortOrderInput | SortOrder
    sentiment_of?: SortOrderInput | SortOrder
    check_in_date?: SortOrderInput | SortOrder
    check_in_time?: SortOrderInput | SortOrder
    check_in_sentiment?: SortOrderInput | SortOrder
    entry_camera_Id?: SortOrderInput | SortOrder
    check_out_date?: SortOrderInput | SortOrder
    check_out_time?: SortOrderInput | SortOrder
    check_out_capture?: SortOrderInput | SortOrder
    check_out_sentiment?: SortOrderInput | SortOrder
    exit_camera_Id?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasOrderByWithRelationInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasOrderByWithRelationInput
    _relevance?: parks_sentiment_analysisOrderByRelevanceInput
  }

  export type parks_sentiment_analysisWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_sentiment_analysisWhereInput | parks_sentiment_analysisWhereInput[]
    OR?: parks_sentiment_analysisWhereInput[]
    NOT?: parks_sentiment_analysisWhereInput | parks_sentiment_analysisWhereInput[]
    park_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    person_Id?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    detection_Id?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    person_name?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    person_image?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    gender?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    check_in_image?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    sentiment_of?: Enumparks_sentiment_analysis_sentiment_ofNullableFilter<"parks_sentiment_analysis"> | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_sentiment_analysis"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
  }, "Id">

  export type parks_sentiment_analysisOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    person_Id?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    person_name?: SortOrderInput | SortOrder
    person_image?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    check_in_image?: SortOrderInput | SortOrder
    sentiment_of?: SortOrderInput | SortOrder
    check_in_date?: SortOrderInput | SortOrder
    check_in_time?: SortOrderInput | SortOrder
    check_in_sentiment?: SortOrderInput | SortOrder
    entry_camera_Id?: SortOrderInput | SortOrder
    check_out_date?: SortOrderInput | SortOrder
    check_out_time?: SortOrderInput | SortOrder
    check_out_capture?: SortOrderInput | SortOrder
    check_out_sentiment?: SortOrderInput | SortOrder
    exit_camera_Id?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_sentiment_analysisCountOrderByAggregateInput
    _avg?: parks_sentiment_analysisAvgOrderByAggregateInput
    _max?: parks_sentiment_analysisMaxOrderByAggregateInput
    _min?: parks_sentiment_analysisMinOrderByAggregateInput
    _sum?: parks_sentiment_analysisSumOrderByAggregateInput
  }

  export type parks_sentiment_analysisScalarWhereWithAggregatesInput = {
    AND?: parks_sentiment_analysisScalarWhereWithAggregatesInput | parks_sentiment_analysisScalarWhereWithAggregatesInput[]
    OR?: parks_sentiment_analysisScalarWhereWithAggregatesInput[]
    NOT?: parks_sentiment_analysisScalarWhereWithAggregatesInput | parks_sentiment_analysisScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_sentiment_analysis"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_sentiment_analysis"> | number | null
    person_Id?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    detection_Id?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    person_name?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    person_image?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    gender?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    check_in_image?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    sentiment_of?: Enumparks_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<"parks_sentiment_analysis"> | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableWithAggregatesFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableWithAggregatesFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableWithAggregatesFilter<"parks_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableWithAggregatesFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableWithAggregatesFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableWithAggregatesFilter<"parks_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableWithAggregatesFilter<"parks_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_sentiment_analysis"> | Date | string
  }

  export type parks_smoking_detectionWhereInput = {
    AND?: parks_smoking_detectionWhereInput | parks_smoking_detectionWhereInput[]
    OR?: parks_smoking_detectionWhereInput[]
    NOT?: parks_smoking_detectionWhereInput | parks_smoking_detectionWhereInput[]
    Id?: IntFilter<"parks_smoking_detection"> | number
    park_Id?: IntNullableFilter<"parks_smoking_detection"> | number | null
    location?: StringNullableFilter<"parks_smoking_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_smoking_detection"> | number | null
    occurrence_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_smoking_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    detection_Id?: StringNullableFilter<"parks_smoking_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_smoking_detection"> | string | null
    is_employee?: BoolNullableFilter<"parks_smoking_detection"> | boolean | null
    current_status?: StringNullableFilter<"parks_smoking_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_smoking_detection"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    intranet_posting_history?: Intranet_posting_historyListRelationFilter
  }

  export type parks_smoking_detectionOrderByWithRelationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    occurrence_date?: SortOrderInput | SortOrder
    occurrence_time?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    posted_to_intranet_date?: SortOrderInput | SortOrder
    posted_to_intranet_time?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_employee?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    parks?: parksOrderByWithRelationInput
    park_cameras?: park_camerasOrderByWithRelationInput
    intranet_posting_history?: intranet_posting_historyOrderByRelationAggregateInput
    _relevance?: parks_smoking_detectionOrderByRelevanceInput
  }

  export type parks_smoking_detectionWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: parks_smoking_detectionWhereInput | parks_smoking_detectionWhereInput[]
    OR?: parks_smoking_detectionWhereInput[]
    NOT?: parks_smoking_detectionWhereInput | parks_smoking_detectionWhereInput[]
    park_Id?: IntNullableFilter<"parks_smoking_detection"> | number | null
    location?: StringNullableFilter<"parks_smoking_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_smoking_detection"> | number | null
    occurrence_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_smoking_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    detection_Id?: StringNullableFilter<"parks_smoking_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_smoking_detection"> | string | null
    is_employee?: BoolNullableFilter<"parks_smoking_detection"> | boolean | null
    current_status?: StringNullableFilter<"parks_smoking_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_smoking_detection"> | Date | string
    parks?: XOR<ParksNullableScalarRelationFilter, parksWhereInput> | null
    park_cameras?: XOR<Park_camerasNullableScalarRelationFilter, park_camerasWhereInput> | null
    intranet_posting_history?: Intranet_posting_historyListRelationFilter
  }, "Id">

  export type parks_smoking_detectionOrderByWithAggregationInput = {
    Id?: SortOrder
    park_Id?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    camera_Id?: SortOrderInput | SortOrder
    occurrence_date?: SortOrderInput | SortOrder
    occurrence_time?: SortOrderInput | SortOrder
    snap_shot?: SortOrderInput | SortOrder
    posted_to_intranet_date?: SortOrderInput | SortOrder
    posted_to_intranet_time?: SortOrderInput | SortOrder
    detection_Id?: SortOrderInput | SortOrder
    detection_date?: SortOrderInput | SortOrder
    detection_time?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_employee?: SortOrderInput | SortOrder
    current_status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: parks_smoking_detectionCountOrderByAggregateInput
    _avg?: parks_smoking_detectionAvgOrderByAggregateInput
    _max?: parks_smoking_detectionMaxOrderByAggregateInput
    _min?: parks_smoking_detectionMinOrderByAggregateInput
    _sum?: parks_smoking_detectionSumOrderByAggregateInput
  }

  export type parks_smoking_detectionScalarWhereWithAggregatesInput = {
    AND?: parks_smoking_detectionScalarWhereWithAggregatesInput | parks_smoking_detectionScalarWhereWithAggregatesInput[]
    OR?: parks_smoking_detectionScalarWhereWithAggregatesInput[]
    NOT?: parks_smoking_detectionScalarWhereWithAggregatesInput | parks_smoking_detectionScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"parks_smoking_detection"> | number
    park_Id?: IntNullableWithAggregatesFilter<"parks_smoking_detection"> | number | null
    location?: StringNullableWithAggregatesFilter<"parks_smoking_detection"> | string | null
    camera_Id?: IntNullableWithAggregatesFilter<"parks_smoking_detection"> | number | null
    occurrence_date?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    snap_shot?: StringNullableWithAggregatesFilter<"parks_smoking_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    detection_Id?: StringNullableWithAggregatesFilter<"parks_smoking_detection"> | string | null
    detection_date?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    detection_time?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"parks_smoking_detection"> | string | null
    is_employee?: BoolNullableWithAggregatesFilter<"parks_smoking_detection"> | boolean | null
    current_status?: StringNullableWithAggregatesFilter<"parks_smoking_detection"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"parks_smoking_detection"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"parks_smoking_detection"> | Date | string
  }

  export type intranet_posting_historyWhereInput = {
    AND?: intranet_posting_historyWhereInput | intranet_posting_historyWhereInput[]
    OR?: intranet_posting_historyWhereInput[]
    NOT?: intranet_posting_historyWhereInput | intranet_posting_historyWhereInput[]
    id?: IntFilter<"intranet_posting_history"> | number
    smokingDetectionId?: IntNullableFilter<"intranet_posting_history"> | number | null
    intrusionDetectionId?: IntNullableFilter<"intranet_posting_history"> | number | null
    title?: StringNullableFilter<"intranet_posting_history"> | string | null
    intranet_id?: StringNullableFilter<"intranet_posting_history"> | string | null
    comments?: StringNullableFilter<"intranet_posting_history"> | string | null
    date?: DateTimeNullableFilter<"intranet_posting_history"> | Date | string | null
    time?: DateTimeNullableFilter<"intranet_posting_history"> | Date | string | null
    abc1?: StringNullableFilter<"intranet_posting_history"> | string | null
    abc2?: StringNullableFilter<"intranet_posting_history"> | string | null
    abc3?: StringNullableFilter<"intranet_posting_history"> | string | null
    smokingDetection?: XOR<Parks_smoking_detectionNullableScalarRelationFilter, parks_smoking_detectionWhereInput> | null
    intrusionDetection?: XOR<Parks_intrusion_detectionNullableScalarRelationFilter, parks_intrusion_detectionWhereInput> | null
  }

  export type intranet_posting_historyOrderByWithRelationInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrderInput | SortOrder
    intrusionDetectionId?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    intranet_id?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    time?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    smokingDetection?: parks_smoking_detectionOrderByWithRelationInput
    intrusionDetection?: parks_intrusion_detectionOrderByWithRelationInput
    _relevance?: intranet_posting_historyOrderByRelevanceInput
  }

  export type intranet_posting_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: intranet_posting_historyWhereInput | intranet_posting_historyWhereInput[]
    OR?: intranet_posting_historyWhereInput[]
    NOT?: intranet_posting_historyWhereInput | intranet_posting_historyWhereInput[]
    smokingDetectionId?: IntNullableFilter<"intranet_posting_history"> | number | null
    intrusionDetectionId?: IntNullableFilter<"intranet_posting_history"> | number | null
    title?: StringNullableFilter<"intranet_posting_history"> | string | null
    intranet_id?: StringNullableFilter<"intranet_posting_history"> | string | null
    comments?: StringNullableFilter<"intranet_posting_history"> | string | null
    date?: DateTimeNullableFilter<"intranet_posting_history"> | Date | string | null
    time?: DateTimeNullableFilter<"intranet_posting_history"> | Date | string | null
    abc1?: StringNullableFilter<"intranet_posting_history"> | string | null
    abc2?: StringNullableFilter<"intranet_posting_history"> | string | null
    abc3?: StringNullableFilter<"intranet_posting_history"> | string | null
    smokingDetection?: XOR<Parks_smoking_detectionNullableScalarRelationFilter, parks_smoking_detectionWhereInput> | null
    intrusionDetection?: XOR<Parks_intrusion_detectionNullableScalarRelationFilter, parks_intrusion_detectionWhereInput> | null
  }, "id">

  export type intranet_posting_historyOrderByWithAggregationInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrderInput | SortOrder
    intrusionDetectionId?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    intranet_id?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    time?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    _count?: intranet_posting_historyCountOrderByAggregateInput
    _avg?: intranet_posting_historyAvgOrderByAggregateInput
    _max?: intranet_posting_historyMaxOrderByAggregateInput
    _min?: intranet_posting_historyMinOrderByAggregateInput
    _sum?: intranet_posting_historySumOrderByAggregateInput
  }

  export type intranet_posting_historyScalarWhereWithAggregatesInput = {
    AND?: intranet_posting_historyScalarWhereWithAggregatesInput | intranet_posting_historyScalarWhereWithAggregatesInput[]
    OR?: intranet_posting_historyScalarWhereWithAggregatesInput[]
    NOT?: intranet_posting_historyScalarWhereWithAggregatesInput | intranet_posting_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"intranet_posting_history"> | number
    smokingDetectionId?: IntNullableWithAggregatesFilter<"intranet_posting_history"> | number | null
    intrusionDetectionId?: IntNullableWithAggregatesFilter<"intranet_posting_history"> | number | null
    title?: StringNullableWithAggregatesFilter<"intranet_posting_history"> | string | null
    intranet_id?: StringNullableWithAggregatesFilter<"intranet_posting_history"> | string | null
    comments?: StringNullableWithAggregatesFilter<"intranet_posting_history"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"intranet_posting_history"> | Date | string | null
    time?: DateTimeNullableWithAggregatesFilter<"intranet_posting_history"> | Date | string | null
    abc1?: StringNullableWithAggregatesFilter<"intranet_posting_history"> | string | null
    abc2?: StringNullableWithAggregatesFilter<"intranet_posting_history"> | string | null
    abc3?: StringNullableWithAggregatesFilter<"intranet_posting_history"> | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    Id?: IntFilter<"users"> | number
    emp_Id?: StringNullableFilter<"users"> | string | null
    gender?: StringNullableFilter<"users"> | string | null
    emp__eng_name?: StringNullableFilter<"users"> | string | null
    emp__arabic_name?: StringNullableFilter<"users"> | string | null
    country_code?: StringNullableFilter<"users"> | string | null
    phone?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    dep_eng_name?: StringNullableFilter<"users"> | string | null
    dep_arabic_name?: StringNullableFilter<"users"> | string | null
    desig_eng_name?: StringNullableFilter<"users"> | string | null
    desig_arabic_name?: StringNullableFilter<"users"> | string | null
    unit_eng_name?: StringNullableFilter<"users"> | string | null
    unit_arabic_name?: StringNullableFilter<"users"> | string | null
    committe_eng_name?: StringNullableFilter<"users"> | string | null
    committe_arabic_name?: StringNullableFilter<"users"> | string | null
    ai_engine_access?: BoolNullableFilter<"users"> | boolean | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"users"> | Date | string | null
    updatedAt?: DateTimeFilter<"users"> | Date | string
    role_Id?: IntNullableFilter<"users"> | number | null
    live_stream_favourites?: Live_stream_favouritesListRelationFilter
    parks_attendance?: Parks_attendanceListRelationFilter
    offices_attendance?: Offices_attendanceListRelationFilter
    offices_footfall_analysis?: Offices_footfall_analysisListRelationFilter
    users_roles?: XOR<Users_rolesNullableScalarRelationFilter, users_rolesWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    Id?: SortOrder
    emp_Id?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    emp__eng_name?: SortOrderInput | SortOrder
    emp__arabic_name?: SortOrderInput | SortOrder
    country_code?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    dep_eng_name?: SortOrderInput | SortOrder
    dep_arabic_name?: SortOrderInput | SortOrder
    desig_eng_name?: SortOrderInput | SortOrder
    desig_arabic_name?: SortOrderInput | SortOrder
    unit_eng_name?: SortOrderInput | SortOrder
    unit_arabic_name?: SortOrderInput | SortOrder
    committe_eng_name?: SortOrderInput | SortOrder
    committe_arabic_name?: SortOrderInput | SortOrder
    ai_engine_access?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    role_Id?: SortOrderInput | SortOrder
    live_stream_favourites?: live_stream_favouritesOrderByRelationAggregateInput
    parks_attendance?: parks_attendanceOrderByRelationAggregateInput
    offices_attendance?: offices_attendanceOrderByRelationAggregateInput
    offices_footfall_analysis?: offices_footfall_analysisOrderByRelationAggregateInput
    users_roles?: users_rolesOrderByWithRelationInput
    _relevance?: usersOrderByRelevanceInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    emp_Id?: StringNullableFilter<"users"> | string | null
    gender?: StringNullableFilter<"users"> | string | null
    emp__eng_name?: StringNullableFilter<"users"> | string | null
    emp__arabic_name?: StringNullableFilter<"users"> | string | null
    country_code?: StringNullableFilter<"users"> | string | null
    phone?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    dep_eng_name?: StringNullableFilter<"users"> | string | null
    dep_arabic_name?: StringNullableFilter<"users"> | string | null
    desig_eng_name?: StringNullableFilter<"users"> | string | null
    desig_arabic_name?: StringNullableFilter<"users"> | string | null
    unit_eng_name?: StringNullableFilter<"users"> | string | null
    unit_arabic_name?: StringNullableFilter<"users"> | string | null
    committe_eng_name?: StringNullableFilter<"users"> | string | null
    committe_arabic_name?: StringNullableFilter<"users"> | string | null
    ai_engine_access?: BoolNullableFilter<"users"> | boolean | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"users"> | Date | string | null
    updatedAt?: DateTimeFilter<"users"> | Date | string
    role_Id?: IntNullableFilter<"users"> | number | null
    live_stream_favourites?: Live_stream_favouritesListRelationFilter
    parks_attendance?: Parks_attendanceListRelationFilter
    offices_attendance?: Offices_attendanceListRelationFilter
    offices_footfall_analysis?: Offices_footfall_analysisListRelationFilter
    users_roles?: XOR<Users_rolesNullableScalarRelationFilter, users_rolesWhereInput> | null
  }, "Id">

  export type usersOrderByWithAggregationInput = {
    Id?: SortOrder
    emp_Id?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    emp__eng_name?: SortOrderInput | SortOrder
    emp__arabic_name?: SortOrderInput | SortOrder
    country_code?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    dep_eng_name?: SortOrderInput | SortOrder
    dep_arabic_name?: SortOrderInput | SortOrder
    desig_eng_name?: SortOrderInput | SortOrder
    desig_arabic_name?: SortOrderInput | SortOrder
    unit_eng_name?: SortOrderInput | SortOrder
    unit_arabic_name?: SortOrderInput | SortOrder
    committe_eng_name?: SortOrderInput | SortOrder
    committe_arabic_name?: SortOrderInput | SortOrder
    ai_engine_access?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    role_Id?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"users"> | number
    emp_Id?: StringNullableWithAggregatesFilter<"users"> | string | null
    gender?: StringNullableWithAggregatesFilter<"users"> | string | null
    emp__eng_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    emp__arabic_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    country_code?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    dep_eng_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    dep_arabic_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    desig_eng_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    desig_arabic_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    unit_eng_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    unit_arabic_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    committe_eng_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    committe_arabic_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    ai_engine_access?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    last_login?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
    role_Id?: IntNullableWithAggregatesFilter<"users"> | number | null
  }

  export type users_permissionsWhereInput = {
    AND?: users_permissionsWhereInput | users_permissionsWhereInput[]
    OR?: users_permissionsWhereInput[]
    NOT?: users_permissionsWhereInput | users_permissionsWhereInput[]
    Id?: IntFilter<"users_permissions"> | number
    role_Id?: IntNullableFilter<"users_permissions"> | number | null
    dashboard_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    system_report_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    alerts_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    my_account_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    settings_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    createdAt?: DateTimeNullableFilter<"users_permissions"> | Date | string | null
    updatedAt?: DateTimeFilter<"users_permissions"> | Date | string
    users_roles?: XOR<Users_rolesNullableScalarRelationFilter, users_rolesWhereInput> | null
  }

  export type users_permissionsOrderByWithRelationInput = {
    Id?: SortOrder
    role_Id?: SortOrderInput | SortOrder
    dashboard_view?: SortOrderInput | SortOrder
    role_permission_view?: SortOrderInput | SortOrder
    role_permission_add?: SortOrderInput | SortOrder
    role_permission_update?: SortOrderInput | SortOrder
    offices_view?: SortOrderInput | SortOrder
    offices_add?: SortOrderInput | SortOrder
    offices_update?: SortOrderInput | SortOrder
    parks_view?: SortOrderInput | SortOrder
    parks_add?: SortOrderInput | SortOrder
    parks_update?: SortOrderInput | SortOrder
    system_report_view?: SortOrderInput | SortOrder
    alerts_view?: SortOrderInput | SortOrder
    office_attendance_view?: SortOrderInput | SortOrder
    office_attendance_add?: SortOrderInput | SortOrder
    office_attendance_update?: SortOrderInput | SortOrder
    office_footfall_view?: SortOrderInput | SortOrder
    office_footfall_add?: SortOrderInput | SortOrder
    office_footfall_update?: SortOrderInput | SortOrder
    office_sentimental_view?: SortOrderInput | SortOrder
    office_sentimental_add?: SortOrderInput | SortOrder
    office_sentimental_update?: SortOrderInput | SortOrder
    park_attendance_view?: SortOrderInput | SortOrder
    park_attendance_add?: SortOrderInput | SortOrder
    park_attendance_update?: SortOrderInput | SortOrder
    park_footfall_view?: SortOrderInput | SortOrder
    park_footfall_add?: SortOrderInput | SortOrder
    park_footfall_update?: SortOrderInput | SortOrder
    park_sentimental_view?: SortOrderInput | SortOrder
    park_sentimental_add?: SortOrderInput | SortOrder
    park_sentimental_update?: SortOrderInput | SortOrder
    park_irrigation_view?: SortOrderInput | SortOrder
    park_irrigation_add?: SortOrderInput | SortOrder
    park_irrigation_update?: SortOrderInput | SortOrder
    park_landscaping_view?: SortOrderInput | SortOrder
    park_landscaping_add?: SortOrderInput | SortOrder
    park_landscaping_update?: SortOrderInput | SortOrder
    park_litter_detection_view?: SortOrderInput | SortOrder
    park_litter_detection_add?: SortOrderInput | SortOrder
    park_litter_detection_update?: SortOrderInput | SortOrder
    park_intrusion_detection_view?: SortOrderInput | SortOrder
    park_intrusion_detection_add?: SortOrderInput | SortOrder
    park_intrusion_detection_update?: SortOrderInput | SortOrder
    park_smoking_detection_view?: SortOrderInput | SortOrder
    park_smoking_detection_add?: SortOrderInput | SortOrder
    park_smoking_detection_update?: SortOrderInput | SortOrder
    my_account_view?: SortOrderInput | SortOrder
    settings_view?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    users_roles?: users_rolesOrderByWithRelationInput
  }

  export type users_permissionsWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: users_permissionsWhereInput | users_permissionsWhereInput[]
    OR?: users_permissionsWhereInput[]
    NOT?: users_permissionsWhereInput | users_permissionsWhereInput[]
    role_Id?: IntNullableFilter<"users_permissions"> | number | null
    dashboard_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    system_report_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    alerts_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    my_account_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    settings_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    createdAt?: DateTimeNullableFilter<"users_permissions"> | Date | string | null
    updatedAt?: DateTimeFilter<"users_permissions"> | Date | string
    users_roles?: XOR<Users_rolesNullableScalarRelationFilter, users_rolesWhereInput> | null
  }, "Id">

  export type users_permissionsOrderByWithAggregationInput = {
    Id?: SortOrder
    role_Id?: SortOrderInput | SortOrder
    dashboard_view?: SortOrderInput | SortOrder
    role_permission_view?: SortOrderInput | SortOrder
    role_permission_add?: SortOrderInput | SortOrder
    role_permission_update?: SortOrderInput | SortOrder
    offices_view?: SortOrderInput | SortOrder
    offices_add?: SortOrderInput | SortOrder
    offices_update?: SortOrderInput | SortOrder
    parks_view?: SortOrderInput | SortOrder
    parks_add?: SortOrderInput | SortOrder
    parks_update?: SortOrderInput | SortOrder
    system_report_view?: SortOrderInput | SortOrder
    alerts_view?: SortOrderInput | SortOrder
    office_attendance_view?: SortOrderInput | SortOrder
    office_attendance_add?: SortOrderInput | SortOrder
    office_attendance_update?: SortOrderInput | SortOrder
    office_footfall_view?: SortOrderInput | SortOrder
    office_footfall_add?: SortOrderInput | SortOrder
    office_footfall_update?: SortOrderInput | SortOrder
    office_sentimental_view?: SortOrderInput | SortOrder
    office_sentimental_add?: SortOrderInput | SortOrder
    office_sentimental_update?: SortOrderInput | SortOrder
    park_attendance_view?: SortOrderInput | SortOrder
    park_attendance_add?: SortOrderInput | SortOrder
    park_attendance_update?: SortOrderInput | SortOrder
    park_footfall_view?: SortOrderInput | SortOrder
    park_footfall_add?: SortOrderInput | SortOrder
    park_footfall_update?: SortOrderInput | SortOrder
    park_sentimental_view?: SortOrderInput | SortOrder
    park_sentimental_add?: SortOrderInput | SortOrder
    park_sentimental_update?: SortOrderInput | SortOrder
    park_irrigation_view?: SortOrderInput | SortOrder
    park_irrigation_add?: SortOrderInput | SortOrder
    park_irrigation_update?: SortOrderInput | SortOrder
    park_landscaping_view?: SortOrderInput | SortOrder
    park_landscaping_add?: SortOrderInput | SortOrder
    park_landscaping_update?: SortOrderInput | SortOrder
    park_litter_detection_view?: SortOrderInput | SortOrder
    park_litter_detection_add?: SortOrderInput | SortOrder
    park_litter_detection_update?: SortOrderInput | SortOrder
    park_intrusion_detection_view?: SortOrderInput | SortOrder
    park_intrusion_detection_add?: SortOrderInput | SortOrder
    park_intrusion_detection_update?: SortOrderInput | SortOrder
    park_smoking_detection_view?: SortOrderInput | SortOrder
    park_smoking_detection_add?: SortOrderInput | SortOrder
    park_smoking_detection_update?: SortOrderInput | SortOrder
    my_account_view?: SortOrderInput | SortOrder
    settings_view?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: users_permissionsCountOrderByAggregateInput
    _avg?: users_permissionsAvgOrderByAggregateInput
    _max?: users_permissionsMaxOrderByAggregateInput
    _min?: users_permissionsMinOrderByAggregateInput
    _sum?: users_permissionsSumOrderByAggregateInput
  }

  export type users_permissionsScalarWhereWithAggregatesInput = {
    AND?: users_permissionsScalarWhereWithAggregatesInput | users_permissionsScalarWhereWithAggregatesInput[]
    OR?: users_permissionsScalarWhereWithAggregatesInput[]
    NOT?: users_permissionsScalarWhereWithAggregatesInput | users_permissionsScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"users_permissions"> | number
    role_Id?: IntNullableWithAggregatesFilter<"users_permissions"> | number | null
    dashboard_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    role_permission_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    role_permission_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    role_permission_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    offices_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    offices_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    offices_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    parks_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    parks_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    parks_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    system_report_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    alerts_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_attendance_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_attendance_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_attendance_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_footfall_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_footfall_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_footfall_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_sentimental_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_sentimental_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    office_sentimental_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_attendance_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_attendance_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_attendance_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_footfall_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_footfall_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_footfall_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_sentimental_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_sentimental_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_sentimental_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_irrigation_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_irrigation_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_irrigation_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_landscaping_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_landscaping_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_landscaping_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_litter_detection_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_litter_detection_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_litter_detection_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_smoking_detection_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_smoking_detection_add?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    park_smoking_detection_update?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    my_account_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    settings_view?: BoolNullableWithAggregatesFilter<"users_permissions"> | boolean | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"users_permissions"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"users_permissions"> | Date | string
  }

  export type users_rolesWhereInput = {
    AND?: users_rolesWhereInput | users_rolesWhereInput[]
    OR?: users_rolesWhereInput[]
    NOT?: users_rolesWhereInput | users_rolesWhereInput[]
    Id?: IntFilter<"users_roles"> | number
    role_name?: StringNullableFilter<"users_roles"> | string | null
    createdAt?: DateTimeNullableFilter<"users_roles"> | Date | string | null
    updatedAt?: DateTimeFilter<"users_roles"> | Date | string
    users?: UsersListRelationFilter
    users_permissions?: Users_permissionsListRelationFilter
  }

  export type users_rolesOrderByWithRelationInput = {
    Id?: SortOrder
    role_name?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    users?: usersOrderByRelationAggregateInput
    users_permissions?: users_permissionsOrderByRelationAggregateInput
    _relevance?: users_rolesOrderByRelevanceInput
  }

  export type users_rolesWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: users_rolesWhereInput | users_rolesWhereInput[]
    OR?: users_rolesWhereInput[]
    NOT?: users_rolesWhereInput | users_rolesWhereInput[]
    role_name?: StringNullableFilter<"users_roles"> | string | null
    createdAt?: DateTimeNullableFilter<"users_roles"> | Date | string | null
    updatedAt?: DateTimeFilter<"users_roles"> | Date | string
    users?: UsersListRelationFilter
    users_permissions?: Users_permissionsListRelationFilter
  }, "Id">

  export type users_rolesOrderByWithAggregationInput = {
    Id?: SortOrder
    role_name?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: users_rolesCountOrderByAggregateInput
    _avg?: users_rolesAvgOrderByAggregateInput
    _max?: users_rolesMaxOrderByAggregateInput
    _min?: users_rolesMinOrderByAggregateInput
    _sum?: users_rolesSumOrderByAggregateInput
  }

  export type users_rolesScalarWhereWithAggregatesInput = {
    AND?: users_rolesScalarWhereWithAggregatesInput | users_rolesScalarWhereWithAggregatesInput[]
    OR?: users_rolesScalarWhereWithAggregatesInput[]
    NOT?: users_rolesScalarWhereWithAggregatesInput | users_rolesScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"users_roles"> | number
    role_name?: StringNullableWithAggregatesFilter<"users_roles"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"users_roles"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"users_roles"> | Date | string
  }

  export type parks_footfall_analysisWhereInput = {
    AND?: parks_footfall_analysisWhereInput | parks_footfall_analysisWhereInput[]
    OR?: parks_footfall_analysisWhereInput[]
    NOT?: parks_footfall_analysisWhereInput | parks_footfall_analysisWhereInput[]
    id?: IntFilter<"parks_footfall_analysis"> | number
    park_Id?: IntFilter<"parks_footfall_analysis"> | number
    detection_Id?: StringFilter<"parks_footfall_analysis"> | string
    person_Id?: IntFilter<"parks_footfall_analysis"> | number
    gender?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    is_child?: BoolFilter<"parks_footfall_analysis"> | boolean
    time?: DateTimeFilter<"parks_footfall_analysis"> | Date | string
    detected_camera_Id?: StringFilter<"parks_footfall_analysis"> | string
    detected_camera_name?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc1?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc2?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc3?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    park?: XOR<ParksScalarRelationFilter, parksWhereInput>
  }

  export type parks_footfall_analysisOrderByWithRelationInput = {
    id?: SortOrder
    park_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrderInput | SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    park?: parksOrderByWithRelationInput
    _relevance?: parks_footfall_analysisOrderByRelevanceInput
  }

  export type parks_footfall_analysisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: parks_footfall_analysisWhereInput | parks_footfall_analysisWhereInput[]
    OR?: parks_footfall_analysisWhereInput[]
    NOT?: parks_footfall_analysisWhereInput | parks_footfall_analysisWhereInput[]
    park_Id?: IntFilter<"parks_footfall_analysis"> | number
    detection_Id?: StringFilter<"parks_footfall_analysis"> | string
    person_Id?: IntFilter<"parks_footfall_analysis"> | number
    gender?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    is_child?: BoolFilter<"parks_footfall_analysis"> | boolean
    time?: DateTimeFilter<"parks_footfall_analysis"> | Date | string
    detected_camera_Id?: StringFilter<"parks_footfall_analysis"> | string
    detected_camera_name?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc1?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc2?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc3?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    park?: XOR<ParksScalarRelationFilter, parksWhereInput>
  }, "id">

  export type parks_footfall_analysisOrderByWithAggregationInput = {
    id?: SortOrder
    park_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrderInput | SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    _count?: parks_footfall_analysisCountOrderByAggregateInput
    _avg?: parks_footfall_analysisAvgOrderByAggregateInput
    _max?: parks_footfall_analysisMaxOrderByAggregateInput
    _min?: parks_footfall_analysisMinOrderByAggregateInput
    _sum?: parks_footfall_analysisSumOrderByAggregateInput
  }

  export type parks_footfall_analysisScalarWhereWithAggregatesInput = {
    AND?: parks_footfall_analysisScalarWhereWithAggregatesInput | parks_footfall_analysisScalarWhereWithAggregatesInput[]
    OR?: parks_footfall_analysisScalarWhereWithAggregatesInput[]
    NOT?: parks_footfall_analysisScalarWhereWithAggregatesInput | parks_footfall_analysisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"parks_footfall_analysis"> | number
    park_Id?: IntWithAggregatesFilter<"parks_footfall_analysis"> | number
    detection_Id?: StringWithAggregatesFilter<"parks_footfall_analysis"> | string
    person_Id?: IntWithAggregatesFilter<"parks_footfall_analysis"> | number
    gender?: StringNullableWithAggregatesFilter<"parks_footfall_analysis"> | string | null
    is_child?: BoolWithAggregatesFilter<"parks_footfall_analysis"> | boolean
    time?: DateTimeWithAggregatesFilter<"parks_footfall_analysis"> | Date | string
    detected_camera_Id?: StringWithAggregatesFilter<"parks_footfall_analysis"> | string
    detected_camera_name?: StringNullableWithAggregatesFilter<"parks_footfall_analysis"> | string | null
    abc1?: StringNullableWithAggregatesFilter<"parks_footfall_analysis"> | string | null
    abc2?: StringNullableWithAggregatesFilter<"parks_footfall_analysis"> | string | null
    abc3?: StringNullableWithAggregatesFilter<"parks_footfall_analysis"> | string | null
  }

  export type offices_footfall_analysisWhereInput = {
    AND?: offices_footfall_analysisWhereInput | offices_footfall_analysisWhereInput[]
    OR?: offices_footfall_analysisWhereInput[]
    NOT?: offices_footfall_analysisWhereInput | offices_footfall_analysisWhereInput[]
    id?: IntFilter<"offices_footfall_analysis"> | number
    office_Id?: IntFilter<"offices_footfall_analysis"> | number
    detection_Id?: StringFilter<"offices_footfall_analysis"> | string
    person_Id?: IntFilter<"offices_footfall_analysis"> | number
    gender?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    is_child?: BoolFilter<"offices_footfall_analysis"> | boolean
    time?: DateTimeFilter<"offices_footfall_analysis"> | Date | string
    detected_camera_Id?: StringFilter<"offices_footfall_analysis"> | string
    detected_camera_name?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc1?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc2?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc3?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    office?: XOR<OfficesScalarRelationFilter, officesWhereInput>
    person?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type offices_footfall_analysisOrderByWithRelationInput = {
    id?: SortOrder
    office_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrderInput | SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    office?: officesOrderByWithRelationInput
    person?: usersOrderByWithRelationInput
    _relevance?: offices_footfall_analysisOrderByRelevanceInput
  }

  export type offices_footfall_analysisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: offices_footfall_analysisWhereInput | offices_footfall_analysisWhereInput[]
    OR?: offices_footfall_analysisWhereInput[]
    NOT?: offices_footfall_analysisWhereInput | offices_footfall_analysisWhereInput[]
    office_Id?: IntFilter<"offices_footfall_analysis"> | number
    detection_Id?: StringFilter<"offices_footfall_analysis"> | string
    person_Id?: IntFilter<"offices_footfall_analysis"> | number
    gender?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    is_child?: BoolFilter<"offices_footfall_analysis"> | boolean
    time?: DateTimeFilter<"offices_footfall_analysis"> | Date | string
    detected_camera_Id?: StringFilter<"offices_footfall_analysis"> | string
    detected_camera_name?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc1?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc2?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc3?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    office?: XOR<OfficesScalarRelationFilter, officesWhereInput>
    person?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type offices_footfall_analysisOrderByWithAggregationInput = {
    id?: SortOrder
    office_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrderInput | SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrderInput | SortOrder
    abc1?: SortOrderInput | SortOrder
    abc2?: SortOrderInput | SortOrder
    abc3?: SortOrderInput | SortOrder
    _count?: offices_footfall_analysisCountOrderByAggregateInput
    _avg?: offices_footfall_analysisAvgOrderByAggregateInput
    _max?: offices_footfall_analysisMaxOrderByAggregateInput
    _min?: offices_footfall_analysisMinOrderByAggregateInput
    _sum?: offices_footfall_analysisSumOrderByAggregateInput
  }

  export type offices_footfall_analysisScalarWhereWithAggregatesInput = {
    AND?: offices_footfall_analysisScalarWhereWithAggregatesInput | offices_footfall_analysisScalarWhereWithAggregatesInput[]
    OR?: offices_footfall_analysisScalarWhereWithAggregatesInput[]
    NOT?: offices_footfall_analysisScalarWhereWithAggregatesInput | offices_footfall_analysisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"offices_footfall_analysis"> | number
    office_Id?: IntWithAggregatesFilter<"offices_footfall_analysis"> | number
    detection_Id?: StringWithAggregatesFilter<"offices_footfall_analysis"> | string
    person_Id?: IntWithAggregatesFilter<"offices_footfall_analysis"> | number
    gender?: StringNullableWithAggregatesFilter<"offices_footfall_analysis"> | string | null
    is_child?: BoolWithAggregatesFilter<"offices_footfall_analysis"> | boolean
    time?: DateTimeWithAggregatesFilter<"offices_footfall_analysis"> | Date | string
    detected_camera_Id?: StringWithAggregatesFilter<"offices_footfall_analysis"> | string
    detected_camera_name?: StringNullableWithAggregatesFilter<"offices_footfall_analysis"> | string | null
    abc1?: StringNullableWithAggregatesFilter<"offices_footfall_analysis"> | string | null
    abc2?: StringNullableWithAggregatesFilter<"offices_footfall_analysis"> | string | null
    abc3?: StringNullableWithAggregatesFilter<"offices_footfall_analysis"> | string | null
  }

  export type access_secretCreateInput = {
    value?: string | null
  }

  export type access_secretUncheckedCreateInput = {
    Id?: number
    value?: string | null
  }

  export type access_secretUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type access_secretUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type access_secretCreateManyInput = {
    Id?: number
    value?: string | null
  }

  export type access_secretUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type access_secretUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type live_stream_favouritesCreateInput = {
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersCreateNestedOneWithoutLive_stream_favouritesInput
    park_cameras?: park_camerasCreateNestedOneWithoutLive_stream_favouritesInput
    offices_cameras?: offices_camerasCreateNestedOneWithoutLive_stream_favouritesInput
  }

  export type live_stream_favouritesUncheckedCreateInput = {
    Id?: number
    emp_Id?: number | null
    park_camera_Id?: number | null
    office_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesUpdateInput = {
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutLive_stream_favouritesNestedInput
    park_cameras?: park_camerasUpdateOneWithoutLive_stream_favouritesNestedInput
    offices_cameras?: offices_camerasUpdateOneWithoutLive_stream_favouritesNestedInput
  }

  export type live_stream_favouritesUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableIntFieldUpdateOperationsInput | number | null
    park_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    office_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesCreateManyInput = {
    Id?: number
    emp_Id?: number | null
    park_camera_Id?: number | null
    office_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesUpdateManyMutationInput = {
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableIntFieldUpdateOperationsInput | number | null
    park_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    office_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type office_streamsCreateInput = {
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    offices?: officesCreateNestedOneWithoutOffice_streamsInput
  }

  export type office_streamsUncheckedCreateInput = {
    Id?: number
    office_Id?: number | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type office_streamsUpdateInput = {
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    offices?: officesUpdateOneWithoutOffice_streamsNestedInput
  }

  export type office_streamsUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type office_streamsCreateManyInput = {
    Id?: number
    office_Id?: number | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type office_streamsUpdateManyMutationInput = {
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type office_streamsUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type officesCreateInput = {
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutOfficeInput
  }

  export type officesUncheckedCreateInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsUncheckedCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasUncheckedCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutOfficeInput
  }

  export type officesUpdateInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutOfficeNestedInput
  }

  export type officesUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUncheckedUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUncheckedUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutOfficeNestedInput
  }

  export type officesCreateManyInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
  }

  export type officesUpdateManyMutationInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type officesUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type offices_attendanceCreateInput = {
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    office?: officesCreateNestedOneWithoutOffices_attendanceInput
    user?: usersCreateNestedOneWithoutOffices_attendanceInput
  }

  export type offices_attendanceUncheckedCreateInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_attendanceUpdateInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    office?: officesUpdateOneWithoutOffices_attendanceNestedInput
    user?: usersUpdateOneWithoutOffices_attendanceNestedInput
  }

  export type offices_attendanceUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_attendanceCreateManyInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_attendanceUpdateManyMutationInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_attendanceUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_camerasCreateInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutOffices_camerasInput
    offices?: officesCreateNestedOneWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasUncheckedCreateInput = {
    Id?: number
    office_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasUpdateInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutOffices_camerasNestedInput
    offices?: officesUpdateOneWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasCreateManyInput = {
    Id?: number
    office_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
  }

  export type offices_camerasUpdateManyMutationInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
  }

  export type offices_camerasUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
  }

  export type offices_sentiment_analysisCreateInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    offices?: officesCreateNestedOneWithoutOffices_sentiment_analysisInput
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_sentiment_analysisUncheckedCreateInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisUpdateInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    offices?: officesUpdateOneWithoutOffices_sentiment_analysisNestedInput
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_sentiment_analysisUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisCreateManyInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisUpdateManyMutationInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_camerasCreateInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUpdateInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasCreateManyInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
  }

  export type park_camerasUpdateManyMutationInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type park_camerasUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type park_streamsCreateInput = {
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutPark_streamsInput
  }

  export type park_streamsUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type park_streamsUpdateInput = {
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutPark_streamsNestedInput
  }

  export type park_streamsUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_streamsCreateManyInput = {
    Id?: number
    park_Id?: number | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type park_streamsUpdateManyMutationInput = {
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_streamsUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TermsPrivacyCreateInput = {
    terms?: string | null
    privacyPolicy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TermsPrivacyUncheckedCreateInput = {
    id?: number
    terms?: string | null
    privacyPolicy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TermsPrivacyUpdateInput = {
    terms?: NullableStringFieldUpdateOperationsInput | string | null
    privacyPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TermsPrivacyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    terms?: NullableStringFieldUpdateOperationsInput | string | null
    privacyPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TermsPrivacyCreateManyInput = {
    id?: number
    terms?: string | null
    privacyPolicy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TermsPrivacyUpdateManyMutationInput = {
    terms?: NullableStringFieldUpdateOperationsInput | string | null
    privacyPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TermsPrivacyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    terms?: NullableStringFieldUpdateOperationsInput | string | null
    privacyPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FAQCreateInput = {
    question: string
    answer: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FAQUncheckedCreateInput = {
    id?: number
    question: string
    answer: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FAQUpdateInput = {
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FAQUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FAQCreateManyInput = {
    id?: number
    question: string
    answer: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FAQUpdateManyMutationInput = {
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FAQUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_zonesCreateInput = {
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    parks?: parksCreateNestedOneWithoutPark_zonesInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutPark_zonesInput
  }

  export type park_zonesUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutPark_zonesInput
  }

  export type park_zonesUpdateInput = {
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    parks?: parksUpdateOneWithoutPark_zonesNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutPark_zonesNestedInput
  }

  export type park_zonesUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutPark_zonesNestedInput
  }

  export type park_zonesCreateManyInput = {
    Id?: number
    park_Id?: number | null
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
  }

  export type park_zonesUpdateManyMutationInput = {
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type park_zonesUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parksCreateInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksUpdateInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type parksCreateManyInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
  }

  export type parksUpdateManyMutationInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parksUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parks_attendanceCreateInput = {
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park?: parksCreateNestedOneWithoutParks_attendanceInput
    user?: usersCreateNestedOneWithoutParks_attendanceInput
  }

  export type parks_attendanceUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_attendanceUpdateInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park?: parksUpdateOneWithoutParks_attendanceNestedInput
    user?: usersUpdateOneWithoutParks_attendanceNestedInput
  }

  export type parks_attendanceUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_attendanceCreateManyInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_attendanceUpdateManyMutationInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_attendanceUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsCreateInput = {
    person_Id?: string | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_behaviour_alertsInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_behaviour_alertsInput
  }

  export type parks_behaviour_alertsUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    camera_Id?: number | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_behaviour_alertsUpdateInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_behaviour_alertsNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_behaviour_alertsNestedInput
  }

  export type parks_behaviour_alertsUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsCreateManyInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    camera_Id?: number | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_behaviour_alertsUpdateManyMutationInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_intrusion_detectionCreateInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_intrusion_detectionInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_intrusion_detectionInput
    intranet_posting_history?: intranet_posting_historyCreateNestedManyWithoutIntrusionDetectionInput
  }

  export type parks_intrusion_detectionUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedCreateNestedManyWithoutIntrusionDetectionInput
  }

  export type parks_intrusion_detectionUpdateInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_intrusion_detectionNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_intrusion_detectionNestedInput
    intranet_posting_history?: intranet_posting_historyUpdateManyWithoutIntrusionDetectionNestedInput
  }

  export type parks_intrusion_detectionUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedUpdateManyWithoutIntrusionDetectionNestedInput
  }

  export type parks_intrusion_detectionCreateManyInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_intrusion_detectionUpdateManyMutationInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_intrusion_detectionUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyCreateInput = {
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_irrigation_job_historyInput
    park_zones?: park_zonesCreateNestedOneWithoutParks_irrigation_job_historyInput
  }

  export type parks_irrigation_job_historyUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    zone_Id?: number | null
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_irrigation_job_historyUpdateInput = {
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_irrigation_job_historyNestedInput
    park_zones?: park_zonesUpdateOneWithoutParks_irrigation_job_historyNestedInput
  }

  export type parks_irrigation_job_historyUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    zone_Id?: NullableIntFieldUpdateOperationsInput | number | null
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyCreateManyInput = {
    Id?: number
    park_Id?: number | null
    zone_Id?: number | null
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_irrigation_job_historyUpdateManyMutationInput = {
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    zone_Id?: NullableIntFieldUpdateOperationsInput | number | null
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_landscapingCreateInput = {
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_landscapingInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_landscapingInput
    ticket_details?: ticket_details_tableCreateNestedManyWithoutParks_landscapingInput
  }

  export type parks_landscapingUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    ticket_details?: ticket_details_tableUncheckedCreateNestedManyWithoutParks_landscapingInput
  }

  export type parks_landscapingUpdateInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_landscapingNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_landscapingNestedInput
    ticket_details?: ticket_details_tableUpdateManyWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket_details?: ticket_details_tableUncheckedUpdateManyWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingCreateManyInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_landscapingUpdateManyMutationInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_landscapingUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_litter_detectionCreateInput = {
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_litter_detectionInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_litter_detectionInput
    ticket_details?: ticket_details_tableCreateNestedManyWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    ticket_details?: ticket_details_tableUncheckedCreateNestedManyWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionUpdateInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_litter_detectionNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_litter_detectionNestedInput
    ticket_details?: ticket_details_tableUpdateManyWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket_details?: ticket_details_tableUncheckedUpdateManyWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionCreateManyInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_litter_detectionUpdateManyMutationInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_litter_detectionUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ticket_details_tableCreateInput = {
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks_litter_detection?: parks_litter_detectionCreateNestedOneWithoutTicket_detailsInput
    parks_landscaping?: parks_landscapingCreateNestedOneWithoutTicket_detailsInput
  }

  export type ticket_details_tableUncheckedCreateInput = {
    id?: number
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    litterDetectionId?: number | null
    landscapingId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ticket_details_tableUpdateInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks_litter_detection?: parks_litter_detectionUpdateOneWithoutTicket_detailsNestedInput
    parks_landscaping?: parks_landscapingUpdateOneWithoutTicket_detailsNestedInput
  }

  export type ticket_details_tableUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    litterDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    landscapingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ticket_details_tableCreateManyInput = {
    id?: number
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    litterDetectionId?: number | null
    landscapingId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ticket_details_tableUpdateManyMutationInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ticket_details_tableUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    litterDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    landscapingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisCreateInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_sentiment_analysisInput
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
  }

  export type parks_sentiment_analysisUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisUpdateInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_sentiment_analysisNestedInput
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
  }

  export type parks_sentiment_analysisUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisCreateManyInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisUpdateManyMutationInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_smoking_detectionCreateInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_smoking_detectionInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_smoking_detectionInput
    intranet_posting_history?: intranet_posting_historyCreateNestedManyWithoutSmokingDetectionInput
  }

  export type parks_smoking_detectionUncheckedCreateInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedCreateNestedManyWithoutSmokingDetectionInput
  }

  export type parks_smoking_detectionUpdateInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_smoking_detectionNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_smoking_detectionNestedInput
    intranet_posting_history?: intranet_posting_historyUpdateManyWithoutSmokingDetectionNestedInput
  }

  export type parks_smoking_detectionUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedUpdateManyWithoutSmokingDetectionNestedInput
  }

  export type parks_smoking_detectionCreateManyInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_smoking_detectionUpdateManyMutationInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_smoking_detectionUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type intranet_posting_historyCreateInput = {
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    smokingDetection?: parks_smoking_detectionCreateNestedOneWithoutIntranet_posting_historyInput
    intrusionDetection?: parks_intrusion_detectionCreateNestedOneWithoutIntranet_posting_historyInput
  }

  export type intranet_posting_historyUncheckedCreateInput = {
    id?: number
    smokingDetectionId?: number | null
    intrusionDetectionId?: number | null
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type intranet_posting_historyUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    smokingDetection?: parks_smoking_detectionUpdateOneWithoutIntranet_posting_historyNestedInput
    intrusionDetection?: parks_intrusion_detectionUpdateOneWithoutIntranet_posting_historyNestedInput
  }

  export type intranet_posting_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    smokingDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    intrusionDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type intranet_posting_historyCreateManyInput = {
    id?: number
    smokingDetectionId?: number | null
    intrusionDetectionId?: number | null
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type intranet_posting_historyUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type intranet_posting_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    smokingDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    intrusionDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateInput = {
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutPersonInput
    users_roles?: users_rolesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    role_Id?: number | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutPersonInput
  }

  export type usersUpdateInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutPersonNestedInput
    users_roles?: users_rolesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type usersCreateManyInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    role_Id?: number | null
  }

  export type usersUpdateManyMutationInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type users_permissionsCreateInput = {
    dashboard_view?: boolean | null
    role_permission_view?: boolean | null
    role_permission_add?: boolean | null
    role_permission_update?: boolean | null
    offices_view?: boolean | null
    offices_add?: boolean | null
    offices_update?: boolean | null
    parks_view?: boolean | null
    parks_add?: boolean | null
    parks_update?: boolean | null
    system_report_view?: boolean | null
    alerts_view?: boolean | null
    office_attendance_view?: boolean | null
    office_attendance_add?: boolean | null
    office_attendance_update?: boolean | null
    office_footfall_view?: boolean | null
    office_footfall_add?: boolean | null
    office_footfall_update?: boolean | null
    office_sentimental_view?: boolean | null
    office_sentimental_add?: boolean | null
    office_sentimental_update?: boolean | null
    park_attendance_view?: boolean | null
    park_attendance_add?: boolean | null
    park_attendance_update?: boolean | null
    park_footfall_view?: boolean | null
    park_footfall_add?: boolean | null
    park_footfall_update?: boolean | null
    park_sentimental_view?: boolean | null
    park_sentimental_add?: boolean | null
    park_sentimental_update?: boolean | null
    park_irrigation_view?: boolean | null
    park_irrigation_add?: boolean | null
    park_irrigation_update?: boolean | null
    park_landscaping_view?: boolean | null
    park_landscaping_add?: boolean | null
    park_landscaping_update?: boolean | null
    park_litter_detection_view?: boolean | null
    park_litter_detection_add?: boolean | null
    park_litter_detection_update?: boolean | null
    park_intrusion_detection_view?: boolean | null
    park_intrusion_detection_add?: boolean | null
    park_intrusion_detection_update?: boolean | null
    park_smoking_detection_view?: boolean | null
    park_smoking_detection_add?: boolean | null
    park_smoking_detection_update?: boolean | null
    my_account_view?: boolean | null
    settings_view?: boolean | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users_roles?: users_rolesCreateNestedOneWithoutUsers_permissionsInput
  }

  export type users_permissionsUncheckedCreateInput = {
    Id?: number
    role_Id?: number | null
    dashboard_view?: boolean | null
    role_permission_view?: boolean | null
    role_permission_add?: boolean | null
    role_permission_update?: boolean | null
    offices_view?: boolean | null
    offices_add?: boolean | null
    offices_update?: boolean | null
    parks_view?: boolean | null
    parks_add?: boolean | null
    parks_update?: boolean | null
    system_report_view?: boolean | null
    alerts_view?: boolean | null
    office_attendance_view?: boolean | null
    office_attendance_add?: boolean | null
    office_attendance_update?: boolean | null
    office_footfall_view?: boolean | null
    office_footfall_add?: boolean | null
    office_footfall_update?: boolean | null
    office_sentimental_view?: boolean | null
    office_sentimental_add?: boolean | null
    office_sentimental_update?: boolean | null
    park_attendance_view?: boolean | null
    park_attendance_add?: boolean | null
    park_attendance_update?: boolean | null
    park_footfall_view?: boolean | null
    park_footfall_add?: boolean | null
    park_footfall_update?: boolean | null
    park_sentimental_view?: boolean | null
    park_sentimental_add?: boolean | null
    park_sentimental_update?: boolean | null
    park_irrigation_view?: boolean | null
    park_irrigation_add?: boolean | null
    park_irrigation_update?: boolean | null
    park_landscaping_view?: boolean | null
    park_landscaping_add?: boolean | null
    park_landscaping_update?: boolean | null
    park_litter_detection_view?: boolean | null
    park_litter_detection_add?: boolean | null
    park_litter_detection_update?: boolean | null
    park_intrusion_detection_view?: boolean | null
    park_intrusion_detection_add?: boolean | null
    park_intrusion_detection_update?: boolean | null
    park_smoking_detection_view?: boolean | null
    park_smoking_detection_add?: boolean | null
    park_smoking_detection_update?: boolean | null
    my_account_view?: boolean | null
    settings_view?: boolean | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type users_permissionsUpdateInput = {
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users_roles?: users_rolesUpdateOneWithoutUsers_permissionsNestedInput
  }

  export type users_permissionsUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_permissionsCreateManyInput = {
    Id?: number
    role_Id?: number | null
    dashboard_view?: boolean | null
    role_permission_view?: boolean | null
    role_permission_add?: boolean | null
    role_permission_update?: boolean | null
    offices_view?: boolean | null
    offices_add?: boolean | null
    offices_update?: boolean | null
    parks_view?: boolean | null
    parks_add?: boolean | null
    parks_update?: boolean | null
    system_report_view?: boolean | null
    alerts_view?: boolean | null
    office_attendance_view?: boolean | null
    office_attendance_add?: boolean | null
    office_attendance_update?: boolean | null
    office_footfall_view?: boolean | null
    office_footfall_add?: boolean | null
    office_footfall_update?: boolean | null
    office_sentimental_view?: boolean | null
    office_sentimental_add?: boolean | null
    office_sentimental_update?: boolean | null
    park_attendance_view?: boolean | null
    park_attendance_add?: boolean | null
    park_attendance_update?: boolean | null
    park_footfall_view?: boolean | null
    park_footfall_add?: boolean | null
    park_footfall_update?: boolean | null
    park_sentimental_view?: boolean | null
    park_sentimental_add?: boolean | null
    park_sentimental_update?: boolean | null
    park_irrigation_view?: boolean | null
    park_irrigation_add?: boolean | null
    park_irrigation_update?: boolean | null
    park_landscaping_view?: boolean | null
    park_landscaping_add?: boolean | null
    park_landscaping_update?: boolean | null
    park_litter_detection_view?: boolean | null
    park_litter_detection_add?: boolean | null
    park_litter_detection_update?: boolean | null
    park_intrusion_detection_view?: boolean | null
    park_intrusion_detection_add?: boolean | null
    park_intrusion_detection_update?: boolean | null
    park_smoking_detection_view?: boolean | null
    park_smoking_detection_add?: boolean | null
    park_smoking_detection_update?: boolean | null
    my_account_view?: boolean | null
    settings_view?: boolean | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type users_permissionsUpdateManyMutationInput = {
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_permissionsUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_rolesCreateInput = {
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersCreateNestedManyWithoutUsers_rolesInput
    users_permissions?: users_permissionsCreateNestedManyWithoutUsers_rolesInput
  }

  export type users_rolesUncheckedCreateInput = {
    Id?: number
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersUncheckedCreateNestedManyWithoutUsers_rolesInput
    users_permissions?: users_permissionsUncheckedCreateNestedManyWithoutUsers_rolesInput
  }

  export type users_rolesUpdateInput = {
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateManyWithoutUsers_rolesNestedInput
    users_permissions?: users_permissionsUpdateManyWithoutUsers_rolesNestedInput
  }

  export type users_rolesUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUncheckedUpdateManyWithoutUsers_rolesNestedInput
    users_permissions?: users_permissionsUncheckedUpdateManyWithoutUsers_rolesNestedInput
  }

  export type users_rolesCreateManyInput = {
    Id?: number
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type users_rolesUpdateManyMutationInput = {
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_rolesUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_footfall_analysisCreateInput = {
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    park: parksCreateNestedOneWithoutParks_footfall_analysisInput
  }

  export type parks_footfall_analysisUncheckedCreateInput = {
    id?: number
    park_Id: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type parks_footfall_analysisUpdateInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    park?: parksUpdateOneRequiredWithoutParks_footfall_analysisNestedInput
  }

  export type parks_footfall_analysisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    park_Id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parks_footfall_analysisCreateManyInput = {
    id?: number
    park_Id: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type parks_footfall_analysisUpdateManyMutationInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parks_footfall_analysisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    park_Id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type offices_footfall_analysisCreateInput = {
    detection_Id: string
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    office: officesCreateNestedOneWithoutOffices_footfall_analysisInput
    person: usersCreateNestedOneWithoutOffices_footfall_analysisInput
  }

  export type offices_footfall_analysisUncheckedCreateInput = {
    id?: number
    office_Id: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type offices_footfall_analysisUpdateInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    office?: officesUpdateOneRequiredWithoutOffices_footfall_analysisNestedInput
    person?: usersUpdateOneRequiredWithoutOffices_footfall_analysisNestedInput
  }

  export type offices_footfall_analysisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    office_Id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type offices_footfall_analysisCreateManyInput = {
    id?: number
    office_Id: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type offices_footfall_analysisUpdateManyMutationInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type offices_footfall_analysisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    office_Id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type access_secretOrderByRelevanceInput = {
    fields: access_secretOrderByRelevanceFieldEnum | access_secretOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type access_secretCountOrderByAggregateInput = {
    Id?: SortOrder
    value?: SortOrder
  }

  export type access_secretAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type access_secretMaxOrderByAggregateInput = {
    Id?: SortOrder
    value?: SortOrder
  }

  export type access_secretMinOrderByAggregateInput = {
    Id?: SortOrder
    value?: SortOrder
  }

  export type access_secretSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type Park_camerasNullableScalarRelationFilter = {
    is?: park_camerasWhereInput | null
    isNot?: park_camerasWhereInput | null
  }

  export type Offices_camerasNullableScalarRelationFilter = {
    is?: offices_camerasWhereInput | null
    isNot?: offices_camerasWhereInput | null
  }

  export type live_stream_favouritesCountOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    park_camera_Id?: SortOrder
    office_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type live_stream_favouritesAvgOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    park_camera_Id?: SortOrder
    office_camera_Id?: SortOrder
  }

  export type live_stream_favouritesMaxOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    park_camera_Id?: SortOrder
    office_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type live_stream_favouritesMinOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    park_camera_Id?: SortOrder
    office_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type live_stream_favouritesSumOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    park_camera_Id?: SortOrder
    office_camera_Id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type OfficesNullableScalarRelationFilter = {
    is?: officesWhereInput | null
    isNot?: officesWhereInput | null
  }

  export type office_streamsOrderByRelevanceInput = {
    fields: office_streamsOrderByRelevanceFieldEnum | office_streamsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type office_streamsCountOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type office_streamsAvgOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
  }

  export type office_streamsMaxOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type office_streamsMinOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type office_streamsSumOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Office_streamsListRelationFilter = {
    every?: office_streamsWhereInput
    some?: office_streamsWhereInput
    none?: office_streamsWhereInput
  }

  export type Offices_attendanceListRelationFilter = {
    every?: offices_attendanceWhereInput
    some?: offices_attendanceWhereInput
    none?: offices_attendanceWhereInput
  }

  export type Offices_camerasListRelationFilter = {
    every?: offices_camerasWhereInput
    some?: offices_camerasWhereInput
    none?: offices_camerasWhereInput
  }

  export type Offices_sentiment_analysisListRelationFilter = {
    every?: offices_sentiment_analysisWhereInput
    some?: offices_sentiment_analysisWhereInput
    none?: offices_sentiment_analysisWhereInput
  }

  export type Offices_footfall_analysisListRelationFilter = {
    every?: offices_footfall_analysisWhereInput
    some?: offices_footfall_analysisWhereInput
    none?: offices_footfall_analysisWhereInput
  }

  export type office_streamsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offices_attendanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offices_camerasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offices_sentiment_analysisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offices_footfall_analysisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type officesOrderByRelevanceInput = {
    fields: officesOrderByRelevanceFieldEnum | officesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type officesCountOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    office_english_name?: SortOrder
    office_arabic_name?: SortOrder
    image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type officesAvgOrderByAggregateInput = {
    Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type officesMaxOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    office_english_name?: SortOrder
    office_arabic_name?: SortOrder
    image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type officesMinOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    office_english_name?: SortOrder
    office_arabic_name?: SortOrder
    image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type officesSumOrderByAggregateInput = {
    Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type offices_attendanceCountOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
    entry_time?: SortOrder
    exit_time?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type offices_attendanceAvgOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type offices_attendanceMaxOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
    entry_time?: SortOrder
    exit_time?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type offices_attendanceMinOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
    entry_time?: SortOrder
    exit_time?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type offices_attendanceSumOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Live_stream_favouritesListRelationFilter = {
    every?: live_stream_favouritesWhereInput
    some?: live_stream_favouritesWhereInput
    none?: live_stream_favouritesWhereInput
  }

  export type live_stream_favouritesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offices_camerasOrderByRelevanceInput = {
    fields: offices_camerasOrderByRelevanceFieldEnum | offices_camerasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type offices_camerasOffice_IdCamera_IdCompoundUniqueInput = {
    office_Id: number
    camera_Id: string
  }

  export type offices_camerasCountOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    camera_Id?: SortOrder
    camera_english_name?: SortOrder
    camera_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    ip_address?: SortOrder
    last_active_date?: SortOrder
    last_active_time?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
  }

  export type offices_camerasAvgOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type offices_camerasMaxOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    camera_Id?: SortOrder
    camera_english_name?: SortOrder
    camera_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    ip_address?: SortOrder
    last_active_date?: SortOrder
    last_active_time?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
  }

  export type offices_camerasMinOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    camera_Id?: SortOrder
    camera_english_name?: SortOrder
    camera_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    ip_address?: SortOrder
    last_active_date?: SortOrder
    last_active_time?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
  }

  export type offices_camerasSumOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type Enumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.offices_sentiment_analysis_sentiment_of | Enumoffices_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel> | $Enums.offices_sentiment_analysis_sentiment_of | null
  }

  export type offices_sentiment_analysisOrderByRelevanceInput = {
    fields: offices_sentiment_analysisOrderByRelevanceFieldEnum | offices_sentiment_analysisOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type offices_sentiment_analysisCountOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
    detection_Id?: SortOrder
    person_name?: SortOrder
    person_image?: SortOrder
    gender?: SortOrder
    check_in_image?: SortOrder
    sentiment_of?: SortOrder
    check_in_date?: SortOrder
    check_in_time?: SortOrder
    check_in_sentiment?: SortOrder
    entry_camera_Id?: SortOrder
    check_out_date?: SortOrder
    check_out_time?: SortOrder
    check_out_capture?: SortOrder
    check_out_sentiment?: SortOrder
    exit_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type offices_sentiment_analysisAvgOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    entry_camera_Id?: SortOrder
    exit_camera_Id?: SortOrder
  }

  export type offices_sentiment_analysisMaxOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
    detection_Id?: SortOrder
    person_name?: SortOrder
    person_image?: SortOrder
    gender?: SortOrder
    check_in_image?: SortOrder
    sentiment_of?: SortOrder
    check_in_date?: SortOrder
    check_in_time?: SortOrder
    check_in_sentiment?: SortOrder
    entry_camera_Id?: SortOrder
    check_out_date?: SortOrder
    check_out_time?: SortOrder
    check_out_capture?: SortOrder
    check_out_sentiment?: SortOrder
    exit_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type offices_sentiment_analysisMinOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
    detection_Id?: SortOrder
    person_name?: SortOrder
    person_image?: SortOrder
    gender?: SortOrder
    check_in_image?: SortOrder
    sentiment_of?: SortOrder
    check_in_date?: SortOrder
    check_in_time?: SortOrder
    check_in_sentiment?: SortOrder
    entry_camera_Id?: SortOrder
    check_out_date?: SortOrder
    check_out_time?: SortOrder
    check_out_capture?: SortOrder
    check_out_sentiment?: SortOrder
    exit_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type offices_sentiment_analysisSumOrderByAggregateInput = {
    Id?: SortOrder
    office_Id?: SortOrder
    entry_camera_Id?: SortOrder
    exit_camera_Id?: SortOrder
  }

  export type Enumoffices_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.offices_sentiment_analysis_sentiment_of | Enumoffices_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel> | $Enums.offices_sentiment_analysis_sentiment_of | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
    _max?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type ParksNullableScalarRelationFilter = {
    is?: parksWhereInput | null
    isNot?: parksWhereInput | null
  }

  export type Parks_behaviour_alertsListRelationFilter = {
    every?: parks_behaviour_alertsWhereInput
    some?: parks_behaviour_alertsWhereInput
    none?: parks_behaviour_alertsWhereInput
  }

  export type Parks_intrusion_detectionListRelationFilter = {
    every?: parks_intrusion_detectionWhereInput
    some?: parks_intrusion_detectionWhereInput
    none?: parks_intrusion_detectionWhereInput
  }

  export type Parks_sentiment_analysisListRelationFilter = {
    every?: parks_sentiment_analysisWhereInput
    some?: parks_sentiment_analysisWhereInput
    none?: parks_sentiment_analysisWhereInput
  }

  export type Parks_smoking_detectionListRelationFilter = {
    every?: parks_smoking_detectionWhereInput
    some?: parks_smoking_detectionWhereInput
    none?: parks_smoking_detectionWhereInput
  }

  export type Parks_landscapingListRelationFilter = {
    every?: parks_landscapingWhereInput
    some?: parks_landscapingWhereInput
    none?: parks_landscapingWhereInput
  }

  export type Parks_litter_detectionListRelationFilter = {
    every?: parks_litter_detectionWhereInput
    some?: parks_litter_detectionWhereInput
    none?: parks_litter_detectionWhereInput
  }

  export type parks_behaviour_alertsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_intrusion_detectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_sentiment_analysisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_smoking_detectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_landscapingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_litter_detectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type park_camerasOrderByRelevanceInput = {
    fields: park_camerasOrderByRelevanceFieldEnum | park_camerasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type park_camerasPark_IdCamera_IdCompoundUniqueInput = {
    park_Id: number
    camera_Id: string
  }

  export type park_camerasCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
    camera_english_name?: SortOrder
    camera_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    ip_address?: SortOrder
    last_active_date?: SortOrder
    last_active_time?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
    behaviour?: SortOrder
    irrigation?: SortOrder
    landscaping?: SortOrder
    litter_detection?: SortOrder
    smoking_detection?: SortOrder
    intrusion?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
  }

  export type park_camerasAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type park_camerasMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
    camera_english_name?: SortOrder
    camera_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    ip_address?: SortOrder
    last_active_date?: SortOrder
    last_active_time?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
    behaviour?: SortOrder
    irrigation?: SortOrder
    landscaping?: SortOrder
    litter_detection?: SortOrder
    smoking_detection?: SortOrder
    intrusion?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
  }

  export type park_camerasMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
    camera_english_name?: SortOrder
    camera_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    ip_address?: SortOrder
    last_active_date?: SortOrder
    last_active_time?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    attendance?: SortOrder
    footfall?: SortOrder
    sentiment?: SortOrder
    behaviour?: SortOrder
    irrigation?: SortOrder
    landscaping?: SortOrder
    litter_detection?: SortOrder
    smoking_detection?: SortOrder
    intrusion?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
  }

  export type park_camerasSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type park_streamsOrderByRelevanceInput = {
    fields: park_streamsOrderByRelevanceFieldEnum | park_streamsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type park_streamsCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type park_streamsAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
  }

  export type park_streamsMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type park_streamsMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    stream_url?: SortOrder
    stream_api_key?: SortOrder
    stream_path?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type park_streamsSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
  }

  export type TermsPrivacyOrderByRelevanceInput = {
    fields: TermsPrivacyOrderByRelevanceFieldEnum | TermsPrivacyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TermsPrivacyCountOrderByAggregateInput = {
    id?: SortOrder
    terms?: SortOrder
    privacyPolicy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TermsPrivacyAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TermsPrivacyMaxOrderByAggregateInput = {
    id?: SortOrder
    terms?: SortOrder
    privacyPolicy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TermsPrivacyMinOrderByAggregateInput = {
    id?: SortOrder
    terms?: SortOrder
    privacyPolicy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TermsPrivacySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FAQOrderByRelevanceInput = {
    fields: FAQOrderByRelevanceFieldEnum | FAQOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FAQCountOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FAQAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FAQMaxOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FAQMinOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FAQSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Parks_irrigation_job_historyListRelationFilter = {
    every?: parks_irrigation_job_historyWhereInput
    some?: parks_irrigation_job_historyWhereInput
    none?: parks_irrigation_job_historyWhereInput
  }

  export type parks_irrigation_job_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type park_zonesOrderByRelevanceInput = {
    fields: park_zonesOrderByRelevanceFieldEnum | park_zonesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type park_zonesPark_IdZone_IdCompoundUniqueInput = {
    park_Id: number
    zone_Id: string
  }

  export type park_zonesCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
    zone_english_name?: SortOrder
    zone_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    device_ip?: SortOrder
    web_api?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type park_zonesAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type park_zonesMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
    zone_english_name?: SortOrder
    zone_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    device_ip?: SortOrder
    web_api?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type park_zonesMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
    zone_english_name?: SortOrder
    zone_arabic_name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    device_ip?: SortOrder
    web_api?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type park_zonesSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type Park_camerasListRelationFilter = {
    every?: park_camerasWhereInput
    some?: park_camerasWhereInput
    none?: park_camerasWhereInput
  }

  export type Park_streamsListRelationFilter = {
    every?: park_streamsWhereInput
    some?: park_streamsWhereInput
    none?: park_streamsWhereInput
  }

  export type Park_zonesListRelationFilter = {
    every?: park_zonesWhereInput
    some?: park_zonesWhereInput
    none?: park_zonesWhereInput
  }

  export type Parks_attendanceListRelationFilter = {
    every?: parks_attendanceWhereInput
    some?: parks_attendanceWhereInput
    none?: parks_attendanceWhereInput
  }

  export type Parks_footfall_analysisListRelationFilter = {
    every?: parks_footfall_analysisWhereInput
    some?: parks_footfall_analysisWhereInput
    none?: parks_footfall_analysisWhereInput
  }

  export type park_camerasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type park_streamsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type park_zonesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_attendanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_footfall_analysisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parksOrderByRelevanceInput = {
    fields: parksOrderByRelevanceFieldEnum | parksOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parksCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    park_english_name?: SortOrder
    park_arabic_name?: SortOrder
    image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type parksAvgOrderByAggregateInput = {
    Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type parksMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    park_english_name?: SortOrder
    park_arabic_name?: SortOrder
    image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type parksMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    park_english_name?: SortOrder
    park_arabic_name?: SortOrder
    image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
  }

  export type parksSumOrderByAggregateInput = {
    Id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type parks_attendanceCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    entry_time?: SortOrder
    exit_time?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_attendanceAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type parks_attendanceMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    entry_time?: SortOrder
    exit_time?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_attendanceMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    entry_time?: SortOrder
    exit_time?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_attendanceSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type parks_behaviour_alertsOrderByRelevanceInput = {
    fields: parks_behaviour_alertsOrderByRelevanceFieldEnum | parks_behaviour_alertsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_behaviour_alertsCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    camera_Id?: SortOrder
    detection_Id?: SortOrder
    detection_code?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    detected_behaviour?: SortOrder
    is_employee?: SortOrder
    snap_shot?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_behaviour_alertsAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type parks_behaviour_alertsMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    camera_Id?: SortOrder
    detection_Id?: SortOrder
    detection_code?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    detected_behaviour?: SortOrder
    is_employee?: SortOrder
    snap_shot?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_behaviour_alertsMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    camera_Id?: SortOrder
    detection_Id?: SortOrder
    detection_code?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    detected_behaviour?: SortOrder
    is_employee?: SortOrder
    snap_shot?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_behaviour_alertsSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type Intranet_posting_historyListRelationFilter = {
    every?: intranet_posting_historyWhereInput
    some?: intranet_posting_historyWhereInput
    none?: intranet_posting_historyWhereInput
  }

  export type intranet_posting_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_intrusion_detectionOrderByRelevanceInput = {
    fields: parks_intrusion_detectionOrderByRelevanceFieldEnum | parks_intrusion_detectionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_intrusion_detectionCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    location?: SortOrder
    camera_Id?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    posted_to_intranet_date?: SortOrder
    posted_to_intranet_time?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    is_employee?: SortOrder
    current_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_intrusion_detectionAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type parks_intrusion_detectionMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    location?: SortOrder
    camera_Id?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    posted_to_intranet_date?: SortOrder
    posted_to_intranet_time?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    is_employee?: SortOrder
    current_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_intrusion_detectionMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    location?: SortOrder
    camera_Id?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    posted_to_intranet_date?: SortOrder
    posted_to_intranet_time?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    is_employee?: SortOrder
    current_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_intrusion_detectionSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type Park_zonesNullableScalarRelationFilter = {
    is?: park_zonesWhereInput | null
    isNot?: park_zonesWhereInput | null
  }

  export type parks_irrigation_job_historyOrderByRelevanceInput = {
    fields: parks_irrigation_job_historyOrderByRelevanceFieldEnum | parks_irrigation_job_historyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_irrigation_job_historyCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
    job_Id?: SortOrder
    job_started_at?: SortOrder
    job_completed_at?: SortOrder
    job_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_irrigation_job_historyAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
  }

  export type parks_irrigation_job_historyMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
    job_Id?: SortOrder
    job_started_at?: SortOrder
    job_completed_at?: SortOrder
    job_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_irrigation_job_historyMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
    job_Id?: SortOrder
    job_started_at?: SortOrder
    job_completed_at?: SortOrder
    job_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_irrigation_job_historySumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    zone_Id?: SortOrder
  }

  export type Ticket_details_tableListRelationFilter = {
    every?: ticket_details_tableWhereInput
    some?: ticket_details_tableWhereInput
    none?: ticket_details_tableWhereInput
  }

  export type ticket_details_tableOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parks_landscapingOrderByRelevanceInput = {
    fields: parks_landscapingOrderByRelevanceFieldEnum | parks_landscapingOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_landscapingCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    case_Id?: SortOrder
    location?: SortOrder
    snap_shot?: SortOrder
    type?: SortOrder
    status?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    current_status?: SortOrder
    camera_Id?: SortOrder
    after_image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_landscapingAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type parks_landscapingMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    case_Id?: SortOrder
    location?: SortOrder
    snap_shot?: SortOrder
    type?: SortOrder
    status?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    current_status?: SortOrder
    camera_Id?: SortOrder
    after_image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_landscapingMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    case_Id?: SortOrder
    location?: SortOrder
    snap_shot?: SortOrder
    type?: SortOrder
    status?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    current_status?: SortOrder
    camera_Id?: SortOrder
    after_image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_landscapingSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type parks_litter_detectionOrderByRelevanceInput = {
    fields: parks_litter_detectionOrderByRelevanceFieldEnum | parks_litter_detectionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_litter_detectionCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    case_Id?: SortOrder
    location?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    status?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    current_status?: SortOrder
    camera_Id?: SortOrder
    after_image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_litter_detectionAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type parks_litter_detectionMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    case_Id?: SortOrder
    location?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    status?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    current_status?: SortOrder
    camera_Id?: SortOrder
    after_image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_litter_detectionMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    case_Id?: SortOrder
    location?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    status?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    current_status?: SortOrder
    camera_Id?: SortOrder
    after_image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_litter_detectionSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type Parks_litter_detectionNullableScalarRelationFilter = {
    is?: parks_litter_detectionWhereInput | null
    isNot?: parks_litter_detectionWhereInput | null
  }

  export type Parks_landscapingNullableScalarRelationFilter = {
    is?: parks_landscapingWhereInput | null
    isNot?: parks_landscapingWhereInput | null
  }

  export type ticket_details_tableOrderByRelevanceInput = {
    fields: ticket_details_tableOrderByRelevanceFieldEnum | ticket_details_tableOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ticket_details_tableCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    date?: SortOrder
    time?: SortOrder
    comments?: SortOrder
    image?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
    abc4?: SortOrder
    litterDetectionId?: SortOrder
    landscapingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ticket_details_tableAvgOrderByAggregateInput = {
    id?: SortOrder
    litterDetectionId?: SortOrder
    landscapingId?: SortOrder
  }

  export type ticket_details_tableMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    date?: SortOrder
    time?: SortOrder
    comments?: SortOrder
    image?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
    abc4?: SortOrder
    litterDetectionId?: SortOrder
    landscapingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ticket_details_tableMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    date?: SortOrder
    time?: SortOrder
    comments?: SortOrder
    image?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
    abc4?: SortOrder
    litterDetectionId?: SortOrder
    landscapingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ticket_details_tableSumOrderByAggregateInput = {
    id?: SortOrder
    litterDetectionId?: SortOrder
    landscapingId?: SortOrder
  }

  export type Enumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.parks_sentiment_analysis_sentiment_of | Enumparks_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel> | $Enums.parks_sentiment_analysis_sentiment_of | null
  }

  export type parks_sentiment_analysisOrderByRelevanceInput = {
    fields: parks_sentiment_analysisOrderByRelevanceFieldEnum | parks_sentiment_analysisOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_sentiment_analysisCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    detection_Id?: SortOrder
    person_name?: SortOrder
    person_image?: SortOrder
    gender?: SortOrder
    check_in_image?: SortOrder
    sentiment_of?: SortOrder
    check_in_date?: SortOrder
    check_in_time?: SortOrder
    check_in_sentiment?: SortOrder
    entry_camera_Id?: SortOrder
    check_out_date?: SortOrder
    check_out_time?: SortOrder
    check_out_capture?: SortOrder
    check_out_sentiment?: SortOrder
    exit_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_sentiment_analysisAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    entry_camera_Id?: SortOrder
    exit_camera_Id?: SortOrder
  }

  export type parks_sentiment_analysisMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    detection_Id?: SortOrder
    person_name?: SortOrder
    person_image?: SortOrder
    gender?: SortOrder
    check_in_image?: SortOrder
    sentiment_of?: SortOrder
    check_in_date?: SortOrder
    check_in_time?: SortOrder
    check_in_sentiment?: SortOrder
    entry_camera_Id?: SortOrder
    check_out_date?: SortOrder
    check_out_time?: SortOrder
    check_out_capture?: SortOrder
    check_out_sentiment?: SortOrder
    exit_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_sentiment_analysisMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
    detection_Id?: SortOrder
    person_name?: SortOrder
    person_image?: SortOrder
    gender?: SortOrder
    check_in_image?: SortOrder
    sentiment_of?: SortOrder
    check_in_date?: SortOrder
    check_in_time?: SortOrder
    check_in_sentiment?: SortOrder
    entry_camera_Id?: SortOrder
    check_out_date?: SortOrder
    check_out_time?: SortOrder
    check_out_capture?: SortOrder
    check_out_sentiment?: SortOrder
    exit_camera_Id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_sentiment_analysisSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    entry_camera_Id?: SortOrder
    exit_camera_Id?: SortOrder
  }

  export type Enumparks_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.parks_sentiment_analysis_sentiment_of | Enumparks_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel> | $Enums.parks_sentiment_analysis_sentiment_of | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
    _max?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
  }

  export type parks_smoking_detectionOrderByRelevanceInput = {
    fields: parks_smoking_detectionOrderByRelevanceFieldEnum | parks_smoking_detectionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_smoking_detectionCountOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    location?: SortOrder
    camera_Id?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    posted_to_intranet_date?: SortOrder
    posted_to_intranet_time?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    is_employee?: SortOrder
    current_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_smoking_detectionAvgOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type parks_smoking_detectionMaxOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    location?: SortOrder
    camera_Id?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    posted_to_intranet_date?: SortOrder
    posted_to_intranet_time?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    is_employee?: SortOrder
    current_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_smoking_detectionMinOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    location?: SortOrder
    camera_Id?: SortOrder
    occurrence_date?: SortOrder
    occurrence_time?: SortOrder
    snap_shot?: SortOrder
    posted_to_intranet_date?: SortOrder
    posted_to_intranet_time?: SortOrder
    detection_Id?: SortOrder
    detection_date?: SortOrder
    detection_time?: SortOrder
    description?: SortOrder
    is_employee?: SortOrder
    current_status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type parks_smoking_detectionSumOrderByAggregateInput = {
    Id?: SortOrder
    park_Id?: SortOrder
    camera_Id?: SortOrder
  }

  export type Parks_smoking_detectionNullableScalarRelationFilter = {
    is?: parks_smoking_detectionWhereInput | null
    isNot?: parks_smoking_detectionWhereInput | null
  }

  export type Parks_intrusion_detectionNullableScalarRelationFilter = {
    is?: parks_intrusion_detectionWhereInput | null
    isNot?: parks_intrusion_detectionWhereInput | null
  }

  export type intranet_posting_historyOrderByRelevanceInput = {
    fields: intranet_posting_historyOrderByRelevanceFieldEnum | intranet_posting_historyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type intranet_posting_historyCountOrderByAggregateInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrder
    intrusionDetectionId?: SortOrder
    title?: SortOrder
    intranet_id?: SortOrder
    comments?: SortOrder
    date?: SortOrder
    time?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type intranet_posting_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrder
    intrusionDetectionId?: SortOrder
  }

  export type intranet_posting_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrder
    intrusionDetectionId?: SortOrder
    title?: SortOrder
    intranet_id?: SortOrder
    comments?: SortOrder
    date?: SortOrder
    time?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type intranet_posting_historyMinOrderByAggregateInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrder
    intrusionDetectionId?: SortOrder
    title?: SortOrder
    intranet_id?: SortOrder
    comments?: SortOrder
    date?: SortOrder
    time?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type intranet_posting_historySumOrderByAggregateInput = {
    id?: SortOrder
    smokingDetectionId?: SortOrder
    intrusionDetectionId?: SortOrder
  }

  export type Users_rolesNullableScalarRelationFilter = {
    is?: users_rolesWhereInput | null
    isNot?: users_rolesWhereInput | null
  }

  export type usersOrderByRelevanceInput = {
    fields: usersOrderByRelevanceFieldEnum | usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usersCountOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    gender?: SortOrder
    emp__eng_name?: SortOrder
    emp__arabic_name?: SortOrder
    country_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    dep_eng_name?: SortOrder
    dep_arabic_name?: SortOrder
    desig_eng_name?: SortOrder
    desig_arabic_name?: SortOrder
    unit_eng_name?: SortOrder
    unit_arabic_name?: SortOrder
    committe_eng_name?: SortOrder
    committe_arabic_name?: SortOrder
    ai_engine_access?: SortOrder
    last_login?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role_Id?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    gender?: SortOrder
    emp__eng_name?: SortOrder
    emp__arabic_name?: SortOrder
    country_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    dep_eng_name?: SortOrder
    dep_arabic_name?: SortOrder
    desig_eng_name?: SortOrder
    desig_arabic_name?: SortOrder
    unit_eng_name?: SortOrder
    unit_arabic_name?: SortOrder
    committe_eng_name?: SortOrder
    committe_arabic_name?: SortOrder
    ai_engine_access?: SortOrder
    last_login?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role_Id?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    Id?: SortOrder
    emp_Id?: SortOrder
    gender?: SortOrder
    emp__eng_name?: SortOrder
    emp__arabic_name?: SortOrder
    country_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    dep_eng_name?: SortOrder
    dep_arabic_name?: SortOrder
    desig_eng_name?: SortOrder
    desig_arabic_name?: SortOrder
    unit_eng_name?: SortOrder
    unit_arabic_name?: SortOrder
    committe_eng_name?: SortOrder
    committe_arabic_name?: SortOrder
    ai_engine_access?: SortOrder
    last_login?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role_Id?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
  }

  export type users_permissionsCountOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
    dashboard_view?: SortOrder
    role_permission_view?: SortOrder
    role_permission_add?: SortOrder
    role_permission_update?: SortOrder
    offices_view?: SortOrder
    offices_add?: SortOrder
    offices_update?: SortOrder
    parks_view?: SortOrder
    parks_add?: SortOrder
    parks_update?: SortOrder
    system_report_view?: SortOrder
    alerts_view?: SortOrder
    office_attendance_view?: SortOrder
    office_attendance_add?: SortOrder
    office_attendance_update?: SortOrder
    office_footfall_view?: SortOrder
    office_footfall_add?: SortOrder
    office_footfall_update?: SortOrder
    office_sentimental_view?: SortOrder
    office_sentimental_add?: SortOrder
    office_sentimental_update?: SortOrder
    park_attendance_view?: SortOrder
    park_attendance_add?: SortOrder
    park_attendance_update?: SortOrder
    park_footfall_view?: SortOrder
    park_footfall_add?: SortOrder
    park_footfall_update?: SortOrder
    park_sentimental_view?: SortOrder
    park_sentimental_add?: SortOrder
    park_sentimental_update?: SortOrder
    park_irrigation_view?: SortOrder
    park_irrigation_add?: SortOrder
    park_irrigation_update?: SortOrder
    park_landscaping_view?: SortOrder
    park_landscaping_add?: SortOrder
    park_landscaping_update?: SortOrder
    park_litter_detection_view?: SortOrder
    park_litter_detection_add?: SortOrder
    park_litter_detection_update?: SortOrder
    park_intrusion_detection_view?: SortOrder
    park_intrusion_detection_add?: SortOrder
    park_intrusion_detection_update?: SortOrder
    park_smoking_detection_view?: SortOrder
    park_smoking_detection_add?: SortOrder
    park_smoking_detection_update?: SortOrder
    my_account_view?: SortOrder
    settings_view?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type users_permissionsAvgOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
  }

  export type users_permissionsMaxOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
    dashboard_view?: SortOrder
    role_permission_view?: SortOrder
    role_permission_add?: SortOrder
    role_permission_update?: SortOrder
    offices_view?: SortOrder
    offices_add?: SortOrder
    offices_update?: SortOrder
    parks_view?: SortOrder
    parks_add?: SortOrder
    parks_update?: SortOrder
    system_report_view?: SortOrder
    alerts_view?: SortOrder
    office_attendance_view?: SortOrder
    office_attendance_add?: SortOrder
    office_attendance_update?: SortOrder
    office_footfall_view?: SortOrder
    office_footfall_add?: SortOrder
    office_footfall_update?: SortOrder
    office_sentimental_view?: SortOrder
    office_sentimental_add?: SortOrder
    office_sentimental_update?: SortOrder
    park_attendance_view?: SortOrder
    park_attendance_add?: SortOrder
    park_attendance_update?: SortOrder
    park_footfall_view?: SortOrder
    park_footfall_add?: SortOrder
    park_footfall_update?: SortOrder
    park_sentimental_view?: SortOrder
    park_sentimental_add?: SortOrder
    park_sentimental_update?: SortOrder
    park_irrigation_view?: SortOrder
    park_irrigation_add?: SortOrder
    park_irrigation_update?: SortOrder
    park_landscaping_view?: SortOrder
    park_landscaping_add?: SortOrder
    park_landscaping_update?: SortOrder
    park_litter_detection_view?: SortOrder
    park_litter_detection_add?: SortOrder
    park_litter_detection_update?: SortOrder
    park_intrusion_detection_view?: SortOrder
    park_intrusion_detection_add?: SortOrder
    park_intrusion_detection_update?: SortOrder
    park_smoking_detection_view?: SortOrder
    park_smoking_detection_add?: SortOrder
    park_smoking_detection_update?: SortOrder
    my_account_view?: SortOrder
    settings_view?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type users_permissionsMinOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
    dashboard_view?: SortOrder
    role_permission_view?: SortOrder
    role_permission_add?: SortOrder
    role_permission_update?: SortOrder
    offices_view?: SortOrder
    offices_add?: SortOrder
    offices_update?: SortOrder
    parks_view?: SortOrder
    parks_add?: SortOrder
    parks_update?: SortOrder
    system_report_view?: SortOrder
    alerts_view?: SortOrder
    office_attendance_view?: SortOrder
    office_attendance_add?: SortOrder
    office_attendance_update?: SortOrder
    office_footfall_view?: SortOrder
    office_footfall_add?: SortOrder
    office_footfall_update?: SortOrder
    office_sentimental_view?: SortOrder
    office_sentimental_add?: SortOrder
    office_sentimental_update?: SortOrder
    park_attendance_view?: SortOrder
    park_attendance_add?: SortOrder
    park_attendance_update?: SortOrder
    park_footfall_view?: SortOrder
    park_footfall_add?: SortOrder
    park_footfall_update?: SortOrder
    park_sentimental_view?: SortOrder
    park_sentimental_add?: SortOrder
    park_sentimental_update?: SortOrder
    park_irrigation_view?: SortOrder
    park_irrigation_add?: SortOrder
    park_irrigation_update?: SortOrder
    park_landscaping_view?: SortOrder
    park_landscaping_add?: SortOrder
    park_landscaping_update?: SortOrder
    park_litter_detection_view?: SortOrder
    park_litter_detection_add?: SortOrder
    park_litter_detection_update?: SortOrder
    park_intrusion_detection_view?: SortOrder
    park_intrusion_detection_add?: SortOrder
    park_intrusion_detection_update?: SortOrder
    park_smoking_detection_view?: SortOrder
    park_smoking_detection_add?: SortOrder
    park_smoking_detection_update?: SortOrder
    my_account_view?: SortOrder
    settings_view?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type users_permissionsSumOrderByAggregateInput = {
    Id?: SortOrder
    role_Id?: SortOrder
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type Users_permissionsListRelationFilter = {
    every?: users_permissionsWhereInput
    some?: users_permissionsWhereInput
    none?: users_permissionsWhereInput
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type users_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type users_rolesOrderByRelevanceInput = {
    fields: users_rolesOrderByRelevanceFieldEnum | users_rolesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type users_rolesCountOrderByAggregateInput = {
    Id?: SortOrder
    role_name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type users_rolesAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type users_rolesMaxOrderByAggregateInput = {
    Id?: SortOrder
    role_name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type users_rolesMinOrderByAggregateInput = {
    Id?: SortOrder
    role_name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type users_rolesSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type ParksScalarRelationFilter = {
    is?: parksWhereInput
    isNot?: parksWhereInput
  }

  export type parks_footfall_analysisOrderByRelevanceInput = {
    fields: parks_footfall_analysisOrderByRelevanceFieldEnum | parks_footfall_analysisOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type parks_footfall_analysisCountOrderByAggregateInput = {
    id?: SortOrder
    park_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type parks_footfall_analysisAvgOrderByAggregateInput = {
    id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type parks_footfall_analysisMaxOrderByAggregateInput = {
    id?: SortOrder
    park_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type parks_footfall_analysisMinOrderByAggregateInput = {
    id?: SortOrder
    park_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type parks_footfall_analysisSumOrderByAggregateInput = {
    id?: SortOrder
    park_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type OfficesScalarRelationFilter = {
    is?: officesWhereInput
    isNot?: officesWhereInput
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type offices_footfall_analysisOrderByRelevanceInput = {
    fields: offices_footfall_analysisOrderByRelevanceFieldEnum | offices_footfall_analysisOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type offices_footfall_analysisCountOrderByAggregateInput = {
    id?: SortOrder
    office_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type offices_footfall_analysisAvgOrderByAggregateInput = {
    id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type offices_footfall_analysisMaxOrderByAggregateInput = {
    id?: SortOrder
    office_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type offices_footfall_analysisMinOrderByAggregateInput = {
    id?: SortOrder
    office_Id?: SortOrder
    detection_Id?: SortOrder
    person_Id?: SortOrder
    gender?: SortOrder
    is_child?: SortOrder
    time?: SortOrder
    detected_camera_Id?: SortOrder
    detected_camera_name?: SortOrder
    abc1?: SortOrder
    abc2?: SortOrder
    abc3?: SortOrder
  }

  export type offices_footfall_analysisSumOrderByAggregateInput = {
    id?: SortOrder
    office_Id?: SortOrder
    person_Id?: SortOrder
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usersCreateNestedOneWithoutLive_stream_favouritesInput = {
    create?: XOR<usersCreateWithoutLive_stream_favouritesInput, usersUncheckedCreateWithoutLive_stream_favouritesInput>
    connectOrCreate?: usersCreateOrConnectWithoutLive_stream_favouritesInput
    connect?: usersWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutLive_stream_favouritesInput = {
    create?: XOR<park_camerasCreateWithoutLive_stream_favouritesInput, park_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutLive_stream_favouritesInput
    connect?: park_camerasWhereUniqueInput
  }

  export type offices_camerasCreateNestedOneWithoutLive_stream_favouritesInput = {
    create?: XOR<offices_camerasCreateWithoutLive_stream_favouritesInput, offices_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
    connectOrCreate?: offices_camerasCreateOrConnectWithoutLive_stream_favouritesInput
    connect?: offices_camerasWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type usersUpdateOneWithoutLive_stream_favouritesNestedInput = {
    create?: XOR<usersCreateWithoutLive_stream_favouritesInput, usersUncheckedCreateWithoutLive_stream_favouritesInput>
    connectOrCreate?: usersCreateOrConnectWithoutLive_stream_favouritesInput
    upsert?: usersUpsertWithoutLive_stream_favouritesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutLive_stream_favouritesInput, usersUpdateWithoutLive_stream_favouritesInput>, usersUncheckedUpdateWithoutLive_stream_favouritesInput>
  }

  export type park_camerasUpdateOneWithoutLive_stream_favouritesNestedInput = {
    create?: XOR<park_camerasCreateWithoutLive_stream_favouritesInput, park_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutLive_stream_favouritesInput
    upsert?: park_camerasUpsertWithoutLive_stream_favouritesInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutLive_stream_favouritesInput, park_camerasUpdateWithoutLive_stream_favouritesInput>, park_camerasUncheckedUpdateWithoutLive_stream_favouritesInput>
  }

  export type offices_camerasUpdateOneWithoutLive_stream_favouritesNestedInput = {
    create?: XOR<offices_camerasCreateWithoutLive_stream_favouritesInput, offices_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
    connectOrCreate?: offices_camerasCreateOrConnectWithoutLive_stream_favouritesInput
    upsert?: offices_camerasUpsertWithoutLive_stream_favouritesInput
    disconnect?: offices_camerasWhereInput | boolean
    delete?: offices_camerasWhereInput | boolean
    connect?: offices_camerasWhereUniqueInput
    update?: XOR<XOR<offices_camerasUpdateToOneWithWhereWithoutLive_stream_favouritesInput, offices_camerasUpdateWithoutLive_stream_favouritesInput>, offices_camerasUncheckedUpdateWithoutLive_stream_favouritesInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type officesCreateNestedOneWithoutOffice_streamsInput = {
    create?: XOR<officesCreateWithoutOffice_streamsInput, officesUncheckedCreateWithoutOffice_streamsInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffice_streamsInput
    connect?: officesWhereUniqueInput
  }

  export type officesUpdateOneWithoutOffice_streamsNestedInput = {
    create?: XOR<officesCreateWithoutOffice_streamsInput, officesUncheckedCreateWithoutOffice_streamsInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffice_streamsInput
    upsert?: officesUpsertWithoutOffice_streamsInput
    disconnect?: officesWhereInput | boolean
    delete?: officesWhereInput | boolean
    connect?: officesWhereUniqueInput
    update?: XOR<XOR<officesUpdateToOneWithWhereWithoutOffice_streamsInput, officesUpdateWithoutOffice_streamsInput>, officesUncheckedUpdateWithoutOffice_streamsInput>
  }

  export type office_streamsCreateNestedManyWithoutOfficesInput = {
    create?: XOR<office_streamsCreateWithoutOfficesInput, office_streamsUncheckedCreateWithoutOfficesInput> | office_streamsCreateWithoutOfficesInput[] | office_streamsUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: office_streamsCreateOrConnectWithoutOfficesInput | office_streamsCreateOrConnectWithoutOfficesInput[]
    createMany?: office_streamsCreateManyOfficesInputEnvelope
    connect?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
  }

  export type offices_attendanceCreateNestedManyWithoutOfficeInput = {
    create?: XOR<offices_attendanceCreateWithoutOfficeInput, offices_attendanceUncheckedCreateWithoutOfficeInput> | offices_attendanceCreateWithoutOfficeInput[] | offices_attendanceUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutOfficeInput | offices_attendanceCreateOrConnectWithoutOfficeInput[]
    createMany?: offices_attendanceCreateManyOfficeInputEnvelope
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
  }

  export type offices_camerasCreateNestedManyWithoutOfficesInput = {
    create?: XOR<offices_camerasCreateWithoutOfficesInput, offices_camerasUncheckedCreateWithoutOfficesInput> | offices_camerasCreateWithoutOfficesInput[] | offices_camerasUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOfficesInput | offices_camerasCreateOrConnectWithoutOfficesInput[]
    createMany?: offices_camerasCreateManyOfficesInputEnvelope
    connect?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
  }

  export type offices_sentiment_analysisCreateNestedManyWithoutOfficesInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOfficesInput, offices_sentiment_analysisUncheckedCreateWithoutOfficesInput> | offices_sentiment_analysisCreateWithoutOfficesInput[] | offices_sentiment_analysisUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOfficesInput | offices_sentiment_analysisCreateOrConnectWithoutOfficesInput[]
    createMany?: offices_sentiment_analysisCreateManyOfficesInputEnvelope
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
  }

  export type offices_footfall_analysisCreateNestedManyWithoutOfficeInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutOfficeInput, offices_footfall_analysisUncheckedCreateWithoutOfficeInput> | offices_footfall_analysisCreateWithoutOfficeInput[] | offices_footfall_analysisUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutOfficeInput | offices_footfall_analysisCreateOrConnectWithoutOfficeInput[]
    createMany?: offices_footfall_analysisCreateManyOfficeInputEnvelope
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
  }

  export type office_streamsUncheckedCreateNestedManyWithoutOfficesInput = {
    create?: XOR<office_streamsCreateWithoutOfficesInput, office_streamsUncheckedCreateWithoutOfficesInput> | office_streamsCreateWithoutOfficesInput[] | office_streamsUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: office_streamsCreateOrConnectWithoutOfficesInput | office_streamsCreateOrConnectWithoutOfficesInput[]
    createMany?: office_streamsCreateManyOfficesInputEnvelope
    connect?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
  }

  export type offices_attendanceUncheckedCreateNestedManyWithoutOfficeInput = {
    create?: XOR<offices_attendanceCreateWithoutOfficeInput, offices_attendanceUncheckedCreateWithoutOfficeInput> | offices_attendanceCreateWithoutOfficeInput[] | offices_attendanceUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutOfficeInput | offices_attendanceCreateOrConnectWithoutOfficeInput[]
    createMany?: offices_attendanceCreateManyOfficeInputEnvelope
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
  }

  export type offices_camerasUncheckedCreateNestedManyWithoutOfficesInput = {
    create?: XOR<offices_camerasCreateWithoutOfficesInput, offices_camerasUncheckedCreateWithoutOfficesInput> | offices_camerasCreateWithoutOfficesInput[] | offices_camerasUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOfficesInput | offices_camerasCreateOrConnectWithoutOfficesInput[]
    createMany?: offices_camerasCreateManyOfficesInputEnvelope
    connect?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
  }

  export type offices_sentiment_analysisUncheckedCreateNestedManyWithoutOfficesInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOfficesInput, offices_sentiment_analysisUncheckedCreateWithoutOfficesInput> | offices_sentiment_analysisCreateWithoutOfficesInput[] | offices_sentiment_analysisUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOfficesInput | offices_sentiment_analysisCreateOrConnectWithoutOfficesInput[]
    createMany?: offices_sentiment_analysisCreateManyOfficesInputEnvelope
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
  }

  export type offices_footfall_analysisUncheckedCreateNestedManyWithoutOfficeInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutOfficeInput, offices_footfall_analysisUncheckedCreateWithoutOfficeInput> | offices_footfall_analysisCreateWithoutOfficeInput[] | offices_footfall_analysisUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutOfficeInput | offices_footfall_analysisCreateOrConnectWithoutOfficeInput[]
    createMany?: offices_footfall_analysisCreateManyOfficeInputEnvelope
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type office_streamsUpdateManyWithoutOfficesNestedInput = {
    create?: XOR<office_streamsCreateWithoutOfficesInput, office_streamsUncheckedCreateWithoutOfficesInput> | office_streamsCreateWithoutOfficesInput[] | office_streamsUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: office_streamsCreateOrConnectWithoutOfficesInput | office_streamsCreateOrConnectWithoutOfficesInput[]
    upsert?: office_streamsUpsertWithWhereUniqueWithoutOfficesInput | office_streamsUpsertWithWhereUniqueWithoutOfficesInput[]
    createMany?: office_streamsCreateManyOfficesInputEnvelope
    set?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    disconnect?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    delete?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    connect?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    update?: office_streamsUpdateWithWhereUniqueWithoutOfficesInput | office_streamsUpdateWithWhereUniqueWithoutOfficesInput[]
    updateMany?: office_streamsUpdateManyWithWhereWithoutOfficesInput | office_streamsUpdateManyWithWhereWithoutOfficesInput[]
    deleteMany?: office_streamsScalarWhereInput | office_streamsScalarWhereInput[]
  }

  export type offices_attendanceUpdateManyWithoutOfficeNestedInput = {
    create?: XOR<offices_attendanceCreateWithoutOfficeInput, offices_attendanceUncheckedCreateWithoutOfficeInput> | offices_attendanceCreateWithoutOfficeInput[] | offices_attendanceUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutOfficeInput | offices_attendanceCreateOrConnectWithoutOfficeInput[]
    upsert?: offices_attendanceUpsertWithWhereUniqueWithoutOfficeInput | offices_attendanceUpsertWithWhereUniqueWithoutOfficeInput[]
    createMany?: offices_attendanceCreateManyOfficeInputEnvelope
    set?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    disconnect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    delete?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    update?: offices_attendanceUpdateWithWhereUniqueWithoutOfficeInput | offices_attendanceUpdateWithWhereUniqueWithoutOfficeInput[]
    updateMany?: offices_attendanceUpdateManyWithWhereWithoutOfficeInput | offices_attendanceUpdateManyWithWhereWithoutOfficeInput[]
    deleteMany?: offices_attendanceScalarWhereInput | offices_attendanceScalarWhereInput[]
  }

  export type offices_camerasUpdateManyWithoutOfficesNestedInput = {
    create?: XOR<offices_camerasCreateWithoutOfficesInput, offices_camerasUncheckedCreateWithoutOfficesInput> | offices_camerasCreateWithoutOfficesInput[] | offices_camerasUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOfficesInput | offices_camerasCreateOrConnectWithoutOfficesInput[]
    upsert?: offices_camerasUpsertWithWhereUniqueWithoutOfficesInput | offices_camerasUpsertWithWhereUniqueWithoutOfficesInput[]
    createMany?: offices_camerasCreateManyOfficesInputEnvelope
    set?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    disconnect?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    delete?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    connect?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    update?: offices_camerasUpdateWithWhereUniqueWithoutOfficesInput | offices_camerasUpdateWithWhereUniqueWithoutOfficesInput[]
    updateMany?: offices_camerasUpdateManyWithWhereWithoutOfficesInput | offices_camerasUpdateManyWithWhereWithoutOfficesInput[]
    deleteMany?: offices_camerasScalarWhereInput | offices_camerasScalarWhereInput[]
  }

  export type offices_sentiment_analysisUpdateManyWithoutOfficesNestedInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOfficesInput, offices_sentiment_analysisUncheckedCreateWithoutOfficesInput> | offices_sentiment_analysisCreateWithoutOfficesInput[] | offices_sentiment_analysisUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOfficesInput | offices_sentiment_analysisCreateOrConnectWithoutOfficesInput[]
    upsert?: offices_sentiment_analysisUpsertWithWhereUniqueWithoutOfficesInput | offices_sentiment_analysisUpsertWithWhereUniqueWithoutOfficesInput[]
    createMany?: offices_sentiment_analysisCreateManyOfficesInputEnvelope
    set?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    disconnect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    delete?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    update?: offices_sentiment_analysisUpdateWithWhereUniqueWithoutOfficesInput | offices_sentiment_analysisUpdateWithWhereUniqueWithoutOfficesInput[]
    updateMany?: offices_sentiment_analysisUpdateManyWithWhereWithoutOfficesInput | offices_sentiment_analysisUpdateManyWithWhereWithoutOfficesInput[]
    deleteMany?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
  }

  export type offices_footfall_analysisUpdateManyWithoutOfficeNestedInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutOfficeInput, offices_footfall_analysisUncheckedCreateWithoutOfficeInput> | offices_footfall_analysisCreateWithoutOfficeInput[] | offices_footfall_analysisUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutOfficeInput | offices_footfall_analysisCreateOrConnectWithoutOfficeInput[]
    upsert?: offices_footfall_analysisUpsertWithWhereUniqueWithoutOfficeInput | offices_footfall_analysisUpsertWithWhereUniqueWithoutOfficeInput[]
    createMany?: offices_footfall_analysisCreateManyOfficeInputEnvelope
    set?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    disconnect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    delete?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    update?: offices_footfall_analysisUpdateWithWhereUniqueWithoutOfficeInput | offices_footfall_analysisUpdateWithWhereUniqueWithoutOfficeInput[]
    updateMany?: offices_footfall_analysisUpdateManyWithWhereWithoutOfficeInput | offices_footfall_analysisUpdateManyWithWhereWithoutOfficeInput[]
    deleteMany?: offices_footfall_analysisScalarWhereInput | offices_footfall_analysisScalarWhereInput[]
  }

  export type office_streamsUncheckedUpdateManyWithoutOfficesNestedInput = {
    create?: XOR<office_streamsCreateWithoutOfficesInput, office_streamsUncheckedCreateWithoutOfficesInput> | office_streamsCreateWithoutOfficesInput[] | office_streamsUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: office_streamsCreateOrConnectWithoutOfficesInput | office_streamsCreateOrConnectWithoutOfficesInput[]
    upsert?: office_streamsUpsertWithWhereUniqueWithoutOfficesInput | office_streamsUpsertWithWhereUniqueWithoutOfficesInput[]
    createMany?: office_streamsCreateManyOfficesInputEnvelope
    set?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    disconnect?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    delete?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    connect?: office_streamsWhereUniqueInput | office_streamsWhereUniqueInput[]
    update?: office_streamsUpdateWithWhereUniqueWithoutOfficesInput | office_streamsUpdateWithWhereUniqueWithoutOfficesInput[]
    updateMany?: office_streamsUpdateManyWithWhereWithoutOfficesInput | office_streamsUpdateManyWithWhereWithoutOfficesInput[]
    deleteMany?: office_streamsScalarWhereInput | office_streamsScalarWhereInput[]
  }

  export type offices_attendanceUncheckedUpdateManyWithoutOfficeNestedInput = {
    create?: XOR<offices_attendanceCreateWithoutOfficeInput, offices_attendanceUncheckedCreateWithoutOfficeInput> | offices_attendanceCreateWithoutOfficeInput[] | offices_attendanceUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutOfficeInput | offices_attendanceCreateOrConnectWithoutOfficeInput[]
    upsert?: offices_attendanceUpsertWithWhereUniqueWithoutOfficeInput | offices_attendanceUpsertWithWhereUniqueWithoutOfficeInput[]
    createMany?: offices_attendanceCreateManyOfficeInputEnvelope
    set?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    disconnect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    delete?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    update?: offices_attendanceUpdateWithWhereUniqueWithoutOfficeInput | offices_attendanceUpdateWithWhereUniqueWithoutOfficeInput[]
    updateMany?: offices_attendanceUpdateManyWithWhereWithoutOfficeInput | offices_attendanceUpdateManyWithWhereWithoutOfficeInput[]
    deleteMany?: offices_attendanceScalarWhereInput | offices_attendanceScalarWhereInput[]
  }

  export type offices_camerasUncheckedUpdateManyWithoutOfficesNestedInput = {
    create?: XOR<offices_camerasCreateWithoutOfficesInput, offices_camerasUncheckedCreateWithoutOfficesInput> | offices_camerasCreateWithoutOfficesInput[] | offices_camerasUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOfficesInput | offices_camerasCreateOrConnectWithoutOfficesInput[]
    upsert?: offices_camerasUpsertWithWhereUniqueWithoutOfficesInput | offices_camerasUpsertWithWhereUniqueWithoutOfficesInput[]
    createMany?: offices_camerasCreateManyOfficesInputEnvelope
    set?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    disconnect?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    delete?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    connect?: offices_camerasWhereUniqueInput | offices_camerasWhereUniqueInput[]
    update?: offices_camerasUpdateWithWhereUniqueWithoutOfficesInput | offices_camerasUpdateWithWhereUniqueWithoutOfficesInput[]
    updateMany?: offices_camerasUpdateManyWithWhereWithoutOfficesInput | offices_camerasUpdateManyWithWhereWithoutOfficesInput[]
    deleteMany?: offices_camerasScalarWhereInput | offices_camerasScalarWhereInput[]
  }

  export type offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesNestedInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOfficesInput, offices_sentiment_analysisUncheckedCreateWithoutOfficesInput> | offices_sentiment_analysisCreateWithoutOfficesInput[] | offices_sentiment_analysisUncheckedCreateWithoutOfficesInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOfficesInput | offices_sentiment_analysisCreateOrConnectWithoutOfficesInput[]
    upsert?: offices_sentiment_analysisUpsertWithWhereUniqueWithoutOfficesInput | offices_sentiment_analysisUpsertWithWhereUniqueWithoutOfficesInput[]
    createMany?: offices_sentiment_analysisCreateManyOfficesInputEnvelope
    set?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    disconnect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    delete?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    update?: offices_sentiment_analysisUpdateWithWhereUniqueWithoutOfficesInput | offices_sentiment_analysisUpdateWithWhereUniqueWithoutOfficesInput[]
    updateMany?: offices_sentiment_analysisUpdateManyWithWhereWithoutOfficesInput | offices_sentiment_analysisUpdateManyWithWhereWithoutOfficesInput[]
    deleteMany?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
  }

  export type offices_footfall_analysisUncheckedUpdateManyWithoutOfficeNestedInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutOfficeInput, offices_footfall_analysisUncheckedCreateWithoutOfficeInput> | offices_footfall_analysisCreateWithoutOfficeInput[] | offices_footfall_analysisUncheckedCreateWithoutOfficeInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutOfficeInput | offices_footfall_analysisCreateOrConnectWithoutOfficeInput[]
    upsert?: offices_footfall_analysisUpsertWithWhereUniqueWithoutOfficeInput | offices_footfall_analysisUpsertWithWhereUniqueWithoutOfficeInput[]
    createMany?: offices_footfall_analysisCreateManyOfficeInputEnvelope
    set?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    disconnect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    delete?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    update?: offices_footfall_analysisUpdateWithWhereUniqueWithoutOfficeInput | offices_footfall_analysisUpdateWithWhereUniqueWithoutOfficeInput[]
    updateMany?: offices_footfall_analysisUpdateManyWithWhereWithoutOfficeInput | offices_footfall_analysisUpdateManyWithWhereWithoutOfficeInput[]
    deleteMany?: offices_footfall_analysisScalarWhereInput | offices_footfall_analysisScalarWhereInput[]
  }

  export type officesCreateNestedOneWithoutOffices_attendanceInput = {
    create?: XOR<officesCreateWithoutOffices_attendanceInput, officesUncheckedCreateWithoutOffices_attendanceInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_attendanceInput
    connect?: officesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutOffices_attendanceInput = {
    create?: XOR<usersCreateWithoutOffices_attendanceInput, usersUncheckedCreateWithoutOffices_attendanceInput>
    connectOrCreate?: usersCreateOrConnectWithoutOffices_attendanceInput
    connect?: usersWhereUniqueInput
  }

  export type officesUpdateOneWithoutOffices_attendanceNestedInput = {
    create?: XOR<officesCreateWithoutOffices_attendanceInput, officesUncheckedCreateWithoutOffices_attendanceInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_attendanceInput
    upsert?: officesUpsertWithoutOffices_attendanceInput
    disconnect?: officesWhereInput | boolean
    delete?: officesWhereInput | boolean
    connect?: officesWhereUniqueInput
    update?: XOR<XOR<officesUpdateToOneWithWhereWithoutOffices_attendanceInput, officesUpdateWithoutOffices_attendanceInput>, officesUncheckedUpdateWithoutOffices_attendanceInput>
  }

  export type usersUpdateOneWithoutOffices_attendanceNestedInput = {
    create?: XOR<usersCreateWithoutOffices_attendanceInput, usersUncheckedCreateWithoutOffices_attendanceInput>
    connectOrCreate?: usersCreateOrConnectWithoutOffices_attendanceInput
    upsert?: usersUpsertWithoutOffices_attendanceInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOffices_attendanceInput, usersUpdateWithoutOffices_attendanceInput>, usersUncheckedUpdateWithoutOffices_attendanceInput>
  }

  export type live_stream_favouritesCreateNestedManyWithoutOffices_camerasInput = {
    create?: XOR<live_stream_favouritesCreateWithoutOffices_camerasInput, live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput> | live_stream_favouritesCreateWithoutOffices_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput | live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput[]
    createMany?: live_stream_favouritesCreateManyOffices_camerasInputEnvelope
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
  }

  export type officesCreateNestedOneWithoutOffices_camerasInput = {
    create?: XOR<officesCreateWithoutOffices_camerasInput, officesUncheckedCreateWithoutOffices_camerasInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_camerasInput
    connect?: officesWhereUniqueInput
  }

  export type offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInputEnvelope
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
  }

  export type offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInputEnvelope
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
  }

  export type live_stream_favouritesUncheckedCreateNestedManyWithoutOffices_camerasInput = {
    create?: XOR<live_stream_favouritesCreateWithoutOffices_camerasInput, live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput> | live_stream_favouritesCreateWithoutOffices_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput | live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput[]
    createMany?: live_stream_favouritesCreateManyOffices_camerasInputEnvelope
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
  }

  export type offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInputEnvelope
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
  }

  export type offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInputEnvelope
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type live_stream_favouritesUpdateManyWithoutOffices_camerasNestedInput = {
    create?: XOR<live_stream_favouritesCreateWithoutOffices_camerasInput, live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput> | live_stream_favouritesCreateWithoutOffices_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput | live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput[]
    upsert?: live_stream_favouritesUpsertWithWhereUniqueWithoutOffices_camerasInput | live_stream_favouritesUpsertWithWhereUniqueWithoutOffices_camerasInput[]
    createMany?: live_stream_favouritesCreateManyOffices_camerasInputEnvelope
    set?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    disconnect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    delete?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    update?: live_stream_favouritesUpdateWithWhereUniqueWithoutOffices_camerasInput | live_stream_favouritesUpdateWithWhereUniqueWithoutOffices_camerasInput[]
    updateMany?: live_stream_favouritesUpdateManyWithWhereWithoutOffices_camerasInput | live_stream_favouritesUpdateManyWithWhereWithoutOffices_camerasInput[]
    deleteMany?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
  }

  export type officesUpdateOneWithoutOffices_camerasNestedInput = {
    create?: XOR<officesCreateWithoutOffices_camerasInput, officesUncheckedCreateWithoutOffices_camerasInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_camerasInput
    upsert?: officesUpsertWithoutOffices_camerasInput
    disconnect?: officesWhereInput | boolean
    delete?: officesWhereInput | boolean
    connect?: officesWhereUniqueInput
    update?: XOR<XOR<officesUpdateToOneWithWhereWithoutOffices_camerasInput, officesUpdateWithoutOffices_camerasInput>, officesUncheckedUpdateWithoutOffices_camerasInput>
  }

  export type offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    upsert?: offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInputEnvelope
    set?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    disconnect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    delete?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    update?: offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    updateMany?: offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    deleteMany?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
  }

  export type offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    upsert?: offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInputEnvelope
    set?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    disconnect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    delete?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    update?: offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    updateMany?: offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    deleteMany?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
  }

  export type live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasNestedInput = {
    create?: XOR<live_stream_favouritesCreateWithoutOffices_camerasInput, live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput> | live_stream_favouritesCreateWithoutOffices_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput | live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput[]
    upsert?: live_stream_favouritesUpsertWithWhereUniqueWithoutOffices_camerasInput | live_stream_favouritesUpsertWithWhereUniqueWithoutOffices_camerasInput[]
    createMany?: live_stream_favouritesCreateManyOffices_camerasInputEnvelope
    set?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    disconnect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    delete?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    update?: live_stream_favouritesUpdateWithWhereUniqueWithoutOffices_camerasInput | live_stream_favouritesUpdateWithWhereUniqueWithoutOffices_camerasInput[]
    updateMany?: live_stream_favouritesUpdateManyWithWhereWithoutOffices_camerasInput | live_stream_favouritesUpdateManyWithWhereWithoutOffices_camerasInput[]
    deleteMany?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
  }

  export type offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    upsert?: offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInputEnvelope
    set?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    disconnect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    delete?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    update?: offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    updateMany?: offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    deleteMany?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
  }

  export type offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput = {
    create?: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput> | offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[] | offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    connectOrCreate?: offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    upsert?: offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    createMany?: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInputEnvelope
    set?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    disconnect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    delete?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    connect?: offices_sentiment_analysisWhereUniqueInput | offices_sentiment_analysisWhereUniqueInput[]
    update?: offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    updateMany?: offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    deleteMany?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
  }

  export type officesCreateNestedOneWithoutOffices_sentiment_analysisInput = {
    create?: XOR<officesCreateWithoutOffices_sentiment_analysisInput, officesUncheckedCreateWithoutOffices_sentiment_analysisInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_sentiment_analysisInput
    connect?: officesWhereUniqueInput
  }

  export type offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    create?: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    connect?: offices_camerasWhereUniqueInput
  }

  export type offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    create?: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
    connect?: offices_camerasWhereUniqueInput
  }

  export type NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput = {
    set?: $Enums.offices_sentiment_analysis_sentiment_of | null
  }

  export type officesUpdateOneWithoutOffices_sentiment_analysisNestedInput = {
    create?: XOR<officesCreateWithoutOffices_sentiment_analysisInput, officesUncheckedCreateWithoutOffices_sentiment_analysisInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_sentiment_analysisInput
    upsert?: officesUpsertWithoutOffices_sentiment_analysisInput
    disconnect?: officesWhereInput | boolean
    delete?: officesWhereInput | boolean
    connect?: officesWhereUniqueInput
    update?: XOR<XOR<officesUpdateToOneWithWhereWithoutOffices_sentiment_analysisInput, officesUpdateWithoutOffices_sentiment_analysisInput>, officesUncheckedUpdateWithoutOffices_sentiment_analysisInput>
  }

  export type offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput = {
    create?: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    upsert?: offices_camerasUpsertWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    disconnect?: offices_camerasWhereInput | boolean
    delete?: offices_camerasWhereInput | boolean
    connect?: offices_camerasWhereUniqueInput
    update?: XOR<XOR<offices_camerasUpdateToOneWithWhereWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>, offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput = {
    create?: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
    connectOrCreate?: offices_camerasCreateOrConnectWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
    upsert?: offices_camerasUpsertWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
    disconnect?: offices_camerasWhereInput | boolean
    delete?: offices_camerasWhereInput | boolean
    connect?: offices_camerasWhereUniqueInput
    update?: XOR<XOR<offices_camerasUpdateToOneWithWhereWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>, offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type live_stream_favouritesCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<live_stream_favouritesCreateWithoutPark_camerasInput, live_stream_favouritesUncheckedCreateWithoutPark_camerasInput> | live_stream_favouritesCreateWithoutPark_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutPark_camerasInput | live_stream_favouritesCreateOrConnectWithoutPark_camerasInput[]
    createMany?: live_stream_favouritesCreateManyPark_camerasInputEnvelope
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
  }

  export type parksCreateNestedOneWithoutPark_camerasInput = {
    create?: XOR<parksCreateWithoutPark_camerasInput, parksUncheckedCreateWithoutPark_camerasInput>
    connectOrCreate?: parksCreateOrConnectWithoutPark_camerasInput
    connect?: parksWhereUniqueInput
  }

  export type parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput> | parks_behaviour_alertsCreateWithoutPark_camerasInput[] | parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput | parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_behaviour_alertsCreateManyPark_camerasInputEnvelope
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
  }

  export type parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput> | parks_intrusion_detectionCreateWithoutPark_camerasInput[] | parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput | parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_intrusion_detectionCreateManyPark_camerasInputEnvelope
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
  }

  export type parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInputEnvelope
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
  }

  export type parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInputEnvelope
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
  }

  export type parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutPark_camerasInput, parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput> | parks_smoking_detectionCreateWithoutPark_camerasInput[] | parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput | parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_smoking_detectionCreateManyPark_camerasInputEnvelope
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
  }

  export type parks_landscapingCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_landscapingCreateWithoutPark_camerasInput, parks_landscapingUncheckedCreateWithoutPark_camerasInput> | parks_landscapingCreateWithoutPark_camerasInput[] | parks_landscapingUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutPark_camerasInput | parks_landscapingCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_landscapingCreateManyPark_camerasInputEnvelope
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
  }

  export type parks_litter_detectionCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_litter_detectionCreateWithoutPark_camerasInput, parks_litter_detectionUncheckedCreateWithoutPark_camerasInput> | parks_litter_detectionCreateWithoutPark_camerasInput[] | parks_litter_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutPark_camerasInput | parks_litter_detectionCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_litter_detectionCreateManyPark_camerasInputEnvelope
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
  }

  export type live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<live_stream_favouritesCreateWithoutPark_camerasInput, live_stream_favouritesUncheckedCreateWithoutPark_camerasInput> | live_stream_favouritesCreateWithoutPark_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutPark_camerasInput | live_stream_favouritesCreateOrConnectWithoutPark_camerasInput[]
    createMany?: live_stream_favouritesCreateManyPark_camerasInputEnvelope
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
  }

  export type parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput> | parks_behaviour_alertsCreateWithoutPark_camerasInput[] | parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput | parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_behaviour_alertsCreateManyPark_camerasInputEnvelope
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
  }

  export type parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput> | parks_intrusion_detectionCreateWithoutPark_camerasInput[] | parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput | parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_intrusion_detectionCreateManyPark_camerasInputEnvelope
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
  }

  export type parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInputEnvelope
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
  }

  export type parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInputEnvelope
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
  }

  export type parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutPark_camerasInput, parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput> | parks_smoking_detectionCreateWithoutPark_camerasInput[] | parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput | parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_smoking_detectionCreateManyPark_camerasInputEnvelope
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
  }

  export type parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_landscapingCreateWithoutPark_camerasInput, parks_landscapingUncheckedCreateWithoutPark_camerasInput> | parks_landscapingCreateWithoutPark_camerasInput[] | parks_landscapingUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutPark_camerasInput | parks_landscapingCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_landscapingCreateManyPark_camerasInputEnvelope
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
  }

  export type parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput = {
    create?: XOR<parks_litter_detectionCreateWithoutPark_camerasInput, parks_litter_detectionUncheckedCreateWithoutPark_camerasInput> | parks_litter_detectionCreateWithoutPark_camerasInput[] | parks_litter_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutPark_camerasInput | parks_litter_detectionCreateOrConnectWithoutPark_camerasInput[]
    createMany?: parks_litter_detectionCreateManyPark_camerasInputEnvelope
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<live_stream_favouritesCreateWithoutPark_camerasInput, live_stream_favouritesUncheckedCreateWithoutPark_camerasInput> | live_stream_favouritesCreateWithoutPark_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutPark_camerasInput | live_stream_favouritesCreateOrConnectWithoutPark_camerasInput[]
    upsert?: live_stream_favouritesUpsertWithWhereUniqueWithoutPark_camerasInput | live_stream_favouritesUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: live_stream_favouritesCreateManyPark_camerasInputEnvelope
    set?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    disconnect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    delete?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    update?: live_stream_favouritesUpdateWithWhereUniqueWithoutPark_camerasInput | live_stream_favouritesUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: live_stream_favouritesUpdateManyWithWhereWithoutPark_camerasInput | live_stream_favouritesUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
  }

  export type parksUpdateOneWithoutPark_camerasNestedInput = {
    create?: XOR<parksCreateWithoutPark_camerasInput, parksUncheckedCreateWithoutPark_camerasInput>
    connectOrCreate?: parksCreateOrConnectWithoutPark_camerasInput
    upsert?: parksUpsertWithoutPark_camerasInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutPark_camerasInput, parksUpdateWithoutPark_camerasInput>, parksUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput> | parks_behaviour_alertsCreateWithoutPark_camerasInput[] | parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput | parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_behaviour_alertsUpsertWithWhereUniqueWithoutPark_camerasInput | parks_behaviour_alertsUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_behaviour_alertsCreateManyPark_camerasInputEnvelope
    set?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    disconnect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    delete?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    update?: parks_behaviour_alertsUpdateWithWhereUniqueWithoutPark_camerasInput | parks_behaviour_alertsUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_behaviour_alertsUpdateManyWithWhereWithoutPark_camerasInput | parks_behaviour_alertsUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_behaviour_alertsScalarWhereInput | parks_behaviour_alertsScalarWhereInput[]
  }

  export type parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput> | parks_intrusion_detectionCreateWithoutPark_camerasInput[] | parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput | parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_intrusion_detectionUpsertWithWhereUniqueWithoutPark_camerasInput | parks_intrusion_detectionUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_intrusion_detectionCreateManyPark_camerasInputEnvelope
    set?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    disconnect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    delete?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    update?: parks_intrusion_detectionUpdateWithWhereUniqueWithoutPark_camerasInput | parks_intrusion_detectionUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_intrusion_detectionUpdateManyWithWhereWithoutPark_camerasInput | parks_intrusion_detectionUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_intrusion_detectionScalarWhereInput | parks_intrusion_detectionScalarWhereInput[]
  }

  export type parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    upsert?: parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInputEnvelope
    set?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    disconnect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    delete?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    update?: parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    updateMany?: parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    deleteMany?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
  }

  export type parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    upsert?: parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInputEnvelope
    set?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    disconnect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    delete?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    update?: parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    updateMany?: parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    deleteMany?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
  }

  export type parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutPark_camerasInput, parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput> | parks_smoking_detectionCreateWithoutPark_camerasInput[] | parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput | parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_smoking_detectionUpsertWithWhereUniqueWithoutPark_camerasInput | parks_smoking_detectionUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_smoking_detectionCreateManyPark_camerasInputEnvelope
    set?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    disconnect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    delete?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    update?: parks_smoking_detectionUpdateWithWhereUniqueWithoutPark_camerasInput | parks_smoking_detectionUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_smoking_detectionUpdateManyWithWhereWithoutPark_camerasInput | parks_smoking_detectionUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_smoking_detectionScalarWhereInput | parks_smoking_detectionScalarWhereInput[]
  }

  export type parks_landscapingUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_landscapingCreateWithoutPark_camerasInput, parks_landscapingUncheckedCreateWithoutPark_camerasInput> | parks_landscapingCreateWithoutPark_camerasInput[] | parks_landscapingUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutPark_camerasInput | parks_landscapingCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_landscapingUpsertWithWhereUniqueWithoutPark_camerasInput | parks_landscapingUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_landscapingCreateManyPark_camerasInputEnvelope
    set?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    disconnect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    delete?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    update?: parks_landscapingUpdateWithWhereUniqueWithoutPark_camerasInput | parks_landscapingUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_landscapingUpdateManyWithWhereWithoutPark_camerasInput | parks_landscapingUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_landscapingScalarWhereInput | parks_landscapingScalarWhereInput[]
  }

  export type parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_litter_detectionCreateWithoutPark_camerasInput, parks_litter_detectionUncheckedCreateWithoutPark_camerasInput> | parks_litter_detectionCreateWithoutPark_camerasInput[] | parks_litter_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutPark_camerasInput | parks_litter_detectionCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_litter_detectionUpsertWithWhereUniqueWithoutPark_camerasInput | parks_litter_detectionUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_litter_detectionCreateManyPark_camerasInputEnvelope
    set?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    disconnect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    delete?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    update?: parks_litter_detectionUpdateWithWhereUniqueWithoutPark_camerasInput | parks_litter_detectionUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_litter_detectionUpdateManyWithWhereWithoutPark_camerasInput | parks_litter_detectionUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_litter_detectionScalarWhereInput | parks_litter_detectionScalarWhereInput[]
  }

  export type live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<live_stream_favouritesCreateWithoutPark_camerasInput, live_stream_favouritesUncheckedCreateWithoutPark_camerasInput> | live_stream_favouritesCreateWithoutPark_camerasInput[] | live_stream_favouritesUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutPark_camerasInput | live_stream_favouritesCreateOrConnectWithoutPark_camerasInput[]
    upsert?: live_stream_favouritesUpsertWithWhereUniqueWithoutPark_camerasInput | live_stream_favouritesUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: live_stream_favouritesCreateManyPark_camerasInputEnvelope
    set?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    disconnect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    delete?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    update?: live_stream_favouritesUpdateWithWhereUniqueWithoutPark_camerasInput | live_stream_favouritesUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: live_stream_favouritesUpdateManyWithWhereWithoutPark_camerasInput | live_stream_favouritesUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
  }

  export type parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput> | parks_behaviour_alertsCreateWithoutPark_camerasInput[] | parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput | parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_behaviour_alertsUpsertWithWhereUniqueWithoutPark_camerasInput | parks_behaviour_alertsUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_behaviour_alertsCreateManyPark_camerasInputEnvelope
    set?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    disconnect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    delete?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    update?: parks_behaviour_alertsUpdateWithWhereUniqueWithoutPark_camerasInput | parks_behaviour_alertsUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_behaviour_alertsUpdateManyWithWhereWithoutPark_camerasInput | parks_behaviour_alertsUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_behaviour_alertsScalarWhereInput | parks_behaviour_alertsScalarWhereInput[]
  }

  export type parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput> | parks_intrusion_detectionCreateWithoutPark_camerasInput[] | parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput | parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_intrusion_detectionUpsertWithWhereUniqueWithoutPark_camerasInput | parks_intrusion_detectionUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_intrusion_detectionCreateManyPark_camerasInputEnvelope
    set?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    disconnect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    delete?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    update?: parks_intrusion_detectionUpdateWithWhereUniqueWithoutPark_camerasInput | parks_intrusion_detectionUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_intrusion_detectionUpdateManyWithWhereWithoutPark_camerasInput | parks_intrusion_detectionUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_intrusion_detectionScalarWhereInput | parks_intrusion_detectionScalarWhereInput[]
  }

  export type parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    upsert?: parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInputEnvelope
    set?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    disconnect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    delete?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    update?: parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    updateMany?: parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    deleteMany?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
  }

  export type parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput> | parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[] | parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    upsert?: parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    createMany?: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInputEnvelope
    set?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    disconnect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    delete?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    update?: parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    updateMany?: parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    deleteMany?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
  }

  export type parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutPark_camerasInput, parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput> | parks_smoking_detectionCreateWithoutPark_camerasInput[] | parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput | parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_smoking_detectionUpsertWithWhereUniqueWithoutPark_camerasInput | parks_smoking_detectionUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_smoking_detectionCreateManyPark_camerasInputEnvelope
    set?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    disconnect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    delete?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    update?: parks_smoking_detectionUpdateWithWhereUniqueWithoutPark_camerasInput | parks_smoking_detectionUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_smoking_detectionUpdateManyWithWhereWithoutPark_camerasInput | parks_smoking_detectionUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_smoking_detectionScalarWhereInput | parks_smoking_detectionScalarWhereInput[]
  }

  export type parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_landscapingCreateWithoutPark_camerasInput, parks_landscapingUncheckedCreateWithoutPark_camerasInput> | parks_landscapingCreateWithoutPark_camerasInput[] | parks_landscapingUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutPark_camerasInput | parks_landscapingCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_landscapingUpsertWithWhereUniqueWithoutPark_camerasInput | parks_landscapingUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_landscapingCreateManyPark_camerasInputEnvelope
    set?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    disconnect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    delete?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    update?: parks_landscapingUpdateWithWhereUniqueWithoutPark_camerasInput | parks_landscapingUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_landscapingUpdateManyWithWhereWithoutPark_camerasInput | parks_landscapingUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_landscapingScalarWhereInput | parks_landscapingScalarWhereInput[]
  }

  export type parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput = {
    create?: XOR<parks_litter_detectionCreateWithoutPark_camerasInput, parks_litter_detectionUncheckedCreateWithoutPark_camerasInput> | parks_litter_detectionCreateWithoutPark_camerasInput[] | parks_litter_detectionUncheckedCreateWithoutPark_camerasInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutPark_camerasInput | parks_litter_detectionCreateOrConnectWithoutPark_camerasInput[]
    upsert?: parks_litter_detectionUpsertWithWhereUniqueWithoutPark_camerasInput | parks_litter_detectionUpsertWithWhereUniqueWithoutPark_camerasInput[]
    createMany?: parks_litter_detectionCreateManyPark_camerasInputEnvelope
    set?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    disconnect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    delete?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    update?: parks_litter_detectionUpdateWithWhereUniqueWithoutPark_camerasInput | parks_litter_detectionUpdateWithWhereUniqueWithoutPark_camerasInput[]
    updateMany?: parks_litter_detectionUpdateManyWithWhereWithoutPark_camerasInput | parks_litter_detectionUpdateManyWithWhereWithoutPark_camerasInput[]
    deleteMany?: parks_litter_detectionScalarWhereInput | parks_litter_detectionScalarWhereInput[]
  }

  export type parksCreateNestedOneWithoutPark_streamsInput = {
    create?: XOR<parksCreateWithoutPark_streamsInput, parksUncheckedCreateWithoutPark_streamsInput>
    connectOrCreate?: parksCreateOrConnectWithoutPark_streamsInput
    connect?: parksWhereUniqueInput
  }

  export type parksUpdateOneWithoutPark_streamsNestedInput = {
    create?: XOR<parksCreateWithoutPark_streamsInput, parksUncheckedCreateWithoutPark_streamsInput>
    connectOrCreate?: parksCreateOrConnectWithoutPark_streamsInput
    upsert?: parksUpsertWithoutPark_streamsInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutPark_streamsInput, parksUpdateWithoutPark_streamsInput>, parksUncheckedUpdateWithoutPark_streamsInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type parksCreateNestedOneWithoutPark_zonesInput = {
    create?: XOR<parksCreateWithoutPark_zonesInput, parksUncheckedCreateWithoutPark_zonesInput>
    connectOrCreate?: parksCreateOrConnectWithoutPark_zonesInput
    connect?: parksWhereUniqueInput
  }

  export type parks_irrigation_job_historyCreateNestedManyWithoutPark_zonesInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput> | parks_irrigation_job_historyCreateWithoutPark_zonesInput[] | parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput | parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput[]
    createMany?: parks_irrigation_job_historyCreateManyPark_zonesInputEnvelope
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
  }

  export type parks_irrigation_job_historyUncheckedCreateNestedManyWithoutPark_zonesInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput> | parks_irrigation_job_historyCreateWithoutPark_zonesInput[] | parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput | parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput[]
    createMany?: parks_irrigation_job_historyCreateManyPark_zonesInputEnvelope
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
  }

  export type parksUpdateOneWithoutPark_zonesNestedInput = {
    create?: XOR<parksCreateWithoutPark_zonesInput, parksUncheckedCreateWithoutPark_zonesInput>
    connectOrCreate?: parksCreateOrConnectWithoutPark_zonesInput
    upsert?: parksUpsertWithoutPark_zonesInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutPark_zonesInput, parksUpdateWithoutPark_zonesInput>, parksUncheckedUpdateWithoutPark_zonesInput>
  }

  export type parks_irrigation_job_historyUpdateManyWithoutPark_zonesNestedInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput> | parks_irrigation_job_historyCreateWithoutPark_zonesInput[] | parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput | parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput[]
    upsert?: parks_irrigation_job_historyUpsertWithWhereUniqueWithoutPark_zonesInput | parks_irrigation_job_historyUpsertWithWhereUniqueWithoutPark_zonesInput[]
    createMany?: parks_irrigation_job_historyCreateManyPark_zonesInputEnvelope
    set?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    disconnect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    delete?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    update?: parks_irrigation_job_historyUpdateWithWhereUniqueWithoutPark_zonesInput | parks_irrigation_job_historyUpdateWithWhereUniqueWithoutPark_zonesInput[]
    updateMany?: parks_irrigation_job_historyUpdateManyWithWhereWithoutPark_zonesInput | parks_irrigation_job_historyUpdateManyWithWhereWithoutPark_zonesInput[]
    deleteMany?: parks_irrigation_job_historyScalarWhereInput | parks_irrigation_job_historyScalarWhereInput[]
  }

  export type parks_irrigation_job_historyUncheckedUpdateManyWithoutPark_zonesNestedInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput> | parks_irrigation_job_historyCreateWithoutPark_zonesInput[] | parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput | parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput[]
    upsert?: parks_irrigation_job_historyUpsertWithWhereUniqueWithoutPark_zonesInput | parks_irrigation_job_historyUpsertWithWhereUniqueWithoutPark_zonesInput[]
    createMany?: parks_irrigation_job_historyCreateManyPark_zonesInputEnvelope
    set?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    disconnect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    delete?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    update?: parks_irrigation_job_historyUpdateWithWhereUniqueWithoutPark_zonesInput | parks_irrigation_job_historyUpdateWithWhereUniqueWithoutPark_zonesInput[]
    updateMany?: parks_irrigation_job_historyUpdateManyWithWhereWithoutPark_zonesInput | parks_irrigation_job_historyUpdateManyWithWhereWithoutPark_zonesInput[]
    deleteMany?: parks_irrigation_job_historyScalarWhereInput | parks_irrigation_job_historyScalarWhereInput[]
  }

  export type park_camerasCreateNestedManyWithoutParksInput = {
    create?: XOR<park_camerasCreateWithoutParksInput, park_camerasUncheckedCreateWithoutParksInput> | park_camerasCreateWithoutParksInput[] | park_camerasUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_camerasCreateOrConnectWithoutParksInput | park_camerasCreateOrConnectWithoutParksInput[]
    createMany?: park_camerasCreateManyParksInputEnvelope
    connect?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
  }

  export type park_streamsCreateNestedManyWithoutParksInput = {
    create?: XOR<park_streamsCreateWithoutParksInput, park_streamsUncheckedCreateWithoutParksInput> | park_streamsCreateWithoutParksInput[] | park_streamsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_streamsCreateOrConnectWithoutParksInput | park_streamsCreateOrConnectWithoutParksInput[]
    createMany?: park_streamsCreateManyParksInputEnvelope
    connect?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
  }

  export type park_zonesCreateNestedManyWithoutParksInput = {
    create?: XOR<park_zonesCreateWithoutParksInput, park_zonesUncheckedCreateWithoutParksInput> | park_zonesCreateWithoutParksInput[] | park_zonesUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_zonesCreateOrConnectWithoutParksInput | park_zonesCreateOrConnectWithoutParksInput[]
    createMany?: park_zonesCreateManyParksInputEnvelope
    connect?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
  }

  export type parks_attendanceCreateNestedManyWithoutParkInput = {
    create?: XOR<parks_attendanceCreateWithoutParkInput, parks_attendanceUncheckedCreateWithoutParkInput> | parks_attendanceCreateWithoutParkInput[] | parks_attendanceUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutParkInput | parks_attendanceCreateOrConnectWithoutParkInput[]
    createMany?: parks_attendanceCreateManyParkInputEnvelope
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
  }

  export type parks_behaviour_alertsCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutParksInput, parks_behaviour_alertsUncheckedCreateWithoutParksInput> | parks_behaviour_alertsCreateWithoutParksInput[] | parks_behaviour_alertsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutParksInput | parks_behaviour_alertsCreateOrConnectWithoutParksInput[]
    createMany?: parks_behaviour_alertsCreateManyParksInputEnvelope
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
  }

  export type parks_intrusion_detectionCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutParksInput, parks_intrusion_detectionUncheckedCreateWithoutParksInput> | parks_intrusion_detectionCreateWithoutParksInput[] | parks_intrusion_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutParksInput | parks_intrusion_detectionCreateOrConnectWithoutParksInput[]
    createMany?: parks_intrusion_detectionCreateManyParksInputEnvelope
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
  }

  export type parks_irrigation_job_historyCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutParksInput, parks_irrigation_job_historyUncheckedCreateWithoutParksInput> | parks_irrigation_job_historyCreateWithoutParksInput[] | parks_irrigation_job_historyUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutParksInput | parks_irrigation_job_historyCreateOrConnectWithoutParksInput[]
    createMany?: parks_irrigation_job_historyCreateManyParksInputEnvelope
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
  }

  export type parks_landscapingCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_landscapingCreateWithoutParksInput, parks_landscapingUncheckedCreateWithoutParksInput> | parks_landscapingCreateWithoutParksInput[] | parks_landscapingUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutParksInput | parks_landscapingCreateOrConnectWithoutParksInput[]
    createMany?: parks_landscapingCreateManyParksInputEnvelope
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
  }

  export type parks_litter_detectionCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_litter_detectionCreateWithoutParksInput, parks_litter_detectionUncheckedCreateWithoutParksInput> | parks_litter_detectionCreateWithoutParksInput[] | parks_litter_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutParksInput | parks_litter_detectionCreateOrConnectWithoutParksInput[]
    createMany?: parks_litter_detectionCreateManyParksInputEnvelope
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
  }

  export type parks_sentiment_analysisCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutParksInput, parks_sentiment_analysisUncheckedCreateWithoutParksInput> | parks_sentiment_analysisCreateWithoutParksInput[] | parks_sentiment_analysisUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutParksInput | parks_sentiment_analysisCreateOrConnectWithoutParksInput[]
    createMany?: parks_sentiment_analysisCreateManyParksInputEnvelope
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
  }

  export type parks_smoking_detectionCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutParksInput, parks_smoking_detectionUncheckedCreateWithoutParksInput> | parks_smoking_detectionCreateWithoutParksInput[] | parks_smoking_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutParksInput | parks_smoking_detectionCreateOrConnectWithoutParksInput[]
    createMany?: parks_smoking_detectionCreateManyParksInputEnvelope
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
  }

  export type parks_footfall_analysisCreateNestedManyWithoutParkInput = {
    create?: XOR<parks_footfall_analysisCreateWithoutParkInput, parks_footfall_analysisUncheckedCreateWithoutParkInput> | parks_footfall_analysisCreateWithoutParkInput[] | parks_footfall_analysisUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_footfall_analysisCreateOrConnectWithoutParkInput | parks_footfall_analysisCreateOrConnectWithoutParkInput[]
    createMany?: parks_footfall_analysisCreateManyParkInputEnvelope
    connect?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
  }

  export type park_camerasUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<park_camerasCreateWithoutParksInput, park_camerasUncheckedCreateWithoutParksInput> | park_camerasCreateWithoutParksInput[] | park_camerasUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_camerasCreateOrConnectWithoutParksInput | park_camerasCreateOrConnectWithoutParksInput[]
    createMany?: park_camerasCreateManyParksInputEnvelope
    connect?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
  }

  export type park_streamsUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<park_streamsCreateWithoutParksInput, park_streamsUncheckedCreateWithoutParksInput> | park_streamsCreateWithoutParksInput[] | park_streamsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_streamsCreateOrConnectWithoutParksInput | park_streamsCreateOrConnectWithoutParksInput[]
    createMany?: park_streamsCreateManyParksInputEnvelope
    connect?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
  }

  export type park_zonesUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<park_zonesCreateWithoutParksInput, park_zonesUncheckedCreateWithoutParksInput> | park_zonesCreateWithoutParksInput[] | park_zonesUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_zonesCreateOrConnectWithoutParksInput | park_zonesCreateOrConnectWithoutParksInput[]
    createMany?: park_zonesCreateManyParksInputEnvelope
    connect?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
  }

  export type parks_attendanceUncheckedCreateNestedManyWithoutParkInput = {
    create?: XOR<parks_attendanceCreateWithoutParkInput, parks_attendanceUncheckedCreateWithoutParkInput> | parks_attendanceCreateWithoutParkInput[] | parks_attendanceUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutParkInput | parks_attendanceCreateOrConnectWithoutParkInput[]
    createMany?: parks_attendanceCreateManyParkInputEnvelope
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
  }

  export type parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutParksInput, parks_behaviour_alertsUncheckedCreateWithoutParksInput> | parks_behaviour_alertsCreateWithoutParksInput[] | parks_behaviour_alertsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutParksInput | parks_behaviour_alertsCreateOrConnectWithoutParksInput[]
    createMany?: parks_behaviour_alertsCreateManyParksInputEnvelope
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
  }

  export type parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutParksInput, parks_intrusion_detectionUncheckedCreateWithoutParksInput> | parks_intrusion_detectionCreateWithoutParksInput[] | parks_intrusion_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutParksInput | parks_intrusion_detectionCreateOrConnectWithoutParksInput[]
    createMany?: parks_intrusion_detectionCreateManyParksInputEnvelope
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
  }

  export type parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutParksInput, parks_irrigation_job_historyUncheckedCreateWithoutParksInput> | parks_irrigation_job_historyCreateWithoutParksInput[] | parks_irrigation_job_historyUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutParksInput | parks_irrigation_job_historyCreateOrConnectWithoutParksInput[]
    createMany?: parks_irrigation_job_historyCreateManyParksInputEnvelope
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
  }

  export type parks_landscapingUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_landscapingCreateWithoutParksInput, parks_landscapingUncheckedCreateWithoutParksInput> | parks_landscapingCreateWithoutParksInput[] | parks_landscapingUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutParksInput | parks_landscapingCreateOrConnectWithoutParksInput[]
    createMany?: parks_landscapingCreateManyParksInputEnvelope
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
  }

  export type parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_litter_detectionCreateWithoutParksInput, parks_litter_detectionUncheckedCreateWithoutParksInput> | parks_litter_detectionCreateWithoutParksInput[] | parks_litter_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutParksInput | parks_litter_detectionCreateOrConnectWithoutParksInput[]
    createMany?: parks_litter_detectionCreateManyParksInputEnvelope
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
  }

  export type parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutParksInput, parks_sentiment_analysisUncheckedCreateWithoutParksInput> | parks_sentiment_analysisCreateWithoutParksInput[] | parks_sentiment_analysisUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutParksInput | parks_sentiment_analysisCreateOrConnectWithoutParksInput[]
    createMany?: parks_sentiment_analysisCreateManyParksInputEnvelope
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
  }

  export type parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutParksInput, parks_smoking_detectionUncheckedCreateWithoutParksInput> | parks_smoking_detectionCreateWithoutParksInput[] | parks_smoking_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutParksInput | parks_smoking_detectionCreateOrConnectWithoutParksInput[]
    createMany?: parks_smoking_detectionCreateManyParksInputEnvelope
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
  }

  export type parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput = {
    create?: XOR<parks_footfall_analysisCreateWithoutParkInput, parks_footfall_analysisUncheckedCreateWithoutParkInput> | parks_footfall_analysisCreateWithoutParkInput[] | parks_footfall_analysisUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_footfall_analysisCreateOrConnectWithoutParkInput | parks_footfall_analysisCreateOrConnectWithoutParkInput[]
    createMany?: parks_footfall_analysisCreateManyParkInputEnvelope
    connect?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
  }

  export type park_camerasUpdateManyWithoutParksNestedInput = {
    create?: XOR<park_camerasCreateWithoutParksInput, park_camerasUncheckedCreateWithoutParksInput> | park_camerasCreateWithoutParksInput[] | park_camerasUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_camerasCreateOrConnectWithoutParksInput | park_camerasCreateOrConnectWithoutParksInput[]
    upsert?: park_camerasUpsertWithWhereUniqueWithoutParksInput | park_camerasUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: park_camerasCreateManyParksInputEnvelope
    set?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    disconnect?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    delete?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    connect?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    update?: park_camerasUpdateWithWhereUniqueWithoutParksInput | park_camerasUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: park_camerasUpdateManyWithWhereWithoutParksInput | park_camerasUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: park_camerasScalarWhereInput | park_camerasScalarWhereInput[]
  }

  export type park_streamsUpdateManyWithoutParksNestedInput = {
    create?: XOR<park_streamsCreateWithoutParksInput, park_streamsUncheckedCreateWithoutParksInput> | park_streamsCreateWithoutParksInput[] | park_streamsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_streamsCreateOrConnectWithoutParksInput | park_streamsCreateOrConnectWithoutParksInput[]
    upsert?: park_streamsUpsertWithWhereUniqueWithoutParksInput | park_streamsUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: park_streamsCreateManyParksInputEnvelope
    set?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    disconnect?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    delete?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    connect?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    update?: park_streamsUpdateWithWhereUniqueWithoutParksInput | park_streamsUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: park_streamsUpdateManyWithWhereWithoutParksInput | park_streamsUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: park_streamsScalarWhereInput | park_streamsScalarWhereInput[]
  }

  export type park_zonesUpdateManyWithoutParksNestedInput = {
    create?: XOR<park_zonesCreateWithoutParksInput, park_zonesUncheckedCreateWithoutParksInput> | park_zonesCreateWithoutParksInput[] | park_zonesUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_zonesCreateOrConnectWithoutParksInput | park_zonesCreateOrConnectWithoutParksInput[]
    upsert?: park_zonesUpsertWithWhereUniqueWithoutParksInput | park_zonesUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: park_zonesCreateManyParksInputEnvelope
    set?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    disconnect?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    delete?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    connect?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    update?: park_zonesUpdateWithWhereUniqueWithoutParksInput | park_zonesUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: park_zonesUpdateManyWithWhereWithoutParksInput | park_zonesUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: park_zonesScalarWhereInput | park_zonesScalarWhereInput[]
  }

  export type parks_attendanceUpdateManyWithoutParkNestedInput = {
    create?: XOR<parks_attendanceCreateWithoutParkInput, parks_attendanceUncheckedCreateWithoutParkInput> | parks_attendanceCreateWithoutParkInput[] | parks_attendanceUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutParkInput | parks_attendanceCreateOrConnectWithoutParkInput[]
    upsert?: parks_attendanceUpsertWithWhereUniqueWithoutParkInput | parks_attendanceUpsertWithWhereUniqueWithoutParkInput[]
    createMany?: parks_attendanceCreateManyParkInputEnvelope
    set?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    disconnect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    delete?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    update?: parks_attendanceUpdateWithWhereUniqueWithoutParkInput | parks_attendanceUpdateWithWhereUniqueWithoutParkInput[]
    updateMany?: parks_attendanceUpdateManyWithWhereWithoutParkInput | parks_attendanceUpdateManyWithWhereWithoutParkInput[]
    deleteMany?: parks_attendanceScalarWhereInput | parks_attendanceScalarWhereInput[]
  }

  export type parks_behaviour_alertsUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutParksInput, parks_behaviour_alertsUncheckedCreateWithoutParksInput> | parks_behaviour_alertsCreateWithoutParksInput[] | parks_behaviour_alertsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutParksInput | parks_behaviour_alertsCreateOrConnectWithoutParksInput[]
    upsert?: parks_behaviour_alertsUpsertWithWhereUniqueWithoutParksInput | parks_behaviour_alertsUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_behaviour_alertsCreateManyParksInputEnvelope
    set?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    disconnect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    delete?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    update?: parks_behaviour_alertsUpdateWithWhereUniqueWithoutParksInput | parks_behaviour_alertsUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_behaviour_alertsUpdateManyWithWhereWithoutParksInput | parks_behaviour_alertsUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_behaviour_alertsScalarWhereInput | parks_behaviour_alertsScalarWhereInput[]
  }

  export type parks_intrusion_detectionUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutParksInput, parks_intrusion_detectionUncheckedCreateWithoutParksInput> | parks_intrusion_detectionCreateWithoutParksInput[] | parks_intrusion_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutParksInput | parks_intrusion_detectionCreateOrConnectWithoutParksInput[]
    upsert?: parks_intrusion_detectionUpsertWithWhereUniqueWithoutParksInput | parks_intrusion_detectionUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_intrusion_detectionCreateManyParksInputEnvelope
    set?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    disconnect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    delete?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    update?: parks_intrusion_detectionUpdateWithWhereUniqueWithoutParksInput | parks_intrusion_detectionUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_intrusion_detectionUpdateManyWithWhereWithoutParksInput | parks_intrusion_detectionUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_intrusion_detectionScalarWhereInput | parks_intrusion_detectionScalarWhereInput[]
  }

  export type parks_irrigation_job_historyUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutParksInput, parks_irrigation_job_historyUncheckedCreateWithoutParksInput> | parks_irrigation_job_historyCreateWithoutParksInput[] | parks_irrigation_job_historyUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutParksInput | parks_irrigation_job_historyCreateOrConnectWithoutParksInput[]
    upsert?: parks_irrigation_job_historyUpsertWithWhereUniqueWithoutParksInput | parks_irrigation_job_historyUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_irrigation_job_historyCreateManyParksInputEnvelope
    set?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    disconnect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    delete?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    update?: parks_irrigation_job_historyUpdateWithWhereUniqueWithoutParksInput | parks_irrigation_job_historyUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_irrigation_job_historyUpdateManyWithWhereWithoutParksInput | parks_irrigation_job_historyUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_irrigation_job_historyScalarWhereInput | parks_irrigation_job_historyScalarWhereInput[]
  }

  export type parks_landscapingUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_landscapingCreateWithoutParksInput, parks_landscapingUncheckedCreateWithoutParksInput> | parks_landscapingCreateWithoutParksInput[] | parks_landscapingUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutParksInput | parks_landscapingCreateOrConnectWithoutParksInput[]
    upsert?: parks_landscapingUpsertWithWhereUniqueWithoutParksInput | parks_landscapingUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_landscapingCreateManyParksInputEnvelope
    set?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    disconnect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    delete?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    update?: parks_landscapingUpdateWithWhereUniqueWithoutParksInput | parks_landscapingUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_landscapingUpdateManyWithWhereWithoutParksInput | parks_landscapingUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_landscapingScalarWhereInput | parks_landscapingScalarWhereInput[]
  }

  export type parks_litter_detectionUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_litter_detectionCreateWithoutParksInput, parks_litter_detectionUncheckedCreateWithoutParksInput> | parks_litter_detectionCreateWithoutParksInput[] | parks_litter_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutParksInput | parks_litter_detectionCreateOrConnectWithoutParksInput[]
    upsert?: parks_litter_detectionUpsertWithWhereUniqueWithoutParksInput | parks_litter_detectionUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_litter_detectionCreateManyParksInputEnvelope
    set?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    disconnect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    delete?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    update?: parks_litter_detectionUpdateWithWhereUniqueWithoutParksInput | parks_litter_detectionUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_litter_detectionUpdateManyWithWhereWithoutParksInput | parks_litter_detectionUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_litter_detectionScalarWhereInput | parks_litter_detectionScalarWhereInput[]
  }

  export type parks_sentiment_analysisUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutParksInput, parks_sentiment_analysisUncheckedCreateWithoutParksInput> | parks_sentiment_analysisCreateWithoutParksInput[] | parks_sentiment_analysisUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutParksInput | parks_sentiment_analysisCreateOrConnectWithoutParksInput[]
    upsert?: parks_sentiment_analysisUpsertWithWhereUniqueWithoutParksInput | parks_sentiment_analysisUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_sentiment_analysisCreateManyParksInputEnvelope
    set?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    disconnect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    delete?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    update?: parks_sentiment_analysisUpdateWithWhereUniqueWithoutParksInput | parks_sentiment_analysisUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_sentiment_analysisUpdateManyWithWhereWithoutParksInput | parks_sentiment_analysisUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
  }

  export type parks_smoking_detectionUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutParksInput, parks_smoking_detectionUncheckedCreateWithoutParksInput> | parks_smoking_detectionCreateWithoutParksInput[] | parks_smoking_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutParksInput | parks_smoking_detectionCreateOrConnectWithoutParksInput[]
    upsert?: parks_smoking_detectionUpsertWithWhereUniqueWithoutParksInput | parks_smoking_detectionUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_smoking_detectionCreateManyParksInputEnvelope
    set?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    disconnect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    delete?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    update?: parks_smoking_detectionUpdateWithWhereUniqueWithoutParksInput | parks_smoking_detectionUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_smoking_detectionUpdateManyWithWhereWithoutParksInput | parks_smoking_detectionUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_smoking_detectionScalarWhereInput | parks_smoking_detectionScalarWhereInput[]
  }

  export type parks_footfall_analysisUpdateManyWithoutParkNestedInput = {
    create?: XOR<parks_footfall_analysisCreateWithoutParkInput, parks_footfall_analysisUncheckedCreateWithoutParkInput> | parks_footfall_analysisCreateWithoutParkInput[] | parks_footfall_analysisUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_footfall_analysisCreateOrConnectWithoutParkInput | parks_footfall_analysisCreateOrConnectWithoutParkInput[]
    upsert?: parks_footfall_analysisUpsertWithWhereUniqueWithoutParkInput | parks_footfall_analysisUpsertWithWhereUniqueWithoutParkInput[]
    createMany?: parks_footfall_analysisCreateManyParkInputEnvelope
    set?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    disconnect?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    delete?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    connect?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    update?: parks_footfall_analysisUpdateWithWhereUniqueWithoutParkInput | parks_footfall_analysisUpdateWithWhereUniqueWithoutParkInput[]
    updateMany?: parks_footfall_analysisUpdateManyWithWhereWithoutParkInput | parks_footfall_analysisUpdateManyWithWhereWithoutParkInput[]
    deleteMany?: parks_footfall_analysisScalarWhereInput | parks_footfall_analysisScalarWhereInput[]
  }

  export type park_camerasUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<park_camerasCreateWithoutParksInput, park_camerasUncheckedCreateWithoutParksInput> | park_camerasCreateWithoutParksInput[] | park_camerasUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_camerasCreateOrConnectWithoutParksInput | park_camerasCreateOrConnectWithoutParksInput[]
    upsert?: park_camerasUpsertWithWhereUniqueWithoutParksInput | park_camerasUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: park_camerasCreateManyParksInputEnvelope
    set?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    disconnect?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    delete?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    connect?: park_camerasWhereUniqueInput | park_camerasWhereUniqueInput[]
    update?: park_camerasUpdateWithWhereUniqueWithoutParksInput | park_camerasUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: park_camerasUpdateManyWithWhereWithoutParksInput | park_camerasUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: park_camerasScalarWhereInput | park_camerasScalarWhereInput[]
  }

  export type park_streamsUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<park_streamsCreateWithoutParksInput, park_streamsUncheckedCreateWithoutParksInput> | park_streamsCreateWithoutParksInput[] | park_streamsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_streamsCreateOrConnectWithoutParksInput | park_streamsCreateOrConnectWithoutParksInput[]
    upsert?: park_streamsUpsertWithWhereUniqueWithoutParksInput | park_streamsUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: park_streamsCreateManyParksInputEnvelope
    set?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    disconnect?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    delete?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    connect?: park_streamsWhereUniqueInput | park_streamsWhereUniqueInput[]
    update?: park_streamsUpdateWithWhereUniqueWithoutParksInput | park_streamsUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: park_streamsUpdateManyWithWhereWithoutParksInput | park_streamsUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: park_streamsScalarWhereInput | park_streamsScalarWhereInput[]
  }

  export type park_zonesUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<park_zonesCreateWithoutParksInput, park_zonesUncheckedCreateWithoutParksInput> | park_zonesCreateWithoutParksInput[] | park_zonesUncheckedCreateWithoutParksInput[]
    connectOrCreate?: park_zonesCreateOrConnectWithoutParksInput | park_zonesCreateOrConnectWithoutParksInput[]
    upsert?: park_zonesUpsertWithWhereUniqueWithoutParksInput | park_zonesUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: park_zonesCreateManyParksInputEnvelope
    set?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    disconnect?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    delete?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    connect?: park_zonesWhereUniqueInput | park_zonesWhereUniqueInput[]
    update?: park_zonesUpdateWithWhereUniqueWithoutParksInput | park_zonesUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: park_zonesUpdateManyWithWhereWithoutParksInput | park_zonesUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: park_zonesScalarWhereInput | park_zonesScalarWhereInput[]
  }

  export type parks_attendanceUncheckedUpdateManyWithoutParkNestedInput = {
    create?: XOR<parks_attendanceCreateWithoutParkInput, parks_attendanceUncheckedCreateWithoutParkInput> | parks_attendanceCreateWithoutParkInput[] | parks_attendanceUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutParkInput | parks_attendanceCreateOrConnectWithoutParkInput[]
    upsert?: parks_attendanceUpsertWithWhereUniqueWithoutParkInput | parks_attendanceUpsertWithWhereUniqueWithoutParkInput[]
    createMany?: parks_attendanceCreateManyParkInputEnvelope
    set?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    disconnect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    delete?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    update?: parks_attendanceUpdateWithWhereUniqueWithoutParkInput | parks_attendanceUpdateWithWhereUniqueWithoutParkInput[]
    updateMany?: parks_attendanceUpdateManyWithWhereWithoutParkInput | parks_attendanceUpdateManyWithWhereWithoutParkInput[]
    deleteMany?: parks_attendanceScalarWhereInput | parks_attendanceScalarWhereInput[]
  }

  export type parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_behaviour_alertsCreateWithoutParksInput, parks_behaviour_alertsUncheckedCreateWithoutParksInput> | parks_behaviour_alertsCreateWithoutParksInput[] | parks_behaviour_alertsUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_behaviour_alertsCreateOrConnectWithoutParksInput | parks_behaviour_alertsCreateOrConnectWithoutParksInput[]
    upsert?: parks_behaviour_alertsUpsertWithWhereUniqueWithoutParksInput | parks_behaviour_alertsUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_behaviour_alertsCreateManyParksInputEnvelope
    set?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    disconnect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    delete?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    connect?: parks_behaviour_alertsWhereUniqueInput | parks_behaviour_alertsWhereUniqueInput[]
    update?: parks_behaviour_alertsUpdateWithWhereUniqueWithoutParksInput | parks_behaviour_alertsUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_behaviour_alertsUpdateManyWithWhereWithoutParksInput | parks_behaviour_alertsUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_behaviour_alertsScalarWhereInput | parks_behaviour_alertsScalarWhereInput[]
  }

  export type parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutParksInput, parks_intrusion_detectionUncheckedCreateWithoutParksInput> | parks_intrusion_detectionCreateWithoutParksInput[] | parks_intrusion_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutParksInput | parks_intrusion_detectionCreateOrConnectWithoutParksInput[]
    upsert?: parks_intrusion_detectionUpsertWithWhereUniqueWithoutParksInput | parks_intrusion_detectionUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_intrusion_detectionCreateManyParksInputEnvelope
    set?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    disconnect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    delete?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    connect?: parks_intrusion_detectionWhereUniqueInput | parks_intrusion_detectionWhereUniqueInput[]
    update?: parks_intrusion_detectionUpdateWithWhereUniqueWithoutParksInput | parks_intrusion_detectionUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_intrusion_detectionUpdateManyWithWhereWithoutParksInput | parks_intrusion_detectionUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_intrusion_detectionScalarWhereInput | parks_intrusion_detectionScalarWhereInput[]
  }

  export type parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_irrigation_job_historyCreateWithoutParksInput, parks_irrigation_job_historyUncheckedCreateWithoutParksInput> | parks_irrigation_job_historyCreateWithoutParksInput[] | parks_irrigation_job_historyUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_irrigation_job_historyCreateOrConnectWithoutParksInput | parks_irrigation_job_historyCreateOrConnectWithoutParksInput[]
    upsert?: parks_irrigation_job_historyUpsertWithWhereUniqueWithoutParksInput | parks_irrigation_job_historyUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_irrigation_job_historyCreateManyParksInputEnvelope
    set?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    disconnect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    delete?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    connect?: parks_irrigation_job_historyWhereUniqueInput | parks_irrigation_job_historyWhereUniqueInput[]
    update?: parks_irrigation_job_historyUpdateWithWhereUniqueWithoutParksInput | parks_irrigation_job_historyUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_irrigation_job_historyUpdateManyWithWhereWithoutParksInput | parks_irrigation_job_historyUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_irrigation_job_historyScalarWhereInput | parks_irrigation_job_historyScalarWhereInput[]
  }

  export type parks_landscapingUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_landscapingCreateWithoutParksInput, parks_landscapingUncheckedCreateWithoutParksInput> | parks_landscapingCreateWithoutParksInput[] | parks_landscapingUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutParksInput | parks_landscapingCreateOrConnectWithoutParksInput[]
    upsert?: parks_landscapingUpsertWithWhereUniqueWithoutParksInput | parks_landscapingUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_landscapingCreateManyParksInputEnvelope
    set?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    disconnect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    delete?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    connect?: parks_landscapingWhereUniqueInput | parks_landscapingWhereUniqueInput[]
    update?: parks_landscapingUpdateWithWhereUniqueWithoutParksInput | parks_landscapingUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_landscapingUpdateManyWithWhereWithoutParksInput | parks_landscapingUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_landscapingScalarWhereInput | parks_landscapingScalarWhereInput[]
  }

  export type parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_litter_detectionCreateWithoutParksInput, parks_litter_detectionUncheckedCreateWithoutParksInput> | parks_litter_detectionCreateWithoutParksInput[] | parks_litter_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutParksInput | parks_litter_detectionCreateOrConnectWithoutParksInput[]
    upsert?: parks_litter_detectionUpsertWithWhereUniqueWithoutParksInput | parks_litter_detectionUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_litter_detectionCreateManyParksInputEnvelope
    set?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    disconnect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    delete?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    connect?: parks_litter_detectionWhereUniqueInput | parks_litter_detectionWhereUniqueInput[]
    update?: parks_litter_detectionUpdateWithWhereUniqueWithoutParksInput | parks_litter_detectionUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_litter_detectionUpdateManyWithWhereWithoutParksInput | parks_litter_detectionUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_litter_detectionScalarWhereInput | parks_litter_detectionScalarWhereInput[]
  }

  export type parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_sentiment_analysisCreateWithoutParksInput, parks_sentiment_analysisUncheckedCreateWithoutParksInput> | parks_sentiment_analysisCreateWithoutParksInput[] | parks_sentiment_analysisUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_sentiment_analysisCreateOrConnectWithoutParksInput | parks_sentiment_analysisCreateOrConnectWithoutParksInput[]
    upsert?: parks_sentiment_analysisUpsertWithWhereUniqueWithoutParksInput | parks_sentiment_analysisUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_sentiment_analysisCreateManyParksInputEnvelope
    set?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    disconnect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    delete?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    connect?: parks_sentiment_analysisWhereUniqueInput | parks_sentiment_analysisWhereUniqueInput[]
    update?: parks_sentiment_analysisUpdateWithWhereUniqueWithoutParksInput | parks_sentiment_analysisUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_sentiment_analysisUpdateManyWithWhereWithoutParksInput | parks_sentiment_analysisUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
  }

  export type parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutParksInput, parks_smoking_detectionUncheckedCreateWithoutParksInput> | parks_smoking_detectionCreateWithoutParksInput[] | parks_smoking_detectionUncheckedCreateWithoutParksInput[]
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutParksInput | parks_smoking_detectionCreateOrConnectWithoutParksInput[]
    upsert?: parks_smoking_detectionUpsertWithWhereUniqueWithoutParksInput | parks_smoking_detectionUpsertWithWhereUniqueWithoutParksInput[]
    createMany?: parks_smoking_detectionCreateManyParksInputEnvelope
    set?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    disconnect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    delete?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    connect?: parks_smoking_detectionWhereUniqueInput | parks_smoking_detectionWhereUniqueInput[]
    update?: parks_smoking_detectionUpdateWithWhereUniqueWithoutParksInput | parks_smoking_detectionUpdateWithWhereUniqueWithoutParksInput[]
    updateMany?: parks_smoking_detectionUpdateManyWithWhereWithoutParksInput | parks_smoking_detectionUpdateManyWithWhereWithoutParksInput[]
    deleteMany?: parks_smoking_detectionScalarWhereInput | parks_smoking_detectionScalarWhereInput[]
  }

  export type parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput = {
    create?: XOR<parks_footfall_analysisCreateWithoutParkInput, parks_footfall_analysisUncheckedCreateWithoutParkInput> | parks_footfall_analysisCreateWithoutParkInput[] | parks_footfall_analysisUncheckedCreateWithoutParkInput[]
    connectOrCreate?: parks_footfall_analysisCreateOrConnectWithoutParkInput | parks_footfall_analysisCreateOrConnectWithoutParkInput[]
    upsert?: parks_footfall_analysisUpsertWithWhereUniqueWithoutParkInput | parks_footfall_analysisUpsertWithWhereUniqueWithoutParkInput[]
    createMany?: parks_footfall_analysisCreateManyParkInputEnvelope
    set?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    disconnect?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    delete?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    connect?: parks_footfall_analysisWhereUniqueInput | parks_footfall_analysisWhereUniqueInput[]
    update?: parks_footfall_analysisUpdateWithWhereUniqueWithoutParkInput | parks_footfall_analysisUpdateWithWhereUniqueWithoutParkInput[]
    updateMany?: parks_footfall_analysisUpdateManyWithWhereWithoutParkInput | parks_footfall_analysisUpdateManyWithWhereWithoutParkInput[]
    deleteMany?: parks_footfall_analysisScalarWhereInput | parks_footfall_analysisScalarWhereInput[]
  }

  export type parksCreateNestedOneWithoutParks_attendanceInput = {
    create?: XOR<parksCreateWithoutParks_attendanceInput, parksUncheckedCreateWithoutParks_attendanceInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_attendanceInput
    connect?: parksWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutParks_attendanceInput = {
    create?: XOR<usersCreateWithoutParks_attendanceInput, usersUncheckedCreateWithoutParks_attendanceInput>
    connectOrCreate?: usersCreateOrConnectWithoutParks_attendanceInput
    connect?: usersWhereUniqueInput
  }

  export type parksUpdateOneWithoutParks_attendanceNestedInput = {
    create?: XOR<parksCreateWithoutParks_attendanceInput, parksUncheckedCreateWithoutParks_attendanceInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_attendanceInput
    upsert?: parksUpsertWithoutParks_attendanceInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_attendanceInput, parksUpdateWithoutParks_attendanceInput>, parksUncheckedUpdateWithoutParks_attendanceInput>
  }

  export type usersUpdateOneWithoutParks_attendanceNestedInput = {
    create?: XOR<usersCreateWithoutParks_attendanceInput, usersUncheckedCreateWithoutParks_attendanceInput>
    connectOrCreate?: usersCreateOrConnectWithoutParks_attendanceInput
    upsert?: usersUpsertWithoutParks_attendanceInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutParks_attendanceInput, usersUpdateWithoutParks_attendanceInput>, usersUncheckedUpdateWithoutParks_attendanceInput>
  }

  export type parksCreateNestedOneWithoutParks_behaviour_alertsInput = {
    create?: XOR<parksCreateWithoutParks_behaviour_alertsInput, parksUncheckedCreateWithoutParks_behaviour_alertsInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_behaviour_alertsInput
    connect?: parksWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_behaviour_alertsInput = {
    create?: XOR<park_camerasCreateWithoutParks_behaviour_alertsInput, park_camerasUncheckedCreateWithoutParks_behaviour_alertsInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_behaviour_alertsInput
    connect?: park_camerasWhereUniqueInput
  }

  export type parksUpdateOneWithoutParks_behaviour_alertsNestedInput = {
    create?: XOR<parksCreateWithoutParks_behaviour_alertsInput, parksUncheckedCreateWithoutParks_behaviour_alertsInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_behaviour_alertsInput
    upsert?: parksUpsertWithoutParks_behaviour_alertsInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_behaviour_alertsInput, parksUpdateWithoutParks_behaviour_alertsInput>, parksUncheckedUpdateWithoutParks_behaviour_alertsInput>
  }

  export type park_camerasUpdateOneWithoutParks_behaviour_alertsNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_behaviour_alertsInput, park_camerasUncheckedCreateWithoutParks_behaviour_alertsInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_behaviour_alertsInput
    upsert?: park_camerasUpsertWithoutParks_behaviour_alertsInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_behaviour_alertsInput, park_camerasUpdateWithoutParks_behaviour_alertsInput>, park_camerasUncheckedUpdateWithoutParks_behaviour_alertsInput>
  }

  export type parksCreateNestedOneWithoutParks_intrusion_detectionInput = {
    create?: XOR<parksCreateWithoutParks_intrusion_detectionInput, parksUncheckedCreateWithoutParks_intrusion_detectionInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_intrusion_detectionInput
    connect?: parksWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_intrusion_detectionInput = {
    create?: XOR<park_camerasCreateWithoutParks_intrusion_detectionInput, park_camerasUncheckedCreateWithoutParks_intrusion_detectionInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_intrusion_detectionInput
    connect?: park_camerasWhereUniqueInput
  }

  export type intranet_posting_historyCreateNestedManyWithoutIntrusionDetectionInput = {
    create?: XOR<intranet_posting_historyCreateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput> | intranet_posting_historyCreateWithoutIntrusionDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput | intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput[]
    createMany?: intranet_posting_historyCreateManyIntrusionDetectionInputEnvelope
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
  }

  export type intranet_posting_historyUncheckedCreateNestedManyWithoutIntrusionDetectionInput = {
    create?: XOR<intranet_posting_historyCreateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput> | intranet_posting_historyCreateWithoutIntrusionDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput | intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput[]
    createMany?: intranet_posting_historyCreateManyIntrusionDetectionInputEnvelope
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
  }

  export type parksUpdateOneWithoutParks_intrusion_detectionNestedInput = {
    create?: XOR<parksCreateWithoutParks_intrusion_detectionInput, parksUncheckedCreateWithoutParks_intrusion_detectionInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_intrusion_detectionInput
    upsert?: parksUpsertWithoutParks_intrusion_detectionInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_intrusion_detectionInput, parksUpdateWithoutParks_intrusion_detectionInput>, parksUncheckedUpdateWithoutParks_intrusion_detectionInput>
  }

  export type park_camerasUpdateOneWithoutParks_intrusion_detectionNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_intrusion_detectionInput, park_camerasUncheckedCreateWithoutParks_intrusion_detectionInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_intrusion_detectionInput
    upsert?: park_camerasUpsertWithoutParks_intrusion_detectionInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_intrusion_detectionInput, park_camerasUpdateWithoutParks_intrusion_detectionInput>, park_camerasUncheckedUpdateWithoutParks_intrusion_detectionInput>
  }

  export type intranet_posting_historyUpdateManyWithoutIntrusionDetectionNestedInput = {
    create?: XOR<intranet_posting_historyCreateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput> | intranet_posting_historyCreateWithoutIntrusionDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput | intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput[]
    upsert?: intranet_posting_historyUpsertWithWhereUniqueWithoutIntrusionDetectionInput | intranet_posting_historyUpsertWithWhereUniqueWithoutIntrusionDetectionInput[]
    createMany?: intranet_posting_historyCreateManyIntrusionDetectionInputEnvelope
    set?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    disconnect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    delete?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    update?: intranet_posting_historyUpdateWithWhereUniqueWithoutIntrusionDetectionInput | intranet_posting_historyUpdateWithWhereUniqueWithoutIntrusionDetectionInput[]
    updateMany?: intranet_posting_historyUpdateManyWithWhereWithoutIntrusionDetectionInput | intranet_posting_historyUpdateManyWithWhereWithoutIntrusionDetectionInput[]
    deleteMany?: intranet_posting_historyScalarWhereInput | intranet_posting_historyScalarWhereInput[]
  }

  export type intranet_posting_historyUncheckedUpdateManyWithoutIntrusionDetectionNestedInput = {
    create?: XOR<intranet_posting_historyCreateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput> | intranet_posting_historyCreateWithoutIntrusionDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput | intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput[]
    upsert?: intranet_posting_historyUpsertWithWhereUniqueWithoutIntrusionDetectionInput | intranet_posting_historyUpsertWithWhereUniqueWithoutIntrusionDetectionInput[]
    createMany?: intranet_posting_historyCreateManyIntrusionDetectionInputEnvelope
    set?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    disconnect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    delete?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    update?: intranet_posting_historyUpdateWithWhereUniqueWithoutIntrusionDetectionInput | intranet_posting_historyUpdateWithWhereUniqueWithoutIntrusionDetectionInput[]
    updateMany?: intranet_posting_historyUpdateManyWithWhereWithoutIntrusionDetectionInput | intranet_posting_historyUpdateManyWithWhereWithoutIntrusionDetectionInput[]
    deleteMany?: intranet_posting_historyScalarWhereInput | intranet_posting_historyScalarWhereInput[]
  }

  export type parksCreateNestedOneWithoutParks_irrigation_job_historyInput = {
    create?: XOR<parksCreateWithoutParks_irrigation_job_historyInput, parksUncheckedCreateWithoutParks_irrigation_job_historyInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_irrigation_job_historyInput
    connect?: parksWhereUniqueInput
  }

  export type park_zonesCreateNestedOneWithoutParks_irrigation_job_historyInput = {
    create?: XOR<park_zonesCreateWithoutParks_irrigation_job_historyInput, park_zonesUncheckedCreateWithoutParks_irrigation_job_historyInput>
    connectOrCreate?: park_zonesCreateOrConnectWithoutParks_irrigation_job_historyInput
    connect?: park_zonesWhereUniqueInput
  }

  export type parksUpdateOneWithoutParks_irrigation_job_historyNestedInput = {
    create?: XOR<parksCreateWithoutParks_irrigation_job_historyInput, parksUncheckedCreateWithoutParks_irrigation_job_historyInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_irrigation_job_historyInput
    upsert?: parksUpsertWithoutParks_irrigation_job_historyInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_irrigation_job_historyInput, parksUpdateWithoutParks_irrigation_job_historyInput>, parksUncheckedUpdateWithoutParks_irrigation_job_historyInput>
  }

  export type park_zonesUpdateOneWithoutParks_irrigation_job_historyNestedInput = {
    create?: XOR<park_zonesCreateWithoutParks_irrigation_job_historyInput, park_zonesUncheckedCreateWithoutParks_irrigation_job_historyInput>
    connectOrCreate?: park_zonesCreateOrConnectWithoutParks_irrigation_job_historyInput
    upsert?: park_zonesUpsertWithoutParks_irrigation_job_historyInput
    disconnect?: park_zonesWhereInput | boolean
    delete?: park_zonesWhereInput | boolean
    connect?: park_zonesWhereUniqueInput
    update?: XOR<XOR<park_zonesUpdateToOneWithWhereWithoutParks_irrigation_job_historyInput, park_zonesUpdateWithoutParks_irrigation_job_historyInput>, park_zonesUncheckedUpdateWithoutParks_irrigation_job_historyInput>
  }

  export type parksCreateNestedOneWithoutParks_landscapingInput = {
    create?: XOR<parksCreateWithoutParks_landscapingInput, parksUncheckedCreateWithoutParks_landscapingInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_landscapingInput
    connect?: parksWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_landscapingInput = {
    create?: XOR<park_camerasCreateWithoutParks_landscapingInput, park_camerasUncheckedCreateWithoutParks_landscapingInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_landscapingInput
    connect?: park_camerasWhereUniqueInput
  }

  export type ticket_details_tableCreateNestedManyWithoutParks_landscapingInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_landscapingInput, ticket_details_tableUncheckedCreateWithoutParks_landscapingInput> | ticket_details_tableCreateWithoutParks_landscapingInput[] | ticket_details_tableUncheckedCreateWithoutParks_landscapingInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_landscapingInput | ticket_details_tableCreateOrConnectWithoutParks_landscapingInput[]
    createMany?: ticket_details_tableCreateManyParks_landscapingInputEnvelope
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
  }

  export type ticket_details_tableUncheckedCreateNestedManyWithoutParks_landscapingInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_landscapingInput, ticket_details_tableUncheckedCreateWithoutParks_landscapingInput> | ticket_details_tableCreateWithoutParks_landscapingInput[] | ticket_details_tableUncheckedCreateWithoutParks_landscapingInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_landscapingInput | ticket_details_tableCreateOrConnectWithoutParks_landscapingInput[]
    createMany?: ticket_details_tableCreateManyParks_landscapingInputEnvelope
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
  }

  export type parksUpdateOneWithoutParks_landscapingNestedInput = {
    create?: XOR<parksCreateWithoutParks_landscapingInput, parksUncheckedCreateWithoutParks_landscapingInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_landscapingInput
    upsert?: parksUpsertWithoutParks_landscapingInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_landscapingInput, parksUpdateWithoutParks_landscapingInput>, parksUncheckedUpdateWithoutParks_landscapingInput>
  }

  export type park_camerasUpdateOneWithoutParks_landscapingNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_landscapingInput, park_camerasUncheckedCreateWithoutParks_landscapingInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_landscapingInput
    upsert?: park_camerasUpsertWithoutParks_landscapingInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_landscapingInput, park_camerasUpdateWithoutParks_landscapingInput>, park_camerasUncheckedUpdateWithoutParks_landscapingInput>
  }

  export type ticket_details_tableUpdateManyWithoutParks_landscapingNestedInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_landscapingInput, ticket_details_tableUncheckedCreateWithoutParks_landscapingInput> | ticket_details_tableCreateWithoutParks_landscapingInput[] | ticket_details_tableUncheckedCreateWithoutParks_landscapingInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_landscapingInput | ticket_details_tableCreateOrConnectWithoutParks_landscapingInput[]
    upsert?: ticket_details_tableUpsertWithWhereUniqueWithoutParks_landscapingInput | ticket_details_tableUpsertWithWhereUniqueWithoutParks_landscapingInput[]
    createMany?: ticket_details_tableCreateManyParks_landscapingInputEnvelope
    set?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    disconnect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    delete?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    update?: ticket_details_tableUpdateWithWhereUniqueWithoutParks_landscapingInput | ticket_details_tableUpdateWithWhereUniqueWithoutParks_landscapingInput[]
    updateMany?: ticket_details_tableUpdateManyWithWhereWithoutParks_landscapingInput | ticket_details_tableUpdateManyWithWhereWithoutParks_landscapingInput[]
    deleteMany?: ticket_details_tableScalarWhereInput | ticket_details_tableScalarWhereInput[]
  }

  export type ticket_details_tableUncheckedUpdateManyWithoutParks_landscapingNestedInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_landscapingInput, ticket_details_tableUncheckedCreateWithoutParks_landscapingInput> | ticket_details_tableCreateWithoutParks_landscapingInput[] | ticket_details_tableUncheckedCreateWithoutParks_landscapingInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_landscapingInput | ticket_details_tableCreateOrConnectWithoutParks_landscapingInput[]
    upsert?: ticket_details_tableUpsertWithWhereUniqueWithoutParks_landscapingInput | ticket_details_tableUpsertWithWhereUniqueWithoutParks_landscapingInput[]
    createMany?: ticket_details_tableCreateManyParks_landscapingInputEnvelope
    set?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    disconnect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    delete?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    update?: ticket_details_tableUpdateWithWhereUniqueWithoutParks_landscapingInput | ticket_details_tableUpdateWithWhereUniqueWithoutParks_landscapingInput[]
    updateMany?: ticket_details_tableUpdateManyWithWhereWithoutParks_landscapingInput | ticket_details_tableUpdateManyWithWhereWithoutParks_landscapingInput[]
    deleteMany?: ticket_details_tableScalarWhereInput | ticket_details_tableScalarWhereInput[]
  }

  export type parksCreateNestedOneWithoutParks_litter_detectionInput = {
    create?: XOR<parksCreateWithoutParks_litter_detectionInput, parksUncheckedCreateWithoutParks_litter_detectionInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_litter_detectionInput
    connect?: parksWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_litter_detectionInput = {
    create?: XOR<park_camerasCreateWithoutParks_litter_detectionInput, park_camerasUncheckedCreateWithoutParks_litter_detectionInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_litter_detectionInput
    connect?: park_camerasWhereUniqueInput
  }

  export type ticket_details_tableCreateNestedManyWithoutParks_litter_detectionInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput> | ticket_details_tableCreateWithoutParks_litter_detectionInput[] | ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput | ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput[]
    createMany?: ticket_details_tableCreateManyParks_litter_detectionInputEnvelope
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
  }

  export type ticket_details_tableUncheckedCreateNestedManyWithoutParks_litter_detectionInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput> | ticket_details_tableCreateWithoutParks_litter_detectionInput[] | ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput | ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput[]
    createMany?: ticket_details_tableCreateManyParks_litter_detectionInputEnvelope
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
  }

  export type parksUpdateOneWithoutParks_litter_detectionNestedInput = {
    create?: XOR<parksCreateWithoutParks_litter_detectionInput, parksUncheckedCreateWithoutParks_litter_detectionInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_litter_detectionInput
    upsert?: parksUpsertWithoutParks_litter_detectionInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_litter_detectionInput, parksUpdateWithoutParks_litter_detectionInput>, parksUncheckedUpdateWithoutParks_litter_detectionInput>
  }

  export type park_camerasUpdateOneWithoutParks_litter_detectionNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_litter_detectionInput, park_camerasUncheckedCreateWithoutParks_litter_detectionInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_litter_detectionInput
    upsert?: park_camerasUpsertWithoutParks_litter_detectionInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_litter_detectionInput, park_camerasUpdateWithoutParks_litter_detectionInput>, park_camerasUncheckedUpdateWithoutParks_litter_detectionInput>
  }

  export type ticket_details_tableUpdateManyWithoutParks_litter_detectionNestedInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput> | ticket_details_tableCreateWithoutParks_litter_detectionInput[] | ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput | ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput[]
    upsert?: ticket_details_tableUpsertWithWhereUniqueWithoutParks_litter_detectionInput | ticket_details_tableUpsertWithWhereUniqueWithoutParks_litter_detectionInput[]
    createMany?: ticket_details_tableCreateManyParks_litter_detectionInputEnvelope
    set?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    disconnect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    delete?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    update?: ticket_details_tableUpdateWithWhereUniqueWithoutParks_litter_detectionInput | ticket_details_tableUpdateWithWhereUniqueWithoutParks_litter_detectionInput[]
    updateMany?: ticket_details_tableUpdateManyWithWhereWithoutParks_litter_detectionInput | ticket_details_tableUpdateManyWithWhereWithoutParks_litter_detectionInput[]
    deleteMany?: ticket_details_tableScalarWhereInput | ticket_details_tableScalarWhereInput[]
  }

  export type ticket_details_tableUncheckedUpdateManyWithoutParks_litter_detectionNestedInput = {
    create?: XOR<ticket_details_tableCreateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput> | ticket_details_tableCreateWithoutParks_litter_detectionInput[] | ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput[]
    connectOrCreate?: ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput | ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput[]
    upsert?: ticket_details_tableUpsertWithWhereUniqueWithoutParks_litter_detectionInput | ticket_details_tableUpsertWithWhereUniqueWithoutParks_litter_detectionInput[]
    createMany?: ticket_details_tableCreateManyParks_litter_detectionInputEnvelope
    set?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    disconnect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    delete?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    connect?: ticket_details_tableWhereUniqueInput | ticket_details_tableWhereUniqueInput[]
    update?: ticket_details_tableUpdateWithWhereUniqueWithoutParks_litter_detectionInput | ticket_details_tableUpdateWithWhereUniqueWithoutParks_litter_detectionInput[]
    updateMany?: ticket_details_tableUpdateManyWithWhereWithoutParks_litter_detectionInput | ticket_details_tableUpdateManyWithWhereWithoutParks_litter_detectionInput[]
    deleteMany?: ticket_details_tableScalarWhereInput | ticket_details_tableScalarWhereInput[]
  }

  export type parks_litter_detectionCreateNestedOneWithoutTicket_detailsInput = {
    create?: XOR<parks_litter_detectionCreateWithoutTicket_detailsInput, parks_litter_detectionUncheckedCreateWithoutTicket_detailsInput>
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutTicket_detailsInput
    connect?: parks_litter_detectionWhereUniqueInput
  }

  export type parks_landscapingCreateNestedOneWithoutTicket_detailsInput = {
    create?: XOR<parks_landscapingCreateWithoutTicket_detailsInput, parks_landscapingUncheckedCreateWithoutTicket_detailsInput>
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutTicket_detailsInput
    connect?: parks_landscapingWhereUniqueInput
  }

  export type parks_litter_detectionUpdateOneWithoutTicket_detailsNestedInput = {
    create?: XOR<parks_litter_detectionCreateWithoutTicket_detailsInput, parks_litter_detectionUncheckedCreateWithoutTicket_detailsInput>
    connectOrCreate?: parks_litter_detectionCreateOrConnectWithoutTicket_detailsInput
    upsert?: parks_litter_detectionUpsertWithoutTicket_detailsInput
    disconnect?: parks_litter_detectionWhereInput | boolean
    delete?: parks_litter_detectionWhereInput | boolean
    connect?: parks_litter_detectionWhereUniqueInput
    update?: XOR<XOR<parks_litter_detectionUpdateToOneWithWhereWithoutTicket_detailsInput, parks_litter_detectionUpdateWithoutTicket_detailsInput>, parks_litter_detectionUncheckedUpdateWithoutTicket_detailsInput>
  }

  export type parks_landscapingUpdateOneWithoutTicket_detailsNestedInput = {
    create?: XOR<parks_landscapingCreateWithoutTicket_detailsInput, parks_landscapingUncheckedCreateWithoutTicket_detailsInput>
    connectOrCreate?: parks_landscapingCreateOrConnectWithoutTicket_detailsInput
    upsert?: parks_landscapingUpsertWithoutTicket_detailsInput
    disconnect?: parks_landscapingWhereInput | boolean
    delete?: parks_landscapingWhereInput | boolean
    connect?: parks_landscapingWhereUniqueInput
    update?: XOR<XOR<parks_landscapingUpdateToOneWithWhereWithoutTicket_detailsInput, parks_landscapingUpdateWithoutTicket_detailsInput>, parks_landscapingUncheckedUpdateWithoutTicket_detailsInput>
  }

  export type parksCreateNestedOneWithoutParks_sentiment_analysisInput = {
    create?: XOR<parksCreateWithoutParks_sentiment_analysisInput, parksUncheckedCreateWithoutParks_sentiment_analysisInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_sentiment_analysisInput
    connect?: parksWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    create?: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    connect?: park_camerasWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    create?: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    connect?: park_camerasWhereUniqueInput
  }

  export type NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput = {
    set?: $Enums.parks_sentiment_analysis_sentiment_of | null
  }

  export type parksUpdateOneWithoutParks_sentiment_analysisNestedInput = {
    create?: XOR<parksCreateWithoutParks_sentiment_analysisInput, parksUncheckedCreateWithoutParks_sentiment_analysisInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_sentiment_analysisInput
    upsert?: parksUpsertWithoutParks_sentiment_analysisInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_sentiment_analysisInput, parksUpdateWithoutParks_sentiment_analysisInput>, parksUncheckedUpdateWithoutParks_sentiment_analysisInput>
  }

  export type park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    upsert?: park_camerasUpsertWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>, park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    upsert?: park_camerasUpsertWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>, park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type parksCreateNestedOneWithoutParks_smoking_detectionInput = {
    create?: XOR<parksCreateWithoutParks_smoking_detectionInput, parksUncheckedCreateWithoutParks_smoking_detectionInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_smoking_detectionInput
    connect?: parksWhereUniqueInput
  }

  export type park_camerasCreateNestedOneWithoutParks_smoking_detectionInput = {
    create?: XOR<park_camerasCreateWithoutParks_smoking_detectionInput, park_camerasUncheckedCreateWithoutParks_smoking_detectionInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_smoking_detectionInput
    connect?: park_camerasWhereUniqueInput
  }

  export type intranet_posting_historyCreateNestedManyWithoutSmokingDetectionInput = {
    create?: XOR<intranet_posting_historyCreateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput> | intranet_posting_historyCreateWithoutSmokingDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput | intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput[]
    createMany?: intranet_posting_historyCreateManySmokingDetectionInputEnvelope
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
  }

  export type intranet_posting_historyUncheckedCreateNestedManyWithoutSmokingDetectionInput = {
    create?: XOR<intranet_posting_historyCreateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput> | intranet_posting_historyCreateWithoutSmokingDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput | intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput[]
    createMany?: intranet_posting_historyCreateManySmokingDetectionInputEnvelope
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
  }

  export type parksUpdateOneWithoutParks_smoking_detectionNestedInput = {
    create?: XOR<parksCreateWithoutParks_smoking_detectionInput, parksUncheckedCreateWithoutParks_smoking_detectionInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_smoking_detectionInput
    upsert?: parksUpsertWithoutParks_smoking_detectionInput
    disconnect?: parksWhereInput | boolean
    delete?: parksWhereInput | boolean
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_smoking_detectionInput, parksUpdateWithoutParks_smoking_detectionInput>, parksUncheckedUpdateWithoutParks_smoking_detectionInput>
  }

  export type park_camerasUpdateOneWithoutParks_smoking_detectionNestedInput = {
    create?: XOR<park_camerasCreateWithoutParks_smoking_detectionInput, park_camerasUncheckedCreateWithoutParks_smoking_detectionInput>
    connectOrCreate?: park_camerasCreateOrConnectWithoutParks_smoking_detectionInput
    upsert?: park_camerasUpsertWithoutParks_smoking_detectionInput
    disconnect?: park_camerasWhereInput | boolean
    delete?: park_camerasWhereInput | boolean
    connect?: park_camerasWhereUniqueInput
    update?: XOR<XOR<park_camerasUpdateToOneWithWhereWithoutParks_smoking_detectionInput, park_camerasUpdateWithoutParks_smoking_detectionInput>, park_camerasUncheckedUpdateWithoutParks_smoking_detectionInput>
  }

  export type intranet_posting_historyUpdateManyWithoutSmokingDetectionNestedInput = {
    create?: XOR<intranet_posting_historyCreateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput> | intranet_posting_historyCreateWithoutSmokingDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput | intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput[]
    upsert?: intranet_posting_historyUpsertWithWhereUniqueWithoutSmokingDetectionInput | intranet_posting_historyUpsertWithWhereUniqueWithoutSmokingDetectionInput[]
    createMany?: intranet_posting_historyCreateManySmokingDetectionInputEnvelope
    set?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    disconnect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    delete?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    update?: intranet_posting_historyUpdateWithWhereUniqueWithoutSmokingDetectionInput | intranet_posting_historyUpdateWithWhereUniqueWithoutSmokingDetectionInput[]
    updateMany?: intranet_posting_historyUpdateManyWithWhereWithoutSmokingDetectionInput | intranet_posting_historyUpdateManyWithWhereWithoutSmokingDetectionInput[]
    deleteMany?: intranet_posting_historyScalarWhereInput | intranet_posting_historyScalarWhereInput[]
  }

  export type intranet_posting_historyUncheckedUpdateManyWithoutSmokingDetectionNestedInput = {
    create?: XOR<intranet_posting_historyCreateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput> | intranet_posting_historyCreateWithoutSmokingDetectionInput[] | intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput[]
    connectOrCreate?: intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput | intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput[]
    upsert?: intranet_posting_historyUpsertWithWhereUniqueWithoutSmokingDetectionInput | intranet_posting_historyUpsertWithWhereUniqueWithoutSmokingDetectionInput[]
    createMany?: intranet_posting_historyCreateManySmokingDetectionInputEnvelope
    set?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    disconnect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    delete?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    connect?: intranet_posting_historyWhereUniqueInput | intranet_posting_historyWhereUniqueInput[]
    update?: intranet_posting_historyUpdateWithWhereUniqueWithoutSmokingDetectionInput | intranet_posting_historyUpdateWithWhereUniqueWithoutSmokingDetectionInput[]
    updateMany?: intranet_posting_historyUpdateManyWithWhereWithoutSmokingDetectionInput | intranet_posting_historyUpdateManyWithWhereWithoutSmokingDetectionInput[]
    deleteMany?: intranet_posting_historyScalarWhereInput | intranet_posting_historyScalarWhereInput[]
  }

  export type parks_smoking_detectionCreateNestedOneWithoutIntranet_posting_historyInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutIntranet_posting_historyInput, parks_smoking_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutIntranet_posting_historyInput
    connect?: parks_smoking_detectionWhereUniqueInput
  }

  export type parks_intrusion_detectionCreateNestedOneWithoutIntranet_posting_historyInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutIntranet_posting_historyInput, parks_intrusion_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutIntranet_posting_historyInput
    connect?: parks_intrusion_detectionWhereUniqueInput
  }

  export type parks_smoking_detectionUpdateOneWithoutIntranet_posting_historyNestedInput = {
    create?: XOR<parks_smoking_detectionCreateWithoutIntranet_posting_historyInput, parks_smoking_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
    connectOrCreate?: parks_smoking_detectionCreateOrConnectWithoutIntranet_posting_historyInput
    upsert?: parks_smoking_detectionUpsertWithoutIntranet_posting_historyInput
    disconnect?: parks_smoking_detectionWhereInput | boolean
    delete?: parks_smoking_detectionWhereInput | boolean
    connect?: parks_smoking_detectionWhereUniqueInput
    update?: XOR<XOR<parks_smoking_detectionUpdateToOneWithWhereWithoutIntranet_posting_historyInput, parks_smoking_detectionUpdateWithoutIntranet_posting_historyInput>, parks_smoking_detectionUncheckedUpdateWithoutIntranet_posting_historyInput>
  }

  export type parks_intrusion_detectionUpdateOneWithoutIntranet_posting_historyNestedInput = {
    create?: XOR<parks_intrusion_detectionCreateWithoutIntranet_posting_historyInput, parks_intrusion_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
    connectOrCreate?: parks_intrusion_detectionCreateOrConnectWithoutIntranet_posting_historyInput
    upsert?: parks_intrusion_detectionUpsertWithoutIntranet_posting_historyInput
    disconnect?: parks_intrusion_detectionWhereInput | boolean
    delete?: parks_intrusion_detectionWhereInput | boolean
    connect?: parks_intrusion_detectionWhereUniqueInput
    update?: XOR<XOR<parks_intrusion_detectionUpdateToOneWithWhereWithoutIntranet_posting_historyInput, parks_intrusion_detectionUpdateWithoutIntranet_posting_historyInput>, parks_intrusion_detectionUncheckedUpdateWithoutIntranet_posting_historyInput>
  }

  export type live_stream_favouritesCreateNestedManyWithoutUsersInput = {
    create?: XOR<live_stream_favouritesCreateWithoutUsersInput, live_stream_favouritesUncheckedCreateWithoutUsersInput> | live_stream_favouritesCreateWithoutUsersInput[] | live_stream_favouritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutUsersInput | live_stream_favouritesCreateOrConnectWithoutUsersInput[]
    createMany?: live_stream_favouritesCreateManyUsersInputEnvelope
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
  }

  export type parks_attendanceCreateNestedManyWithoutUserInput = {
    create?: XOR<parks_attendanceCreateWithoutUserInput, parks_attendanceUncheckedCreateWithoutUserInput> | parks_attendanceCreateWithoutUserInput[] | parks_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutUserInput | parks_attendanceCreateOrConnectWithoutUserInput[]
    createMany?: parks_attendanceCreateManyUserInputEnvelope
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
  }

  export type offices_attendanceCreateNestedManyWithoutUserInput = {
    create?: XOR<offices_attendanceCreateWithoutUserInput, offices_attendanceUncheckedCreateWithoutUserInput> | offices_attendanceCreateWithoutUserInput[] | offices_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutUserInput | offices_attendanceCreateOrConnectWithoutUserInput[]
    createMany?: offices_attendanceCreateManyUserInputEnvelope
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
  }

  export type offices_footfall_analysisCreateNestedManyWithoutPersonInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutPersonInput, offices_footfall_analysisUncheckedCreateWithoutPersonInput> | offices_footfall_analysisCreateWithoutPersonInput[] | offices_footfall_analysisUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutPersonInput | offices_footfall_analysisCreateOrConnectWithoutPersonInput[]
    createMany?: offices_footfall_analysisCreateManyPersonInputEnvelope
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
  }

  export type users_rolesCreateNestedOneWithoutUsersInput = {
    create?: XOR<users_rolesCreateWithoutUsersInput, users_rolesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: users_rolesCreateOrConnectWithoutUsersInput
    connect?: users_rolesWhereUniqueInput
  }

  export type live_stream_favouritesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<live_stream_favouritesCreateWithoutUsersInput, live_stream_favouritesUncheckedCreateWithoutUsersInput> | live_stream_favouritesCreateWithoutUsersInput[] | live_stream_favouritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutUsersInput | live_stream_favouritesCreateOrConnectWithoutUsersInput[]
    createMany?: live_stream_favouritesCreateManyUsersInputEnvelope
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
  }

  export type parks_attendanceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<parks_attendanceCreateWithoutUserInput, parks_attendanceUncheckedCreateWithoutUserInput> | parks_attendanceCreateWithoutUserInput[] | parks_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutUserInput | parks_attendanceCreateOrConnectWithoutUserInput[]
    createMany?: parks_attendanceCreateManyUserInputEnvelope
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
  }

  export type offices_attendanceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<offices_attendanceCreateWithoutUserInput, offices_attendanceUncheckedCreateWithoutUserInput> | offices_attendanceCreateWithoutUserInput[] | offices_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutUserInput | offices_attendanceCreateOrConnectWithoutUserInput[]
    createMany?: offices_attendanceCreateManyUserInputEnvelope
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
  }

  export type offices_footfall_analysisUncheckedCreateNestedManyWithoutPersonInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutPersonInput, offices_footfall_analysisUncheckedCreateWithoutPersonInput> | offices_footfall_analysisCreateWithoutPersonInput[] | offices_footfall_analysisUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutPersonInput | offices_footfall_analysisCreateOrConnectWithoutPersonInput[]
    createMany?: offices_footfall_analysisCreateManyPersonInputEnvelope
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
  }

  export type live_stream_favouritesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<live_stream_favouritesCreateWithoutUsersInput, live_stream_favouritesUncheckedCreateWithoutUsersInput> | live_stream_favouritesCreateWithoutUsersInput[] | live_stream_favouritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutUsersInput | live_stream_favouritesCreateOrConnectWithoutUsersInput[]
    upsert?: live_stream_favouritesUpsertWithWhereUniqueWithoutUsersInput | live_stream_favouritesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: live_stream_favouritesCreateManyUsersInputEnvelope
    set?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    disconnect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    delete?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    update?: live_stream_favouritesUpdateWithWhereUniqueWithoutUsersInput | live_stream_favouritesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: live_stream_favouritesUpdateManyWithWhereWithoutUsersInput | live_stream_favouritesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
  }

  export type parks_attendanceUpdateManyWithoutUserNestedInput = {
    create?: XOR<parks_attendanceCreateWithoutUserInput, parks_attendanceUncheckedCreateWithoutUserInput> | parks_attendanceCreateWithoutUserInput[] | parks_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutUserInput | parks_attendanceCreateOrConnectWithoutUserInput[]
    upsert?: parks_attendanceUpsertWithWhereUniqueWithoutUserInput | parks_attendanceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: parks_attendanceCreateManyUserInputEnvelope
    set?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    disconnect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    delete?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    update?: parks_attendanceUpdateWithWhereUniqueWithoutUserInput | parks_attendanceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: parks_attendanceUpdateManyWithWhereWithoutUserInput | parks_attendanceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: parks_attendanceScalarWhereInput | parks_attendanceScalarWhereInput[]
  }

  export type offices_attendanceUpdateManyWithoutUserNestedInput = {
    create?: XOR<offices_attendanceCreateWithoutUserInput, offices_attendanceUncheckedCreateWithoutUserInput> | offices_attendanceCreateWithoutUserInput[] | offices_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutUserInput | offices_attendanceCreateOrConnectWithoutUserInput[]
    upsert?: offices_attendanceUpsertWithWhereUniqueWithoutUserInput | offices_attendanceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: offices_attendanceCreateManyUserInputEnvelope
    set?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    disconnect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    delete?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    update?: offices_attendanceUpdateWithWhereUniqueWithoutUserInput | offices_attendanceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: offices_attendanceUpdateManyWithWhereWithoutUserInput | offices_attendanceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: offices_attendanceScalarWhereInput | offices_attendanceScalarWhereInput[]
  }

  export type offices_footfall_analysisUpdateManyWithoutPersonNestedInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutPersonInput, offices_footfall_analysisUncheckedCreateWithoutPersonInput> | offices_footfall_analysisCreateWithoutPersonInput[] | offices_footfall_analysisUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutPersonInput | offices_footfall_analysisCreateOrConnectWithoutPersonInput[]
    upsert?: offices_footfall_analysisUpsertWithWhereUniqueWithoutPersonInput | offices_footfall_analysisUpsertWithWhereUniqueWithoutPersonInput[]
    createMany?: offices_footfall_analysisCreateManyPersonInputEnvelope
    set?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    disconnect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    delete?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    update?: offices_footfall_analysisUpdateWithWhereUniqueWithoutPersonInput | offices_footfall_analysisUpdateWithWhereUniqueWithoutPersonInput[]
    updateMany?: offices_footfall_analysisUpdateManyWithWhereWithoutPersonInput | offices_footfall_analysisUpdateManyWithWhereWithoutPersonInput[]
    deleteMany?: offices_footfall_analysisScalarWhereInput | offices_footfall_analysisScalarWhereInput[]
  }

  export type users_rolesUpdateOneWithoutUsersNestedInput = {
    create?: XOR<users_rolesCreateWithoutUsersInput, users_rolesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: users_rolesCreateOrConnectWithoutUsersInput
    upsert?: users_rolesUpsertWithoutUsersInput
    disconnect?: users_rolesWhereInput | boolean
    delete?: users_rolesWhereInput | boolean
    connect?: users_rolesWhereUniqueInput
    update?: XOR<XOR<users_rolesUpdateToOneWithWhereWithoutUsersInput, users_rolesUpdateWithoutUsersInput>, users_rolesUncheckedUpdateWithoutUsersInput>
  }

  export type live_stream_favouritesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<live_stream_favouritesCreateWithoutUsersInput, live_stream_favouritesUncheckedCreateWithoutUsersInput> | live_stream_favouritesCreateWithoutUsersInput[] | live_stream_favouritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: live_stream_favouritesCreateOrConnectWithoutUsersInput | live_stream_favouritesCreateOrConnectWithoutUsersInput[]
    upsert?: live_stream_favouritesUpsertWithWhereUniqueWithoutUsersInput | live_stream_favouritesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: live_stream_favouritesCreateManyUsersInputEnvelope
    set?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    disconnect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    delete?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    connect?: live_stream_favouritesWhereUniqueInput | live_stream_favouritesWhereUniqueInput[]
    update?: live_stream_favouritesUpdateWithWhereUniqueWithoutUsersInput | live_stream_favouritesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: live_stream_favouritesUpdateManyWithWhereWithoutUsersInput | live_stream_favouritesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
  }

  export type parks_attendanceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<parks_attendanceCreateWithoutUserInput, parks_attendanceUncheckedCreateWithoutUserInput> | parks_attendanceCreateWithoutUserInput[] | parks_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: parks_attendanceCreateOrConnectWithoutUserInput | parks_attendanceCreateOrConnectWithoutUserInput[]
    upsert?: parks_attendanceUpsertWithWhereUniqueWithoutUserInput | parks_attendanceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: parks_attendanceCreateManyUserInputEnvelope
    set?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    disconnect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    delete?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    connect?: parks_attendanceWhereUniqueInput | parks_attendanceWhereUniqueInput[]
    update?: parks_attendanceUpdateWithWhereUniqueWithoutUserInput | parks_attendanceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: parks_attendanceUpdateManyWithWhereWithoutUserInput | parks_attendanceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: parks_attendanceScalarWhereInput | parks_attendanceScalarWhereInput[]
  }

  export type offices_attendanceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<offices_attendanceCreateWithoutUserInput, offices_attendanceUncheckedCreateWithoutUserInput> | offices_attendanceCreateWithoutUserInput[] | offices_attendanceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: offices_attendanceCreateOrConnectWithoutUserInput | offices_attendanceCreateOrConnectWithoutUserInput[]
    upsert?: offices_attendanceUpsertWithWhereUniqueWithoutUserInput | offices_attendanceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: offices_attendanceCreateManyUserInputEnvelope
    set?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    disconnect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    delete?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    connect?: offices_attendanceWhereUniqueInput | offices_attendanceWhereUniqueInput[]
    update?: offices_attendanceUpdateWithWhereUniqueWithoutUserInput | offices_attendanceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: offices_attendanceUpdateManyWithWhereWithoutUserInput | offices_attendanceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: offices_attendanceScalarWhereInput | offices_attendanceScalarWhereInput[]
  }

  export type offices_footfall_analysisUncheckedUpdateManyWithoutPersonNestedInput = {
    create?: XOR<offices_footfall_analysisCreateWithoutPersonInput, offices_footfall_analysisUncheckedCreateWithoutPersonInput> | offices_footfall_analysisCreateWithoutPersonInput[] | offices_footfall_analysisUncheckedCreateWithoutPersonInput[]
    connectOrCreate?: offices_footfall_analysisCreateOrConnectWithoutPersonInput | offices_footfall_analysisCreateOrConnectWithoutPersonInput[]
    upsert?: offices_footfall_analysisUpsertWithWhereUniqueWithoutPersonInput | offices_footfall_analysisUpsertWithWhereUniqueWithoutPersonInput[]
    createMany?: offices_footfall_analysisCreateManyPersonInputEnvelope
    set?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    disconnect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    delete?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    connect?: offices_footfall_analysisWhereUniqueInput | offices_footfall_analysisWhereUniqueInput[]
    update?: offices_footfall_analysisUpdateWithWhereUniqueWithoutPersonInput | offices_footfall_analysisUpdateWithWhereUniqueWithoutPersonInput[]
    updateMany?: offices_footfall_analysisUpdateManyWithWhereWithoutPersonInput | offices_footfall_analysisUpdateManyWithWhereWithoutPersonInput[]
    deleteMany?: offices_footfall_analysisScalarWhereInput | offices_footfall_analysisScalarWhereInput[]
  }

  export type users_rolesCreateNestedOneWithoutUsers_permissionsInput = {
    create?: XOR<users_rolesCreateWithoutUsers_permissionsInput, users_rolesUncheckedCreateWithoutUsers_permissionsInput>
    connectOrCreate?: users_rolesCreateOrConnectWithoutUsers_permissionsInput
    connect?: users_rolesWhereUniqueInput
  }

  export type users_rolesUpdateOneWithoutUsers_permissionsNestedInput = {
    create?: XOR<users_rolesCreateWithoutUsers_permissionsInput, users_rolesUncheckedCreateWithoutUsers_permissionsInput>
    connectOrCreate?: users_rolesCreateOrConnectWithoutUsers_permissionsInput
    upsert?: users_rolesUpsertWithoutUsers_permissionsInput
    disconnect?: users_rolesWhereInput | boolean
    delete?: users_rolesWhereInput | boolean
    connect?: users_rolesWhereUniqueInput
    update?: XOR<XOR<users_rolesUpdateToOneWithWhereWithoutUsers_permissionsInput, users_rolesUpdateWithoutUsers_permissionsInput>, users_rolesUncheckedUpdateWithoutUsers_permissionsInput>
  }

  export type usersCreateNestedManyWithoutUsers_rolesInput = {
    create?: XOR<usersCreateWithoutUsers_rolesInput, usersUncheckedCreateWithoutUsers_rolesInput> | usersCreateWithoutUsers_rolesInput[] | usersUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsers_rolesInput | usersCreateOrConnectWithoutUsers_rolesInput[]
    createMany?: usersCreateManyUsers_rolesInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type users_permissionsCreateNestedManyWithoutUsers_rolesInput = {
    create?: XOR<users_permissionsCreateWithoutUsers_rolesInput, users_permissionsUncheckedCreateWithoutUsers_rolesInput> | users_permissionsCreateWithoutUsers_rolesInput[] | users_permissionsUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: users_permissionsCreateOrConnectWithoutUsers_rolesInput | users_permissionsCreateOrConnectWithoutUsers_rolesInput[]
    createMany?: users_permissionsCreateManyUsers_rolesInputEnvelope
    connect?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutUsers_rolesInput = {
    create?: XOR<usersCreateWithoutUsers_rolesInput, usersUncheckedCreateWithoutUsers_rolesInput> | usersCreateWithoutUsers_rolesInput[] | usersUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsers_rolesInput | usersCreateOrConnectWithoutUsers_rolesInput[]
    createMany?: usersCreateManyUsers_rolesInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type users_permissionsUncheckedCreateNestedManyWithoutUsers_rolesInput = {
    create?: XOR<users_permissionsCreateWithoutUsers_rolesInput, users_permissionsUncheckedCreateWithoutUsers_rolesInput> | users_permissionsCreateWithoutUsers_rolesInput[] | users_permissionsUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: users_permissionsCreateOrConnectWithoutUsers_rolesInput | users_permissionsCreateOrConnectWithoutUsers_rolesInput[]
    createMany?: users_permissionsCreateManyUsers_rolesInputEnvelope
    connect?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
  }

  export type usersUpdateManyWithoutUsers_rolesNestedInput = {
    create?: XOR<usersCreateWithoutUsers_rolesInput, usersUncheckedCreateWithoutUsers_rolesInput> | usersCreateWithoutUsers_rolesInput[] | usersUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsers_rolesInput | usersCreateOrConnectWithoutUsers_rolesInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutUsers_rolesInput | usersUpsertWithWhereUniqueWithoutUsers_rolesInput[]
    createMany?: usersCreateManyUsers_rolesInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutUsers_rolesInput | usersUpdateWithWhereUniqueWithoutUsers_rolesInput[]
    updateMany?: usersUpdateManyWithWhereWithoutUsers_rolesInput | usersUpdateManyWithWhereWithoutUsers_rolesInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type users_permissionsUpdateManyWithoutUsers_rolesNestedInput = {
    create?: XOR<users_permissionsCreateWithoutUsers_rolesInput, users_permissionsUncheckedCreateWithoutUsers_rolesInput> | users_permissionsCreateWithoutUsers_rolesInput[] | users_permissionsUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: users_permissionsCreateOrConnectWithoutUsers_rolesInput | users_permissionsCreateOrConnectWithoutUsers_rolesInput[]
    upsert?: users_permissionsUpsertWithWhereUniqueWithoutUsers_rolesInput | users_permissionsUpsertWithWhereUniqueWithoutUsers_rolesInput[]
    createMany?: users_permissionsCreateManyUsers_rolesInputEnvelope
    set?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    disconnect?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    delete?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    connect?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    update?: users_permissionsUpdateWithWhereUniqueWithoutUsers_rolesInput | users_permissionsUpdateWithWhereUniqueWithoutUsers_rolesInput[]
    updateMany?: users_permissionsUpdateManyWithWhereWithoutUsers_rolesInput | users_permissionsUpdateManyWithWhereWithoutUsers_rolesInput[]
    deleteMany?: users_permissionsScalarWhereInput | users_permissionsScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutUsers_rolesNestedInput = {
    create?: XOR<usersCreateWithoutUsers_rolesInput, usersUncheckedCreateWithoutUsers_rolesInput> | usersCreateWithoutUsers_rolesInput[] | usersUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsers_rolesInput | usersCreateOrConnectWithoutUsers_rolesInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutUsers_rolesInput | usersUpsertWithWhereUniqueWithoutUsers_rolesInput[]
    createMany?: usersCreateManyUsers_rolesInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutUsers_rolesInput | usersUpdateWithWhereUniqueWithoutUsers_rolesInput[]
    updateMany?: usersUpdateManyWithWhereWithoutUsers_rolesInput | usersUpdateManyWithWhereWithoutUsers_rolesInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type users_permissionsUncheckedUpdateManyWithoutUsers_rolesNestedInput = {
    create?: XOR<users_permissionsCreateWithoutUsers_rolesInput, users_permissionsUncheckedCreateWithoutUsers_rolesInput> | users_permissionsCreateWithoutUsers_rolesInput[] | users_permissionsUncheckedCreateWithoutUsers_rolesInput[]
    connectOrCreate?: users_permissionsCreateOrConnectWithoutUsers_rolesInput | users_permissionsCreateOrConnectWithoutUsers_rolesInput[]
    upsert?: users_permissionsUpsertWithWhereUniqueWithoutUsers_rolesInput | users_permissionsUpsertWithWhereUniqueWithoutUsers_rolesInput[]
    createMany?: users_permissionsCreateManyUsers_rolesInputEnvelope
    set?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    disconnect?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    delete?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    connect?: users_permissionsWhereUniqueInput | users_permissionsWhereUniqueInput[]
    update?: users_permissionsUpdateWithWhereUniqueWithoutUsers_rolesInput | users_permissionsUpdateWithWhereUniqueWithoutUsers_rolesInput[]
    updateMany?: users_permissionsUpdateManyWithWhereWithoutUsers_rolesInput | users_permissionsUpdateManyWithWhereWithoutUsers_rolesInput[]
    deleteMany?: users_permissionsScalarWhereInput | users_permissionsScalarWhereInput[]
  }

  export type parksCreateNestedOneWithoutParks_footfall_analysisInput = {
    create?: XOR<parksCreateWithoutParks_footfall_analysisInput, parksUncheckedCreateWithoutParks_footfall_analysisInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_footfall_analysisInput
    connect?: parksWhereUniqueInput
  }

  export type parksUpdateOneRequiredWithoutParks_footfall_analysisNestedInput = {
    create?: XOR<parksCreateWithoutParks_footfall_analysisInput, parksUncheckedCreateWithoutParks_footfall_analysisInput>
    connectOrCreate?: parksCreateOrConnectWithoutParks_footfall_analysisInput
    upsert?: parksUpsertWithoutParks_footfall_analysisInput
    connect?: parksWhereUniqueInput
    update?: XOR<XOR<parksUpdateToOneWithWhereWithoutParks_footfall_analysisInput, parksUpdateWithoutParks_footfall_analysisInput>, parksUncheckedUpdateWithoutParks_footfall_analysisInput>
  }

  export type officesCreateNestedOneWithoutOffices_footfall_analysisInput = {
    create?: XOR<officesCreateWithoutOffices_footfall_analysisInput, officesUncheckedCreateWithoutOffices_footfall_analysisInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_footfall_analysisInput
    connect?: officesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutOffices_footfall_analysisInput = {
    create?: XOR<usersCreateWithoutOffices_footfall_analysisInput, usersUncheckedCreateWithoutOffices_footfall_analysisInput>
    connectOrCreate?: usersCreateOrConnectWithoutOffices_footfall_analysisInput
    connect?: usersWhereUniqueInput
  }

  export type officesUpdateOneRequiredWithoutOffices_footfall_analysisNestedInput = {
    create?: XOR<officesCreateWithoutOffices_footfall_analysisInput, officesUncheckedCreateWithoutOffices_footfall_analysisInput>
    connectOrCreate?: officesCreateOrConnectWithoutOffices_footfall_analysisInput
    upsert?: officesUpsertWithoutOffices_footfall_analysisInput
    connect?: officesWhereUniqueInput
    update?: XOR<XOR<officesUpdateToOneWithWhereWithoutOffices_footfall_analysisInput, officesUpdateWithoutOffices_footfall_analysisInput>, officesUncheckedUpdateWithoutOffices_footfall_analysisInput>
  }

  export type usersUpdateOneRequiredWithoutOffices_footfall_analysisNestedInput = {
    create?: XOR<usersCreateWithoutOffices_footfall_analysisInput, usersUncheckedCreateWithoutOffices_footfall_analysisInput>
    connectOrCreate?: usersCreateOrConnectWithoutOffices_footfall_analysisInput
    upsert?: usersUpsertWithoutOffices_footfall_analysisInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOffices_footfall_analysisInput, usersUpdateWithoutOffices_footfall_analysisInput>, usersUncheckedUpdateWithoutOffices_footfall_analysisInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.offices_sentiment_analysis_sentiment_of | Enumoffices_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel> | $Enums.offices_sentiment_analysis_sentiment_of | null
  }

  export type NestedEnumoffices_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.offices_sentiment_analysis_sentiment_of | Enumoffices_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.offices_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel> | $Enums.offices_sentiment_analysis_sentiment_of | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
    _max?: NestedEnumoffices_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.parks_sentiment_analysis_sentiment_of | Enumparks_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel> | $Enums.parks_sentiment_analysis_sentiment_of | null
  }

  export type NestedEnumparks_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.parks_sentiment_analysis_sentiment_of | Enumparks_sentiment_analysis_sentiment_ofFieldRefInput<$PrismaModel> | null
    in?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    notIn?: $Enums.parks_sentiment_analysis_sentiment_of[] | null
    not?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableWithAggregatesFilter<$PrismaModel> | $Enums.parks_sentiment_analysis_sentiment_of | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
    _max?: NestedEnumparks_sentiment_analysis_sentiment_ofNullableFilter<$PrismaModel>
  }

  export type usersCreateWithoutLive_stream_favouritesInput = {
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks_attendance?: parks_attendanceCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutPersonInput
    users_roles?: users_rolesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutLive_stream_favouritesInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    role_Id?: number | null
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutPersonInput
  }

  export type usersCreateOrConnectWithoutLive_stream_favouritesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutLive_stream_favouritesInput, usersUncheckedCreateWithoutLive_stream_favouritesInput>
  }

  export type park_camerasCreateWithoutLive_stream_favouritesInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutLive_stream_favouritesInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutLive_stream_favouritesInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutLive_stream_favouritesInput, park_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
  }

  export type offices_camerasCreateWithoutLive_stream_favouritesInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    offices?: officesCreateNestedOneWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasUncheckedCreateWithoutLive_stream_favouritesInput = {
    Id?: number
    office_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasCreateOrConnectWithoutLive_stream_favouritesInput = {
    where: offices_camerasWhereUniqueInput
    create: XOR<offices_camerasCreateWithoutLive_stream_favouritesInput, offices_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
  }

  export type usersUpsertWithoutLive_stream_favouritesInput = {
    update: XOR<usersUpdateWithoutLive_stream_favouritesInput, usersUncheckedUpdateWithoutLive_stream_favouritesInput>
    create: XOR<usersCreateWithoutLive_stream_favouritesInput, usersUncheckedCreateWithoutLive_stream_favouritesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutLive_stream_favouritesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutLive_stream_favouritesInput, usersUncheckedUpdateWithoutLive_stream_favouritesInput>
  }

  export type usersUpdateWithoutLive_stream_favouritesInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks_attendance?: parks_attendanceUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutPersonNestedInput
    users_roles?: users_rolesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutLive_stream_favouritesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type park_camerasUpsertWithoutLive_stream_favouritesInput = {
    update: XOR<park_camerasUpdateWithoutLive_stream_favouritesInput, park_camerasUncheckedUpdateWithoutLive_stream_favouritesInput>
    create: XOR<park_camerasCreateWithoutLive_stream_favouritesInput, park_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutLive_stream_favouritesInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutLive_stream_favouritesInput, park_camerasUncheckedUpdateWithoutLive_stream_favouritesInput>
  }

  export type park_camerasUpdateWithoutLive_stream_favouritesInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutLive_stream_favouritesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type offices_camerasUpsertWithoutLive_stream_favouritesInput = {
    update: XOR<offices_camerasUpdateWithoutLive_stream_favouritesInput, offices_camerasUncheckedUpdateWithoutLive_stream_favouritesInput>
    create: XOR<offices_camerasCreateWithoutLive_stream_favouritesInput, offices_camerasUncheckedCreateWithoutLive_stream_favouritesInput>
    where?: offices_camerasWhereInput
  }

  export type offices_camerasUpdateToOneWithWhereWithoutLive_stream_favouritesInput = {
    where?: offices_camerasWhereInput
    data: XOR<offices_camerasUpdateWithoutLive_stream_favouritesInput, offices_camerasUncheckedUpdateWithoutLive_stream_favouritesInput>
  }

  export type offices_camerasUpdateWithoutLive_stream_favouritesInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    offices?: officesUpdateOneWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUncheckedUpdateWithoutLive_stream_favouritesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type officesCreateWithoutOffice_streamsInput = {
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    offices_attendance?: offices_attendanceCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutOfficeInput
  }

  export type officesUncheckedCreateWithoutOffice_streamsInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasUncheckedCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutOfficeInput
  }

  export type officesCreateOrConnectWithoutOffice_streamsInput = {
    where: officesWhereUniqueInput
    create: XOR<officesCreateWithoutOffice_streamsInput, officesUncheckedCreateWithoutOffice_streamsInput>
  }

  export type officesUpsertWithoutOffice_streamsInput = {
    update: XOR<officesUpdateWithoutOffice_streamsInput, officesUncheckedUpdateWithoutOffice_streamsInput>
    create: XOR<officesCreateWithoutOffice_streamsInput, officesUncheckedCreateWithoutOffice_streamsInput>
    where?: officesWhereInput
  }

  export type officesUpdateToOneWithWhereWithoutOffice_streamsInput = {
    where?: officesWhereInput
    data: XOR<officesUpdateWithoutOffice_streamsInput, officesUncheckedUpdateWithoutOffice_streamsInput>
  }

  export type officesUpdateWithoutOffice_streamsInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    offices_attendance?: offices_attendanceUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutOfficeNestedInput
  }

  export type officesUncheckedUpdateWithoutOffice_streamsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUncheckedUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutOfficeNestedInput
  }

  export type office_streamsCreateWithoutOfficesInput = {
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type office_streamsUncheckedCreateWithoutOfficesInput = {
    Id?: number
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type office_streamsCreateOrConnectWithoutOfficesInput = {
    where: office_streamsWhereUniqueInput
    create: XOR<office_streamsCreateWithoutOfficesInput, office_streamsUncheckedCreateWithoutOfficesInput>
  }

  export type office_streamsCreateManyOfficesInputEnvelope = {
    data: office_streamsCreateManyOfficesInput | office_streamsCreateManyOfficesInput[]
    skipDuplicates?: boolean
  }

  export type offices_attendanceCreateWithoutOfficeInput = {
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    user?: usersCreateNestedOneWithoutOffices_attendanceInput
  }

  export type offices_attendanceUncheckedCreateWithoutOfficeInput = {
    Id?: number
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_attendanceCreateOrConnectWithoutOfficeInput = {
    where: offices_attendanceWhereUniqueInput
    create: XOR<offices_attendanceCreateWithoutOfficeInput, offices_attendanceUncheckedCreateWithoutOfficeInput>
  }

  export type offices_attendanceCreateManyOfficeInputEnvelope = {
    data: offices_attendanceCreateManyOfficeInput | offices_attendanceCreateManyOfficeInput[]
    skipDuplicates?: boolean
  }

  export type offices_camerasCreateWithoutOfficesInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasUncheckedCreateWithoutOfficesInput = {
    Id?: number
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasCreateOrConnectWithoutOfficesInput = {
    where: offices_camerasWhereUniqueInput
    create: XOR<offices_camerasCreateWithoutOfficesInput, offices_camerasUncheckedCreateWithoutOfficesInput>
  }

  export type offices_camerasCreateManyOfficesInputEnvelope = {
    data: offices_camerasCreateManyOfficesInput | offices_camerasCreateManyOfficesInput[]
    skipDuplicates?: boolean
  }

  export type offices_sentiment_analysisCreateWithoutOfficesInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_sentiment_analysisUncheckedCreateWithoutOfficesInput = {
    Id?: number
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisCreateOrConnectWithoutOfficesInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    create: XOR<offices_sentiment_analysisCreateWithoutOfficesInput, offices_sentiment_analysisUncheckedCreateWithoutOfficesInput>
  }

  export type offices_sentiment_analysisCreateManyOfficesInputEnvelope = {
    data: offices_sentiment_analysisCreateManyOfficesInput | offices_sentiment_analysisCreateManyOfficesInput[]
    skipDuplicates?: boolean
  }

  export type offices_footfall_analysisCreateWithoutOfficeInput = {
    detection_Id: string
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    person: usersCreateNestedOneWithoutOffices_footfall_analysisInput
  }

  export type offices_footfall_analysisUncheckedCreateWithoutOfficeInput = {
    id?: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type offices_footfall_analysisCreateOrConnectWithoutOfficeInput = {
    where: offices_footfall_analysisWhereUniqueInput
    create: XOR<offices_footfall_analysisCreateWithoutOfficeInput, offices_footfall_analysisUncheckedCreateWithoutOfficeInput>
  }

  export type offices_footfall_analysisCreateManyOfficeInputEnvelope = {
    data: offices_footfall_analysisCreateManyOfficeInput | offices_footfall_analysisCreateManyOfficeInput[]
    skipDuplicates?: boolean
  }

  export type office_streamsUpsertWithWhereUniqueWithoutOfficesInput = {
    where: office_streamsWhereUniqueInput
    update: XOR<office_streamsUpdateWithoutOfficesInput, office_streamsUncheckedUpdateWithoutOfficesInput>
    create: XOR<office_streamsCreateWithoutOfficesInput, office_streamsUncheckedCreateWithoutOfficesInput>
  }

  export type office_streamsUpdateWithWhereUniqueWithoutOfficesInput = {
    where: office_streamsWhereUniqueInput
    data: XOR<office_streamsUpdateWithoutOfficesInput, office_streamsUncheckedUpdateWithoutOfficesInput>
  }

  export type office_streamsUpdateManyWithWhereWithoutOfficesInput = {
    where: office_streamsScalarWhereInput
    data: XOR<office_streamsUpdateManyMutationInput, office_streamsUncheckedUpdateManyWithoutOfficesInput>
  }

  export type office_streamsScalarWhereInput = {
    AND?: office_streamsScalarWhereInput | office_streamsScalarWhereInput[]
    OR?: office_streamsScalarWhereInput[]
    NOT?: office_streamsScalarWhereInput | office_streamsScalarWhereInput[]
    Id?: IntFilter<"office_streams"> | number
    office_Id?: IntNullableFilter<"office_streams"> | number | null
    stream_url?: StringNullableFilter<"office_streams"> | string | null
    stream_api_key?: StringNullableFilter<"office_streams"> | string | null
    stream_path?: StringNullableFilter<"office_streams"> | string | null
    password?: StringNullableFilter<"office_streams"> | string | null
    createdAt?: DateTimeNullableFilter<"office_streams"> | Date | string | null
    updatedAt?: DateTimeFilter<"office_streams"> | Date | string
  }

  export type offices_attendanceUpsertWithWhereUniqueWithoutOfficeInput = {
    where: offices_attendanceWhereUniqueInput
    update: XOR<offices_attendanceUpdateWithoutOfficeInput, offices_attendanceUncheckedUpdateWithoutOfficeInput>
    create: XOR<offices_attendanceCreateWithoutOfficeInput, offices_attendanceUncheckedCreateWithoutOfficeInput>
  }

  export type offices_attendanceUpdateWithWhereUniqueWithoutOfficeInput = {
    where: offices_attendanceWhereUniqueInput
    data: XOR<offices_attendanceUpdateWithoutOfficeInput, offices_attendanceUncheckedUpdateWithoutOfficeInput>
  }

  export type offices_attendanceUpdateManyWithWhereWithoutOfficeInput = {
    where: offices_attendanceScalarWhereInput
    data: XOR<offices_attendanceUpdateManyMutationInput, offices_attendanceUncheckedUpdateManyWithoutOfficeInput>
  }

  export type offices_attendanceScalarWhereInput = {
    AND?: offices_attendanceScalarWhereInput | offices_attendanceScalarWhereInput[]
    OR?: offices_attendanceScalarWhereInput[]
    NOT?: offices_attendanceScalarWhereInput | offices_attendanceScalarWhereInput[]
    Id?: IntFilter<"offices_attendance"> | number
    office_Id?: IntNullableFilter<"offices_attendance"> | number | null
    person_Id?: IntNullableFilter<"offices_attendance"> | number | null
    entry_time?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    exit_time?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"offices_attendance"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_attendance"> | Date | string
  }

  export type offices_camerasUpsertWithWhereUniqueWithoutOfficesInput = {
    where: offices_camerasWhereUniqueInput
    update: XOR<offices_camerasUpdateWithoutOfficesInput, offices_camerasUncheckedUpdateWithoutOfficesInput>
    create: XOR<offices_camerasCreateWithoutOfficesInput, offices_camerasUncheckedCreateWithoutOfficesInput>
  }

  export type offices_camerasUpdateWithWhereUniqueWithoutOfficesInput = {
    where: offices_camerasWhereUniqueInput
    data: XOR<offices_camerasUpdateWithoutOfficesInput, offices_camerasUncheckedUpdateWithoutOfficesInput>
  }

  export type offices_camerasUpdateManyWithWhereWithoutOfficesInput = {
    where: offices_camerasScalarWhereInput
    data: XOR<offices_camerasUpdateManyMutationInput, offices_camerasUncheckedUpdateManyWithoutOfficesInput>
  }

  export type offices_camerasScalarWhereInput = {
    AND?: offices_camerasScalarWhereInput | offices_camerasScalarWhereInput[]
    OR?: offices_camerasScalarWhereInput[]
    NOT?: offices_camerasScalarWhereInput | offices_camerasScalarWhereInput[]
    Id?: IntFilter<"offices_cameras"> | number
    office_Id?: IntNullableFilter<"offices_cameras"> | number | null
    camera_Id?: StringNullableFilter<"offices_cameras"> | string | null
    camera_english_name?: StringNullableFilter<"offices_cameras"> | string | null
    camera_arabic_name?: StringNullableFilter<"offices_cameras"> | string | null
    latitude?: DecimalNullableFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"offices_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableFilter<"offices_cameras"> | string | null
    last_active_date?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    status?: StringNullableFilter<"offices_cameras"> | string | null
    createdAt?: DateTimeNullableFilter<"offices_cameras"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_cameras"> | Date | string
    location?: StringNullableFilter<"offices_cameras"> | string | null
    attendance?: BoolFilter<"offices_cameras"> | boolean
    footfall?: BoolFilter<"offices_cameras"> | boolean
    sentiment?: BoolFilter<"offices_cameras"> | boolean
  }

  export type offices_sentiment_analysisUpsertWithWhereUniqueWithoutOfficesInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    update: XOR<offices_sentiment_analysisUpdateWithoutOfficesInput, offices_sentiment_analysisUncheckedUpdateWithoutOfficesInput>
    create: XOR<offices_sentiment_analysisCreateWithoutOfficesInput, offices_sentiment_analysisUncheckedCreateWithoutOfficesInput>
  }

  export type offices_sentiment_analysisUpdateWithWhereUniqueWithoutOfficesInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    data: XOR<offices_sentiment_analysisUpdateWithoutOfficesInput, offices_sentiment_analysisUncheckedUpdateWithoutOfficesInput>
  }

  export type offices_sentiment_analysisUpdateManyWithWhereWithoutOfficesInput = {
    where: offices_sentiment_analysisScalarWhereInput
    data: XOR<offices_sentiment_analysisUpdateManyMutationInput, offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesInput>
  }

  export type offices_sentiment_analysisScalarWhereInput = {
    AND?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
    OR?: offices_sentiment_analysisScalarWhereInput[]
    NOT?: offices_sentiment_analysisScalarWhereInput | offices_sentiment_analysisScalarWhereInput[]
    Id?: IntFilter<"offices_sentiment_analysis"> | number
    office_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    person_Id?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    detection_Id?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    person_name?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    person_image?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    gender?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    check_in_image?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    sentiment_of?: Enumoffices_sentiment_analysis_sentiment_ofNullableFilter<"offices_sentiment_analysis"> | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableFilter<"offices_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableFilter<"offices_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableFilter<"offices_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeFilter<"offices_sentiment_analysis"> | Date | string
  }

  export type offices_footfall_analysisUpsertWithWhereUniqueWithoutOfficeInput = {
    where: offices_footfall_analysisWhereUniqueInput
    update: XOR<offices_footfall_analysisUpdateWithoutOfficeInput, offices_footfall_analysisUncheckedUpdateWithoutOfficeInput>
    create: XOR<offices_footfall_analysisCreateWithoutOfficeInput, offices_footfall_analysisUncheckedCreateWithoutOfficeInput>
  }

  export type offices_footfall_analysisUpdateWithWhereUniqueWithoutOfficeInput = {
    where: offices_footfall_analysisWhereUniqueInput
    data: XOR<offices_footfall_analysisUpdateWithoutOfficeInput, offices_footfall_analysisUncheckedUpdateWithoutOfficeInput>
  }

  export type offices_footfall_analysisUpdateManyWithWhereWithoutOfficeInput = {
    where: offices_footfall_analysisScalarWhereInput
    data: XOR<offices_footfall_analysisUpdateManyMutationInput, offices_footfall_analysisUncheckedUpdateManyWithoutOfficeInput>
  }

  export type offices_footfall_analysisScalarWhereInput = {
    AND?: offices_footfall_analysisScalarWhereInput | offices_footfall_analysisScalarWhereInput[]
    OR?: offices_footfall_analysisScalarWhereInput[]
    NOT?: offices_footfall_analysisScalarWhereInput | offices_footfall_analysisScalarWhereInput[]
    id?: IntFilter<"offices_footfall_analysis"> | number
    office_Id?: IntFilter<"offices_footfall_analysis"> | number
    detection_Id?: StringFilter<"offices_footfall_analysis"> | string
    person_Id?: IntFilter<"offices_footfall_analysis"> | number
    gender?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    is_child?: BoolFilter<"offices_footfall_analysis"> | boolean
    time?: DateTimeFilter<"offices_footfall_analysis"> | Date | string
    detected_camera_Id?: StringFilter<"offices_footfall_analysis"> | string
    detected_camera_name?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc1?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc2?: StringNullableFilter<"offices_footfall_analysis"> | string | null
    abc3?: StringNullableFilter<"offices_footfall_analysis"> | string | null
  }

  export type officesCreateWithoutOffices_attendanceInput = {
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsCreateNestedManyWithoutOfficesInput
    offices_cameras?: offices_camerasCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutOfficeInput
  }

  export type officesUncheckedCreateWithoutOffices_attendanceInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsUncheckedCreateNestedManyWithoutOfficesInput
    offices_cameras?: offices_camerasUncheckedCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutOfficeInput
  }

  export type officesCreateOrConnectWithoutOffices_attendanceInput = {
    where: officesWhereUniqueInput
    create: XOR<officesCreateWithoutOffices_attendanceInput, officesUncheckedCreateWithoutOffices_attendanceInput>
  }

  export type usersCreateWithoutOffices_attendanceInput = {
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutPersonInput
    users_roles?: users_rolesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOffices_attendanceInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    role_Id?: number | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutPersonInput
  }

  export type usersCreateOrConnectWithoutOffices_attendanceInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOffices_attendanceInput, usersUncheckedCreateWithoutOffices_attendanceInput>
  }

  export type officesUpsertWithoutOffices_attendanceInput = {
    update: XOR<officesUpdateWithoutOffices_attendanceInput, officesUncheckedUpdateWithoutOffices_attendanceInput>
    create: XOR<officesCreateWithoutOffices_attendanceInput, officesUncheckedCreateWithoutOffices_attendanceInput>
    where?: officesWhereInput
  }

  export type officesUpdateToOneWithWhereWithoutOffices_attendanceInput = {
    where?: officesWhereInput
    data: XOR<officesUpdateWithoutOffices_attendanceInput, officesUncheckedUpdateWithoutOffices_attendanceInput>
  }

  export type officesUpdateWithoutOffices_attendanceInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUpdateManyWithoutOfficesNestedInput
    offices_cameras?: offices_camerasUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutOfficeNestedInput
  }

  export type officesUncheckedUpdateWithoutOffices_attendanceInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUncheckedUpdateManyWithoutOfficesNestedInput
    offices_cameras?: offices_camerasUncheckedUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutOfficeNestedInput
  }

  export type usersUpsertWithoutOffices_attendanceInput = {
    update: XOR<usersUpdateWithoutOffices_attendanceInput, usersUncheckedUpdateWithoutOffices_attendanceInput>
    create: XOR<usersCreateWithoutOffices_attendanceInput, usersUncheckedCreateWithoutOffices_attendanceInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOffices_attendanceInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOffices_attendanceInput, usersUncheckedUpdateWithoutOffices_attendanceInput>
  }

  export type usersUpdateWithoutOffices_attendanceInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutPersonNestedInput
    users_roles?: users_rolesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOffices_attendanceInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type live_stream_favouritesCreateWithoutOffices_camerasInput = {
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersCreateNestedOneWithoutLive_stream_favouritesInput
    park_cameras?: park_camerasCreateNestedOneWithoutLive_stream_favouritesInput
  }

  export type live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput = {
    Id?: number
    emp_Id?: number | null
    park_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesCreateOrConnectWithoutOffices_camerasInput = {
    where: live_stream_favouritesWhereUniqueInput
    create: XOR<live_stream_favouritesCreateWithoutOffices_camerasInput, live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput>
  }

  export type live_stream_favouritesCreateManyOffices_camerasInputEnvelope = {
    data: live_stream_favouritesCreateManyOffices_camerasInput | live_stream_favouritesCreateManyOffices_camerasInput[]
    skipDuplicates?: boolean
  }

  export type officesCreateWithoutOffices_camerasInput = {
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutOfficeInput
    offices_sentiment_analysis?: offices_sentiment_analysisCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutOfficeInput
  }

  export type officesUncheckedCreateWithoutOffices_camerasInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsUncheckedCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutOfficeInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutOfficeInput
  }

  export type officesCreateOrConnectWithoutOffices_camerasInput = {
    where: officesWhereUniqueInput
    create: XOR<officesCreateWithoutOffices_camerasInput, officesUncheckedCreateWithoutOffices_camerasInput>
  }

  export type offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    offices?: officesCreateNestedOneWithoutOffices_sentiment_analysisInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    create: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInputEnvelope = {
    data: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput[]
    skipDuplicates?: boolean
  }

  export type offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    offices?: officesCreateNestedOneWithoutOffices_sentiment_analysisInput
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasCreateNestedOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
  }

  export type offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisCreateOrConnectWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    create: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInputEnvelope = {
    data: offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput | offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput[]
    skipDuplicates?: boolean
  }

  export type live_stream_favouritesUpsertWithWhereUniqueWithoutOffices_camerasInput = {
    where: live_stream_favouritesWhereUniqueInput
    update: XOR<live_stream_favouritesUpdateWithoutOffices_camerasInput, live_stream_favouritesUncheckedUpdateWithoutOffices_camerasInput>
    create: XOR<live_stream_favouritesCreateWithoutOffices_camerasInput, live_stream_favouritesUncheckedCreateWithoutOffices_camerasInput>
  }

  export type live_stream_favouritesUpdateWithWhereUniqueWithoutOffices_camerasInput = {
    where: live_stream_favouritesWhereUniqueInput
    data: XOR<live_stream_favouritesUpdateWithoutOffices_camerasInput, live_stream_favouritesUncheckedUpdateWithoutOffices_camerasInput>
  }

  export type live_stream_favouritesUpdateManyWithWhereWithoutOffices_camerasInput = {
    where: live_stream_favouritesScalarWhereInput
    data: XOR<live_stream_favouritesUpdateManyMutationInput, live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasInput>
  }

  export type live_stream_favouritesScalarWhereInput = {
    AND?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
    OR?: live_stream_favouritesScalarWhereInput[]
    NOT?: live_stream_favouritesScalarWhereInput | live_stream_favouritesScalarWhereInput[]
    Id?: IntFilter<"live_stream_favourites"> | number
    emp_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    park_camera_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    office_camera_Id?: IntNullableFilter<"live_stream_favourites"> | number | null
    createdAt?: DateTimeNullableFilter<"live_stream_favourites"> | Date | string | null
    updatedAt?: DateTimeFilter<"live_stream_favourites"> | Date | string
  }

  export type officesUpsertWithoutOffices_camerasInput = {
    update: XOR<officesUpdateWithoutOffices_camerasInput, officesUncheckedUpdateWithoutOffices_camerasInput>
    create: XOR<officesCreateWithoutOffices_camerasInput, officesUncheckedCreateWithoutOffices_camerasInput>
    where?: officesWhereInput
  }

  export type officesUpdateToOneWithWhereWithoutOffices_camerasInput = {
    where?: officesWhereInput
    data: XOR<officesUpdateWithoutOffices_camerasInput, officesUncheckedUpdateWithoutOffices_camerasInput>
  }

  export type officesUpdateWithoutOffices_camerasInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutOfficeNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutOfficeNestedInput
  }

  export type officesUncheckedUpdateWithoutOffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUncheckedUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutOfficeNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutOfficeNestedInput
  }

  export type offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    update: XOR<offices_sentiment_analysisUpdateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedUpdateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
    create: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    data: XOR<offices_sentiment_analysisUpdateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedUpdateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisScalarWhereInput
    data: XOR<offices_sentiment_analysisUpdateManyMutationInput, offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisUpsertWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    update: XOR<offices_sentiment_analysisUpdateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedUpdateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
    create: XOR<offices_sentiment_analysisCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedCreateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisUpdateWithWhereUniqueWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisWhereUniqueInput
    data: XOR<offices_sentiment_analysisUpdateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_sentiment_analysisUncheckedUpdateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type offices_sentiment_analysisUpdateManyWithWhereWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    where: offices_sentiment_analysisScalarWhereInput
    data: XOR<offices_sentiment_analysisUpdateManyMutationInput, offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type officesCreateWithoutOffices_sentiment_analysisInput = {
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutOfficeInput
  }

  export type officesUncheckedCreateWithoutOffices_sentiment_analysisInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsUncheckedCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasUncheckedCreateNestedManyWithoutOfficesInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutOfficeInput
  }

  export type officesCreateOrConnectWithoutOffices_sentiment_analysisInput = {
    where: officesWhereUniqueInput
    create: XOR<officesCreateWithoutOffices_sentiment_analysisInput, officesUncheckedCreateWithoutOffices_sentiment_analysisInput>
  }

  export type offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutOffices_camerasInput
    offices?: officesCreateNestedOneWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    Id?: number
    office_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput
  }

  export type offices_camerasCreateOrConnectWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    where: offices_camerasWhereUniqueInput
    create: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutOffices_camerasInput
    offices?: officesCreateNestedOneWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
  }

  export type offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    Id?: number
    office_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutOffices_camerasInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput
  }

  export type offices_camerasCreateOrConnectWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    where: offices_camerasWhereUniqueInput
    create: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type officesUpsertWithoutOffices_sentiment_analysisInput = {
    update: XOR<officesUpdateWithoutOffices_sentiment_analysisInput, officesUncheckedUpdateWithoutOffices_sentiment_analysisInput>
    create: XOR<officesCreateWithoutOffices_sentiment_analysisInput, officesUncheckedCreateWithoutOffices_sentiment_analysisInput>
    where?: officesWhereInput
  }

  export type officesUpdateToOneWithWhereWithoutOffices_sentiment_analysisInput = {
    where?: officesWhereInput
    data: XOR<officesUpdateWithoutOffices_sentiment_analysisInput, officesUncheckedUpdateWithoutOffices_sentiment_analysisInput>
  }

  export type officesUpdateWithoutOffices_sentiment_analysisInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutOfficeNestedInput
  }

  export type officesUncheckedUpdateWithoutOffices_sentiment_analysisInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUncheckedUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUncheckedUpdateManyWithoutOfficesNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutOfficeNestedInput
  }

  export type offices_camerasUpsertWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    update: XOR<offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
    create: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
    where?: offices_camerasWhereInput
  }

  export type offices_camerasUpdateToOneWithWhereWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    where?: offices_camerasWhereInput
    data: XOR<offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput, offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput>
  }

  export type offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutOffices_camerasNestedInput
    offices?: officesUpdateOneWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUpsertWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    update: XOR<offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
    create: XOR<offices_camerasCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUncheckedCreateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
    where?: offices_camerasWhereInput
  }

  export type offices_camerasUpdateToOneWithWhereWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    where?: offices_camerasWhereInput
    data: XOR<offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput, offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput>
  }

  export type offices_camerasUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutOffices_camerasNestedInput
    offices?: officesUpdateOneWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUncheckedUpdateWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
  }

  export type live_stream_favouritesCreateWithoutPark_camerasInput = {
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersCreateNestedOneWithoutLive_stream_favouritesInput
    offices_cameras?: offices_camerasCreateNestedOneWithoutLive_stream_favouritesInput
  }

  export type live_stream_favouritesUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    emp_Id?: number | null
    office_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesCreateOrConnectWithoutPark_camerasInput = {
    where: live_stream_favouritesWhereUniqueInput
    create: XOR<live_stream_favouritesCreateWithoutPark_camerasInput, live_stream_favouritesUncheckedCreateWithoutPark_camerasInput>
  }

  export type live_stream_favouritesCreateManyPark_camerasInputEnvelope = {
    data: live_stream_favouritesCreateManyPark_camerasInput | live_stream_favouritesCreateManyPark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parksCreateWithoutPark_camerasInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutPark_camerasInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutPark_camerasInput, parksUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_behaviour_alertsCreateWithoutPark_camerasInput = {
    person_Id?: string | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_behaviour_alertsInput
  }

  export type parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_behaviour_alertsCreateOrConnectWithoutPark_camerasInput = {
    where: parks_behaviour_alertsWhereUniqueInput
    create: XOR<parks_behaviour_alertsCreateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_behaviour_alertsCreateManyPark_camerasInputEnvelope = {
    data: parks_behaviour_alertsCreateManyPark_camerasInput | parks_behaviour_alertsCreateManyPark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parks_intrusion_detectionCreateWithoutPark_camerasInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_intrusion_detectionInput
    intranet_posting_history?: intranet_posting_historyCreateNestedManyWithoutIntrusionDetectionInput
  }

  export type parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedCreateNestedManyWithoutIntrusionDetectionInput
  }

  export type parks_intrusion_detectionCreateOrConnectWithoutPark_camerasInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    create: XOR<parks_intrusion_detectionCreateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_intrusion_detectionCreateManyPark_camerasInputEnvelope = {
    data: parks_intrusion_detectionCreateManyPark_camerasInput | parks_intrusion_detectionCreateManyPark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_sentiment_analysisInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
  }

  export type parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    create: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInputEnvelope = {
    data: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_sentiment_analysisInput
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
  }

  export type parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisCreateOrConnectWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    create: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInputEnvelope = {
    data: parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput | parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parks_smoking_detectionCreateWithoutPark_camerasInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_smoking_detectionInput
    intranet_posting_history?: intranet_posting_historyCreateNestedManyWithoutSmokingDetectionInput
  }

  export type parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedCreateNestedManyWithoutSmokingDetectionInput
  }

  export type parks_smoking_detectionCreateOrConnectWithoutPark_camerasInput = {
    where: parks_smoking_detectionWhereUniqueInput
    create: XOR<parks_smoking_detectionCreateWithoutPark_camerasInput, parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_smoking_detectionCreateManyPark_camerasInputEnvelope = {
    data: parks_smoking_detectionCreateManyPark_camerasInput | parks_smoking_detectionCreateManyPark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parks_landscapingCreateWithoutPark_camerasInput = {
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_landscapingInput
    ticket_details?: ticket_details_tableCreateNestedManyWithoutParks_landscapingInput
  }

  export type parks_landscapingUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    ticket_details?: ticket_details_tableUncheckedCreateNestedManyWithoutParks_landscapingInput
  }

  export type parks_landscapingCreateOrConnectWithoutPark_camerasInput = {
    where: parks_landscapingWhereUniqueInput
    create: XOR<parks_landscapingCreateWithoutPark_camerasInput, parks_landscapingUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_landscapingCreateManyPark_camerasInputEnvelope = {
    data: parks_landscapingCreateManyPark_camerasInput | parks_landscapingCreateManyPark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type parks_litter_detectionCreateWithoutPark_camerasInput = {
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_litter_detectionInput
    ticket_details?: ticket_details_tableCreateNestedManyWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionUncheckedCreateWithoutPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    ticket_details?: ticket_details_tableUncheckedCreateNestedManyWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionCreateOrConnectWithoutPark_camerasInput = {
    where: parks_litter_detectionWhereUniqueInput
    create: XOR<parks_litter_detectionCreateWithoutPark_camerasInput, parks_litter_detectionUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_litter_detectionCreateManyPark_camerasInputEnvelope = {
    data: parks_litter_detectionCreateManyPark_camerasInput | parks_litter_detectionCreateManyPark_camerasInput[]
    skipDuplicates?: boolean
  }

  export type live_stream_favouritesUpsertWithWhereUniqueWithoutPark_camerasInput = {
    where: live_stream_favouritesWhereUniqueInput
    update: XOR<live_stream_favouritesUpdateWithoutPark_camerasInput, live_stream_favouritesUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<live_stream_favouritesCreateWithoutPark_camerasInput, live_stream_favouritesUncheckedCreateWithoutPark_camerasInput>
  }

  export type live_stream_favouritesUpdateWithWhereUniqueWithoutPark_camerasInput = {
    where: live_stream_favouritesWhereUniqueInput
    data: XOR<live_stream_favouritesUpdateWithoutPark_camerasInput, live_stream_favouritesUncheckedUpdateWithoutPark_camerasInput>
  }

  export type live_stream_favouritesUpdateManyWithWhereWithoutPark_camerasInput = {
    where: live_stream_favouritesScalarWhereInput
    data: XOR<live_stream_favouritesUpdateManyMutationInput, live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasInput>
  }

  export type parksUpsertWithoutPark_camerasInput = {
    update: XOR<parksUpdateWithoutPark_camerasInput, parksUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<parksCreateWithoutPark_camerasInput, parksUncheckedCreateWithoutPark_camerasInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutPark_camerasInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutPark_camerasInput, parksUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parksUpdateWithoutPark_camerasInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type parks_behaviour_alertsUpsertWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_behaviour_alertsWhereUniqueInput
    update: XOR<parks_behaviour_alertsUpdateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<parks_behaviour_alertsCreateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_behaviour_alertsUpdateWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_behaviour_alertsWhereUniqueInput
    data: XOR<parks_behaviour_alertsUpdateWithoutPark_camerasInput, parks_behaviour_alertsUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parks_behaviour_alertsUpdateManyWithWhereWithoutPark_camerasInput = {
    where: parks_behaviour_alertsScalarWhereInput
    data: XOR<parks_behaviour_alertsUpdateManyMutationInput, parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasInput>
  }

  export type parks_behaviour_alertsScalarWhereInput = {
    AND?: parks_behaviour_alertsScalarWhereInput | parks_behaviour_alertsScalarWhereInput[]
    OR?: parks_behaviour_alertsScalarWhereInput[]
    NOT?: parks_behaviour_alertsScalarWhereInput | parks_behaviour_alertsScalarWhereInput[]
    Id?: IntFilter<"parks_behaviour_alerts"> | number
    park_Id?: IntNullableFilter<"parks_behaviour_alerts"> | number | null
    person_Id?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    camera_Id?: IntNullableFilter<"parks_behaviour_alerts"> | number | null
    detection_Id?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detection_code?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    description?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    detected_behaviour?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    is_employee?: BoolNullableFilter<"parks_behaviour_alerts"> | boolean | null
    snap_shot?: StringNullableFilter<"parks_behaviour_alerts"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_behaviour_alerts"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_behaviour_alerts"> | Date | string
  }

  export type parks_intrusion_detectionUpsertWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    update: XOR<parks_intrusion_detectionUpdateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<parks_intrusion_detectionCreateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_intrusion_detectionUpdateWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    data: XOR<parks_intrusion_detectionUpdateWithoutPark_camerasInput, parks_intrusion_detectionUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parks_intrusion_detectionUpdateManyWithWhereWithoutPark_camerasInput = {
    where: parks_intrusion_detectionScalarWhereInput
    data: XOR<parks_intrusion_detectionUpdateManyMutationInput, parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasInput>
  }

  export type parks_intrusion_detectionScalarWhereInput = {
    AND?: parks_intrusion_detectionScalarWhereInput | parks_intrusion_detectionScalarWhereInput[]
    OR?: parks_intrusion_detectionScalarWhereInput[]
    NOT?: parks_intrusion_detectionScalarWhereInput | parks_intrusion_detectionScalarWhereInput[]
    Id?: IntFilter<"parks_intrusion_detection"> | number
    park_Id?: IntNullableFilter<"parks_intrusion_detection"> | number | null
    location?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_intrusion_detection"> | number | null
    occurrence_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    detection_Id?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    is_employee?: BoolNullableFilter<"parks_intrusion_detection"> | boolean | null
    current_status?: StringNullableFilter<"parks_intrusion_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_intrusion_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_intrusion_detection"> | Date | string
  }

  export type parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    update: XOR<parks_sentiment_analysisUpdateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedUpdateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
    create: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    data: XOR<parks_sentiment_analysisUpdateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedUpdateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisScalarWhereInput
    data: XOR<parks_sentiment_analysisUpdateManyMutationInput, parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisScalarWhereInput = {
    AND?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
    OR?: parks_sentiment_analysisScalarWhereInput[]
    NOT?: parks_sentiment_analysisScalarWhereInput | parks_sentiment_analysisScalarWhereInput[]
    Id?: IntFilter<"parks_sentiment_analysis"> | number
    park_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    person_Id?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    detection_Id?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    person_name?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    person_image?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    gender?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    check_in_image?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    sentiment_of?: Enumparks_sentiment_analysis_sentiment_ofNullableFilter<"parks_sentiment_analysis"> | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_time?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_in_sentiment?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    entry_camera_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    check_out_date?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_time?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    check_out_capture?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    check_out_sentiment?: StringNullableFilter<"parks_sentiment_analysis"> | string | null
    exit_camera_Id?: IntNullableFilter<"parks_sentiment_analysis"> | number | null
    createdAt?: DateTimeNullableFilter<"parks_sentiment_analysis"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_sentiment_analysis"> | Date | string
  }

  export type parks_sentiment_analysisUpsertWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    update: XOR<parks_sentiment_analysisUpdateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedUpdateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
    create: XOR<parks_sentiment_analysisCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedCreateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisUpdateWithWhereUniqueWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    data: XOR<parks_sentiment_analysisUpdateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, parks_sentiment_analysisUncheckedUpdateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type parks_sentiment_analysisUpdateManyWithWhereWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    where: parks_sentiment_analysisScalarWhereInput
    data: XOR<parks_sentiment_analysisUpdateManyMutationInput, parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type parks_smoking_detectionUpsertWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_smoking_detectionWhereUniqueInput
    update: XOR<parks_smoking_detectionUpdateWithoutPark_camerasInput, parks_smoking_detectionUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<parks_smoking_detectionCreateWithoutPark_camerasInput, parks_smoking_detectionUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_smoking_detectionUpdateWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_smoking_detectionWhereUniqueInput
    data: XOR<parks_smoking_detectionUpdateWithoutPark_camerasInput, parks_smoking_detectionUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parks_smoking_detectionUpdateManyWithWhereWithoutPark_camerasInput = {
    where: parks_smoking_detectionScalarWhereInput
    data: XOR<parks_smoking_detectionUpdateManyMutationInput, parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasInput>
  }

  export type parks_smoking_detectionScalarWhereInput = {
    AND?: parks_smoking_detectionScalarWhereInput | parks_smoking_detectionScalarWhereInput[]
    OR?: parks_smoking_detectionScalarWhereInput[]
    NOT?: parks_smoking_detectionScalarWhereInput | parks_smoking_detectionScalarWhereInput[]
    Id?: IntFilter<"parks_smoking_detection"> | number
    park_Id?: IntNullableFilter<"parks_smoking_detection"> | number | null
    location?: StringNullableFilter<"parks_smoking_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_smoking_detection"> | number | null
    occurrence_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_smoking_detection"> | string | null
    posted_to_intranet_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    posted_to_intranet_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    detection_Id?: StringNullableFilter<"parks_smoking_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_smoking_detection"> | string | null
    is_employee?: BoolNullableFilter<"parks_smoking_detection"> | boolean | null
    current_status?: StringNullableFilter<"parks_smoking_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_smoking_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_smoking_detection"> | Date | string
  }

  export type parks_landscapingUpsertWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_landscapingWhereUniqueInput
    update: XOR<parks_landscapingUpdateWithoutPark_camerasInput, parks_landscapingUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<parks_landscapingCreateWithoutPark_camerasInput, parks_landscapingUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_landscapingUpdateWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_landscapingWhereUniqueInput
    data: XOR<parks_landscapingUpdateWithoutPark_camerasInput, parks_landscapingUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parks_landscapingUpdateManyWithWhereWithoutPark_camerasInput = {
    where: parks_landscapingScalarWhereInput
    data: XOR<parks_landscapingUpdateManyMutationInput, parks_landscapingUncheckedUpdateManyWithoutPark_camerasInput>
  }

  export type parks_landscapingScalarWhereInput = {
    AND?: parks_landscapingScalarWhereInput | parks_landscapingScalarWhereInput[]
    OR?: parks_landscapingScalarWhereInput[]
    NOT?: parks_landscapingScalarWhereInput | parks_landscapingScalarWhereInput[]
    Id?: IntFilter<"parks_landscaping"> | number
    park_Id?: IntNullableFilter<"parks_landscaping"> | number | null
    case_Id?: StringNullableFilter<"parks_landscaping"> | string | null
    location?: StringNullableFilter<"parks_landscaping"> | string | null
    snap_shot?: StringNullableFilter<"parks_landscaping"> | string | null
    type?: StringNullableFilter<"parks_landscaping"> | string | null
    status?: StringNullableFilter<"parks_landscaping"> | string | null
    detection_Id?: StringNullableFilter<"parks_landscaping"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    description?: StringNullableFilter<"parks_landscaping"> | string | null
    current_status?: StringNullableFilter<"parks_landscaping"> | string | null
    camera_Id?: IntNullableFilter<"parks_landscaping"> | number | null
    after_image?: StringNullableFilter<"parks_landscaping"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_landscaping"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_landscaping"> | Date | string
  }

  export type parks_litter_detectionUpsertWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_litter_detectionWhereUniqueInput
    update: XOR<parks_litter_detectionUpdateWithoutPark_camerasInput, parks_litter_detectionUncheckedUpdateWithoutPark_camerasInput>
    create: XOR<parks_litter_detectionCreateWithoutPark_camerasInput, parks_litter_detectionUncheckedCreateWithoutPark_camerasInput>
  }

  export type parks_litter_detectionUpdateWithWhereUniqueWithoutPark_camerasInput = {
    where: parks_litter_detectionWhereUniqueInput
    data: XOR<parks_litter_detectionUpdateWithoutPark_camerasInput, parks_litter_detectionUncheckedUpdateWithoutPark_camerasInput>
  }

  export type parks_litter_detectionUpdateManyWithWhereWithoutPark_camerasInput = {
    where: parks_litter_detectionScalarWhereInput
    data: XOR<parks_litter_detectionUpdateManyMutationInput, parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasInput>
  }

  export type parks_litter_detectionScalarWhereInput = {
    AND?: parks_litter_detectionScalarWhereInput | parks_litter_detectionScalarWhereInput[]
    OR?: parks_litter_detectionScalarWhereInput[]
    NOT?: parks_litter_detectionScalarWhereInput | parks_litter_detectionScalarWhereInput[]
    Id?: IntFilter<"parks_litter_detection"> | number
    park_Id?: IntNullableFilter<"parks_litter_detection"> | number | null
    case_Id?: StringNullableFilter<"parks_litter_detection"> | string | null
    location?: StringNullableFilter<"parks_litter_detection"> | string | null
    occurrence_date?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    occurrence_time?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    snap_shot?: StringNullableFilter<"parks_litter_detection"> | string | null
    status?: StringNullableFilter<"parks_litter_detection"> | string | null
    detection_Id?: StringNullableFilter<"parks_litter_detection"> | string | null
    detection_date?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    detection_time?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    description?: StringNullableFilter<"parks_litter_detection"> | string | null
    current_status?: StringNullableFilter<"parks_litter_detection"> | string | null
    camera_Id?: IntNullableFilter<"parks_litter_detection"> | number | null
    after_image?: StringNullableFilter<"parks_litter_detection"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_litter_detection"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_litter_detection"> | Date | string
  }

  export type parksCreateWithoutPark_streamsInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutPark_streamsInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutPark_streamsInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutPark_streamsInput, parksUncheckedCreateWithoutPark_streamsInput>
  }

  export type parksUpsertWithoutPark_streamsInput = {
    update: XOR<parksUpdateWithoutPark_streamsInput, parksUncheckedUpdateWithoutPark_streamsInput>
    create: XOR<parksCreateWithoutPark_streamsInput, parksUncheckedCreateWithoutPark_streamsInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutPark_streamsInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutPark_streamsInput, parksUncheckedUpdateWithoutPark_streamsInput>
  }

  export type parksUpdateWithoutPark_streamsInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutPark_streamsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type parksCreateWithoutPark_zonesInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutPark_zonesInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutPark_zonesInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutPark_zonesInput, parksUncheckedCreateWithoutPark_zonesInput>
  }

  export type parks_irrigation_job_historyCreateWithoutPark_zonesInput = {
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_irrigation_job_historyInput
  }

  export type parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput = {
    Id?: number
    park_Id?: number | null
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_irrigation_job_historyCreateOrConnectWithoutPark_zonesInput = {
    where: parks_irrigation_job_historyWhereUniqueInput
    create: XOR<parks_irrigation_job_historyCreateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput>
  }

  export type parks_irrigation_job_historyCreateManyPark_zonesInputEnvelope = {
    data: parks_irrigation_job_historyCreateManyPark_zonesInput | parks_irrigation_job_historyCreateManyPark_zonesInput[]
    skipDuplicates?: boolean
  }

  export type parksUpsertWithoutPark_zonesInput = {
    update: XOR<parksUpdateWithoutPark_zonesInput, parksUncheckedUpdateWithoutPark_zonesInput>
    create: XOR<parksCreateWithoutPark_zonesInput, parksUncheckedCreateWithoutPark_zonesInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutPark_zonesInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutPark_zonesInput, parksUncheckedUpdateWithoutPark_zonesInput>
  }

  export type parksUpdateWithoutPark_zonesInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutPark_zonesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type parks_irrigation_job_historyUpsertWithWhereUniqueWithoutPark_zonesInput = {
    where: parks_irrigation_job_historyWhereUniqueInput
    update: XOR<parks_irrigation_job_historyUpdateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedUpdateWithoutPark_zonesInput>
    create: XOR<parks_irrigation_job_historyCreateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedCreateWithoutPark_zonesInput>
  }

  export type parks_irrigation_job_historyUpdateWithWhereUniqueWithoutPark_zonesInput = {
    where: parks_irrigation_job_historyWhereUniqueInput
    data: XOR<parks_irrigation_job_historyUpdateWithoutPark_zonesInput, parks_irrigation_job_historyUncheckedUpdateWithoutPark_zonesInput>
  }

  export type parks_irrigation_job_historyUpdateManyWithWhereWithoutPark_zonesInput = {
    where: parks_irrigation_job_historyScalarWhereInput
    data: XOR<parks_irrigation_job_historyUpdateManyMutationInput, parks_irrigation_job_historyUncheckedUpdateManyWithoutPark_zonesInput>
  }

  export type parks_irrigation_job_historyScalarWhereInput = {
    AND?: parks_irrigation_job_historyScalarWhereInput | parks_irrigation_job_historyScalarWhereInput[]
    OR?: parks_irrigation_job_historyScalarWhereInput[]
    NOT?: parks_irrigation_job_historyScalarWhereInput | parks_irrigation_job_historyScalarWhereInput[]
    Id?: IntFilter<"parks_irrigation_job_history"> | number
    park_Id?: IntNullableFilter<"parks_irrigation_job_history"> | number | null
    zone_Id?: IntNullableFilter<"parks_irrigation_job_history"> | number | null
    job_Id?: StringNullableFilter<"parks_irrigation_job_history"> | string | null
    job_started_at?: DateTimeFilter<"parks_irrigation_job_history"> | Date | string
    job_completed_at?: DateTimeNullableFilter<"parks_irrigation_job_history"> | Date | string | null
    job_status?: StringNullableFilter<"parks_irrigation_job_history"> | string | null
    createdAt?: DateTimeNullableFilter<"parks_irrigation_job_history"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_irrigation_job_history"> | Date | string
  }

  export type park_camerasCreateWithoutParksInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParksInput = {
    Id?: number
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParksInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParksInput, park_camerasUncheckedCreateWithoutParksInput>
  }

  export type park_camerasCreateManyParksInputEnvelope = {
    data: park_camerasCreateManyParksInput | park_camerasCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type park_streamsCreateWithoutParksInput = {
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type park_streamsUncheckedCreateWithoutParksInput = {
    Id?: number
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type park_streamsCreateOrConnectWithoutParksInput = {
    where: park_streamsWhereUniqueInput
    create: XOR<park_streamsCreateWithoutParksInput, park_streamsUncheckedCreateWithoutParksInput>
  }

  export type park_streamsCreateManyParksInputEnvelope = {
    data: park_streamsCreateManyParksInput | park_streamsCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type park_zonesCreateWithoutParksInput = {
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutPark_zonesInput
  }

  export type park_zonesUncheckedCreateWithoutParksInput = {
    Id?: number
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutPark_zonesInput
  }

  export type park_zonesCreateOrConnectWithoutParksInput = {
    where: park_zonesWhereUniqueInput
    create: XOR<park_zonesCreateWithoutParksInput, park_zonesUncheckedCreateWithoutParksInput>
  }

  export type park_zonesCreateManyParksInputEnvelope = {
    data: park_zonesCreateManyParksInput | park_zonesCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_attendanceCreateWithoutParkInput = {
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    user?: usersCreateNestedOneWithoutParks_attendanceInput
  }

  export type parks_attendanceUncheckedCreateWithoutParkInput = {
    Id?: number
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_attendanceCreateOrConnectWithoutParkInput = {
    where: parks_attendanceWhereUniqueInput
    create: XOR<parks_attendanceCreateWithoutParkInput, parks_attendanceUncheckedCreateWithoutParkInput>
  }

  export type parks_attendanceCreateManyParkInputEnvelope = {
    data: parks_attendanceCreateManyParkInput | parks_attendanceCreateManyParkInput[]
    skipDuplicates?: boolean
  }

  export type parks_behaviour_alertsCreateWithoutParksInput = {
    person_Id?: string | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras?: park_camerasCreateNestedOneWithoutParks_behaviour_alertsInput
  }

  export type parks_behaviour_alertsUncheckedCreateWithoutParksInput = {
    Id?: number
    person_Id?: string | null
    camera_Id?: number | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_behaviour_alertsCreateOrConnectWithoutParksInput = {
    where: parks_behaviour_alertsWhereUniqueInput
    create: XOR<parks_behaviour_alertsCreateWithoutParksInput, parks_behaviour_alertsUncheckedCreateWithoutParksInput>
  }

  export type parks_behaviour_alertsCreateManyParksInputEnvelope = {
    data: parks_behaviour_alertsCreateManyParksInput | parks_behaviour_alertsCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_intrusion_detectionCreateWithoutParksInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras?: park_camerasCreateNestedOneWithoutParks_intrusion_detectionInput
    intranet_posting_history?: intranet_posting_historyCreateNestedManyWithoutIntrusionDetectionInput
  }

  export type parks_intrusion_detectionUncheckedCreateWithoutParksInput = {
    Id?: number
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedCreateNestedManyWithoutIntrusionDetectionInput
  }

  export type parks_intrusion_detectionCreateOrConnectWithoutParksInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    create: XOR<parks_intrusion_detectionCreateWithoutParksInput, parks_intrusion_detectionUncheckedCreateWithoutParksInput>
  }

  export type parks_intrusion_detectionCreateManyParksInputEnvelope = {
    data: parks_intrusion_detectionCreateManyParksInput | parks_intrusion_detectionCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_irrigation_job_historyCreateWithoutParksInput = {
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_zones?: park_zonesCreateNestedOneWithoutParks_irrigation_job_historyInput
  }

  export type parks_irrigation_job_historyUncheckedCreateWithoutParksInput = {
    Id?: number
    zone_Id?: number | null
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_irrigation_job_historyCreateOrConnectWithoutParksInput = {
    where: parks_irrigation_job_historyWhereUniqueInput
    create: XOR<parks_irrigation_job_historyCreateWithoutParksInput, parks_irrigation_job_historyUncheckedCreateWithoutParksInput>
  }

  export type parks_irrigation_job_historyCreateManyParksInputEnvelope = {
    data: parks_irrigation_job_historyCreateManyParksInput | parks_irrigation_job_historyCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_landscapingCreateWithoutParksInput = {
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras?: park_camerasCreateNestedOneWithoutParks_landscapingInput
    ticket_details?: ticket_details_tableCreateNestedManyWithoutParks_landscapingInput
  }

  export type parks_landscapingUncheckedCreateWithoutParksInput = {
    Id?: number
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    ticket_details?: ticket_details_tableUncheckedCreateNestedManyWithoutParks_landscapingInput
  }

  export type parks_landscapingCreateOrConnectWithoutParksInput = {
    where: parks_landscapingWhereUniqueInput
    create: XOR<parks_landscapingCreateWithoutParksInput, parks_landscapingUncheckedCreateWithoutParksInput>
  }

  export type parks_landscapingCreateManyParksInputEnvelope = {
    data: parks_landscapingCreateManyParksInput | parks_landscapingCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_litter_detectionCreateWithoutParksInput = {
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras?: park_camerasCreateNestedOneWithoutParks_litter_detectionInput
    ticket_details?: ticket_details_tableCreateNestedManyWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionUncheckedCreateWithoutParksInput = {
    Id?: number
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    ticket_details?: ticket_details_tableUncheckedCreateNestedManyWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionCreateOrConnectWithoutParksInput = {
    where: parks_litter_detectionWhereUniqueInput
    create: XOR<parks_litter_detectionCreateWithoutParksInput, parks_litter_detectionUncheckedCreateWithoutParksInput>
  }

  export type parks_litter_detectionCreateManyParksInputEnvelope = {
    data: parks_litter_detectionCreateManyParksInput | parks_litter_detectionCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_sentiment_analysisCreateWithoutParksInput = {
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasCreateNestedOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
  }

  export type parks_sentiment_analysisUncheckedCreateWithoutParksInput = {
    Id?: number
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisCreateOrConnectWithoutParksInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    create: XOR<parks_sentiment_analysisCreateWithoutParksInput, parks_sentiment_analysisUncheckedCreateWithoutParksInput>
  }

  export type parks_sentiment_analysisCreateManyParksInputEnvelope = {
    data: parks_sentiment_analysisCreateManyParksInput | parks_sentiment_analysisCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_smoking_detectionCreateWithoutParksInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras?: park_camerasCreateNestedOneWithoutParks_smoking_detectionInput
    intranet_posting_history?: intranet_posting_historyCreateNestedManyWithoutSmokingDetectionInput
  }

  export type parks_smoking_detectionUncheckedCreateWithoutParksInput = {
    Id?: number
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedCreateNestedManyWithoutSmokingDetectionInput
  }

  export type parks_smoking_detectionCreateOrConnectWithoutParksInput = {
    where: parks_smoking_detectionWhereUniqueInput
    create: XOR<parks_smoking_detectionCreateWithoutParksInput, parks_smoking_detectionUncheckedCreateWithoutParksInput>
  }

  export type parks_smoking_detectionCreateManyParksInputEnvelope = {
    data: parks_smoking_detectionCreateManyParksInput | parks_smoking_detectionCreateManyParksInput[]
    skipDuplicates?: boolean
  }

  export type parks_footfall_analysisCreateWithoutParkInput = {
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type parks_footfall_analysisUncheckedCreateWithoutParkInput = {
    id?: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type parks_footfall_analysisCreateOrConnectWithoutParkInput = {
    where: parks_footfall_analysisWhereUniqueInput
    create: XOR<parks_footfall_analysisCreateWithoutParkInput, parks_footfall_analysisUncheckedCreateWithoutParkInput>
  }

  export type parks_footfall_analysisCreateManyParkInputEnvelope = {
    data: parks_footfall_analysisCreateManyParkInput | parks_footfall_analysisCreateManyParkInput[]
    skipDuplicates?: boolean
  }

  export type park_camerasUpsertWithWhereUniqueWithoutParksInput = {
    where: park_camerasWhereUniqueInput
    update: XOR<park_camerasUpdateWithoutParksInput, park_camerasUncheckedUpdateWithoutParksInput>
    create: XOR<park_camerasCreateWithoutParksInput, park_camerasUncheckedCreateWithoutParksInput>
  }

  export type park_camerasUpdateWithWhereUniqueWithoutParksInput = {
    where: park_camerasWhereUniqueInput
    data: XOR<park_camerasUpdateWithoutParksInput, park_camerasUncheckedUpdateWithoutParksInput>
  }

  export type park_camerasUpdateManyWithWhereWithoutParksInput = {
    where: park_camerasScalarWhereInput
    data: XOR<park_camerasUpdateManyMutationInput, park_camerasUncheckedUpdateManyWithoutParksInput>
  }

  export type park_camerasScalarWhereInput = {
    AND?: park_camerasScalarWhereInput | park_camerasScalarWhereInput[]
    OR?: park_camerasScalarWhereInput[]
    NOT?: park_camerasScalarWhereInput | park_camerasScalarWhereInput[]
    Id?: IntFilter<"park_cameras"> | number
    park_Id?: IntNullableFilter<"park_cameras"> | number | null
    camera_Id?: StringNullableFilter<"park_cameras"> | string | null
    camera_english_name?: StringNullableFilter<"park_cameras"> | string | null
    camera_arabic_name?: StringNullableFilter<"park_cameras"> | string | null
    latitude?: DecimalNullableFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"park_cameras"> | Decimal | DecimalJsLike | number | string | null
    ip_address?: StringNullableFilter<"park_cameras"> | string | null
    last_active_date?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    last_active_time?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    status?: StringNullableFilter<"park_cameras"> | string | null
    createdAt?: DateTimeNullableFilter<"park_cameras"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_cameras"> | Date | string
    location?: StringNullableFilter<"park_cameras"> | string | null
    attendance?: BoolNullableFilter<"park_cameras"> | boolean | null
    footfall?: BoolNullableFilter<"park_cameras"> | boolean | null
    sentiment?: BoolNullableFilter<"park_cameras"> | boolean | null
    behaviour?: BoolNullableFilter<"park_cameras"> | boolean | null
    irrigation?: BoolNullableFilter<"park_cameras"> | boolean | null
    landscaping?: BoolNullableFilter<"park_cameras"> | boolean | null
    litter_detection?: BoolNullableFilter<"park_cameras"> | boolean | null
    smoking_detection?: BoolNullableFilter<"park_cameras"> | boolean | null
    intrusion?: BoolNullableFilter<"park_cameras"> | boolean | null
    stream_url?: StringNullableFilter<"park_cameras"> | string | null
    stream_api_key?: StringNullableFilter<"park_cameras"> | string | null
    stream_path?: StringNullableFilter<"park_cameras"> | string | null
    password?: StringNullableFilter<"park_cameras"> | string | null
  }

  export type park_streamsUpsertWithWhereUniqueWithoutParksInput = {
    where: park_streamsWhereUniqueInput
    update: XOR<park_streamsUpdateWithoutParksInput, park_streamsUncheckedUpdateWithoutParksInput>
    create: XOR<park_streamsCreateWithoutParksInput, park_streamsUncheckedCreateWithoutParksInput>
  }

  export type park_streamsUpdateWithWhereUniqueWithoutParksInput = {
    where: park_streamsWhereUniqueInput
    data: XOR<park_streamsUpdateWithoutParksInput, park_streamsUncheckedUpdateWithoutParksInput>
  }

  export type park_streamsUpdateManyWithWhereWithoutParksInput = {
    where: park_streamsScalarWhereInput
    data: XOR<park_streamsUpdateManyMutationInput, park_streamsUncheckedUpdateManyWithoutParksInput>
  }

  export type park_streamsScalarWhereInput = {
    AND?: park_streamsScalarWhereInput | park_streamsScalarWhereInput[]
    OR?: park_streamsScalarWhereInput[]
    NOT?: park_streamsScalarWhereInput | park_streamsScalarWhereInput[]
    Id?: IntFilter<"park_streams"> | number
    park_Id?: IntNullableFilter<"park_streams"> | number | null
    stream_url?: StringNullableFilter<"park_streams"> | string | null
    stream_api_key?: StringNullableFilter<"park_streams"> | string | null
    stream_path?: StringNullableFilter<"park_streams"> | string | null
    password?: StringNullableFilter<"park_streams"> | string | null
    createdAt?: DateTimeNullableFilter<"park_streams"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_streams"> | Date | string
  }

  export type park_zonesUpsertWithWhereUniqueWithoutParksInput = {
    where: park_zonesWhereUniqueInput
    update: XOR<park_zonesUpdateWithoutParksInput, park_zonesUncheckedUpdateWithoutParksInput>
    create: XOR<park_zonesCreateWithoutParksInput, park_zonesUncheckedCreateWithoutParksInput>
  }

  export type park_zonesUpdateWithWhereUniqueWithoutParksInput = {
    where: park_zonesWhereUniqueInput
    data: XOR<park_zonesUpdateWithoutParksInput, park_zonesUncheckedUpdateWithoutParksInput>
  }

  export type park_zonesUpdateManyWithWhereWithoutParksInput = {
    where: park_zonesScalarWhereInput
    data: XOR<park_zonesUpdateManyMutationInput, park_zonesUncheckedUpdateManyWithoutParksInput>
  }

  export type park_zonesScalarWhereInput = {
    AND?: park_zonesScalarWhereInput | park_zonesScalarWhereInput[]
    OR?: park_zonesScalarWhereInput[]
    NOT?: park_zonesScalarWhereInput | park_zonesScalarWhereInput[]
    Id?: IntFilter<"park_zones"> | number
    park_Id?: IntNullableFilter<"park_zones"> | number | null
    zone_Id?: StringNullableFilter<"park_zones"> | string | null
    zone_english_name?: StringNullableFilter<"park_zones"> | string | null
    zone_arabic_name?: StringNullableFilter<"park_zones"> | string | null
    latitude?: DecimalNullableFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"park_zones"> | Decimal | DecimalJsLike | number | string | null
    device_ip?: StringNullableFilter<"park_zones"> | string | null
    web_api?: StringNullableFilter<"park_zones"> | string | null
    status?: StringNullableFilter<"park_zones"> | string | null
    createdAt?: DateTimeNullableFilter<"park_zones"> | Date | string | null
    updatedAt?: DateTimeFilter<"park_zones"> | Date | string
    location?: StringNullableFilter<"park_zones"> | string | null
  }

  export type parks_attendanceUpsertWithWhereUniqueWithoutParkInput = {
    where: parks_attendanceWhereUniqueInput
    update: XOR<parks_attendanceUpdateWithoutParkInput, parks_attendanceUncheckedUpdateWithoutParkInput>
    create: XOR<parks_attendanceCreateWithoutParkInput, parks_attendanceUncheckedCreateWithoutParkInput>
  }

  export type parks_attendanceUpdateWithWhereUniqueWithoutParkInput = {
    where: parks_attendanceWhereUniqueInput
    data: XOR<parks_attendanceUpdateWithoutParkInput, parks_attendanceUncheckedUpdateWithoutParkInput>
  }

  export type parks_attendanceUpdateManyWithWhereWithoutParkInput = {
    where: parks_attendanceScalarWhereInput
    data: XOR<parks_attendanceUpdateManyMutationInput, parks_attendanceUncheckedUpdateManyWithoutParkInput>
  }

  export type parks_attendanceScalarWhereInput = {
    AND?: parks_attendanceScalarWhereInput | parks_attendanceScalarWhereInput[]
    OR?: parks_attendanceScalarWhereInput[]
    NOT?: parks_attendanceScalarWhereInput | parks_attendanceScalarWhereInput[]
    Id?: IntFilter<"parks_attendance"> | number
    park_Id?: IntNullableFilter<"parks_attendance"> | number | null
    person_Id?: IntNullableFilter<"parks_attendance"> | number | null
    entry_time?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    exit_time?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"parks_attendance"> | Date | string | null
    updatedAt?: DateTimeFilter<"parks_attendance"> | Date | string
  }

  export type parks_behaviour_alertsUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_behaviour_alertsWhereUniqueInput
    update: XOR<parks_behaviour_alertsUpdateWithoutParksInput, parks_behaviour_alertsUncheckedUpdateWithoutParksInput>
    create: XOR<parks_behaviour_alertsCreateWithoutParksInput, parks_behaviour_alertsUncheckedCreateWithoutParksInput>
  }

  export type parks_behaviour_alertsUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_behaviour_alertsWhereUniqueInput
    data: XOR<parks_behaviour_alertsUpdateWithoutParksInput, parks_behaviour_alertsUncheckedUpdateWithoutParksInput>
  }

  export type parks_behaviour_alertsUpdateManyWithWhereWithoutParksInput = {
    where: parks_behaviour_alertsScalarWhereInput
    data: XOR<parks_behaviour_alertsUpdateManyMutationInput, parks_behaviour_alertsUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_intrusion_detectionUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    update: XOR<parks_intrusion_detectionUpdateWithoutParksInput, parks_intrusion_detectionUncheckedUpdateWithoutParksInput>
    create: XOR<parks_intrusion_detectionCreateWithoutParksInput, parks_intrusion_detectionUncheckedCreateWithoutParksInput>
  }

  export type parks_intrusion_detectionUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    data: XOR<parks_intrusion_detectionUpdateWithoutParksInput, parks_intrusion_detectionUncheckedUpdateWithoutParksInput>
  }

  export type parks_intrusion_detectionUpdateManyWithWhereWithoutParksInput = {
    where: parks_intrusion_detectionScalarWhereInput
    data: XOR<parks_intrusion_detectionUpdateManyMutationInput, parks_intrusion_detectionUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_irrigation_job_historyUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_irrigation_job_historyWhereUniqueInput
    update: XOR<parks_irrigation_job_historyUpdateWithoutParksInput, parks_irrigation_job_historyUncheckedUpdateWithoutParksInput>
    create: XOR<parks_irrigation_job_historyCreateWithoutParksInput, parks_irrigation_job_historyUncheckedCreateWithoutParksInput>
  }

  export type parks_irrigation_job_historyUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_irrigation_job_historyWhereUniqueInput
    data: XOR<parks_irrigation_job_historyUpdateWithoutParksInput, parks_irrigation_job_historyUncheckedUpdateWithoutParksInput>
  }

  export type parks_irrigation_job_historyUpdateManyWithWhereWithoutParksInput = {
    where: parks_irrigation_job_historyScalarWhereInput
    data: XOR<parks_irrigation_job_historyUpdateManyMutationInput, parks_irrigation_job_historyUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_landscapingUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_landscapingWhereUniqueInput
    update: XOR<parks_landscapingUpdateWithoutParksInput, parks_landscapingUncheckedUpdateWithoutParksInput>
    create: XOR<parks_landscapingCreateWithoutParksInput, parks_landscapingUncheckedCreateWithoutParksInput>
  }

  export type parks_landscapingUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_landscapingWhereUniqueInput
    data: XOR<parks_landscapingUpdateWithoutParksInput, parks_landscapingUncheckedUpdateWithoutParksInput>
  }

  export type parks_landscapingUpdateManyWithWhereWithoutParksInput = {
    where: parks_landscapingScalarWhereInput
    data: XOR<parks_landscapingUpdateManyMutationInput, parks_landscapingUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_litter_detectionUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_litter_detectionWhereUniqueInput
    update: XOR<parks_litter_detectionUpdateWithoutParksInput, parks_litter_detectionUncheckedUpdateWithoutParksInput>
    create: XOR<parks_litter_detectionCreateWithoutParksInput, parks_litter_detectionUncheckedCreateWithoutParksInput>
  }

  export type parks_litter_detectionUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_litter_detectionWhereUniqueInput
    data: XOR<parks_litter_detectionUpdateWithoutParksInput, parks_litter_detectionUncheckedUpdateWithoutParksInput>
  }

  export type parks_litter_detectionUpdateManyWithWhereWithoutParksInput = {
    where: parks_litter_detectionScalarWhereInput
    data: XOR<parks_litter_detectionUpdateManyMutationInput, parks_litter_detectionUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_sentiment_analysisUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    update: XOR<parks_sentiment_analysisUpdateWithoutParksInput, parks_sentiment_analysisUncheckedUpdateWithoutParksInput>
    create: XOR<parks_sentiment_analysisCreateWithoutParksInput, parks_sentiment_analysisUncheckedCreateWithoutParksInput>
  }

  export type parks_sentiment_analysisUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_sentiment_analysisWhereUniqueInput
    data: XOR<parks_sentiment_analysisUpdateWithoutParksInput, parks_sentiment_analysisUncheckedUpdateWithoutParksInput>
  }

  export type parks_sentiment_analysisUpdateManyWithWhereWithoutParksInput = {
    where: parks_sentiment_analysisScalarWhereInput
    data: XOR<parks_sentiment_analysisUpdateManyMutationInput, parks_sentiment_analysisUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_smoking_detectionUpsertWithWhereUniqueWithoutParksInput = {
    where: parks_smoking_detectionWhereUniqueInput
    update: XOR<parks_smoking_detectionUpdateWithoutParksInput, parks_smoking_detectionUncheckedUpdateWithoutParksInput>
    create: XOR<parks_smoking_detectionCreateWithoutParksInput, parks_smoking_detectionUncheckedCreateWithoutParksInput>
  }

  export type parks_smoking_detectionUpdateWithWhereUniqueWithoutParksInput = {
    where: parks_smoking_detectionWhereUniqueInput
    data: XOR<parks_smoking_detectionUpdateWithoutParksInput, parks_smoking_detectionUncheckedUpdateWithoutParksInput>
  }

  export type parks_smoking_detectionUpdateManyWithWhereWithoutParksInput = {
    where: parks_smoking_detectionScalarWhereInput
    data: XOR<parks_smoking_detectionUpdateManyMutationInput, parks_smoking_detectionUncheckedUpdateManyWithoutParksInput>
  }

  export type parks_footfall_analysisUpsertWithWhereUniqueWithoutParkInput = {
    where: parks_footfall_analysisWhereUniqueInput
    update: XOR<parks_footfall_analysisUpdateWithoutParkInput, parks_footfall_analysisUncheckedUpdateWithoutParkInput>
    create: XOR<parks_footfall_analysisCreateWithoutParkInput, parks_footfall_analysisUncheckedCreateWithoutParkInput>
  }

  export type parks_footfall_analysisUpdateWithWhereUniqueWithoutParkInput = {
    where: parks_footfall_analysisWhereUniqueInput
    data: XOR<parks_footfall_analysisUpdateWithoutParkInput, parks_footfall_analysisUncheckedUpdateWithoutParkInput>
  }

  export type parks_footfall_analysisUpdateManyWithWhereWithoutParkInput = {
    where: parks_footfall_analysisScalarWhereInput
    data: XOR<parks_footfall_analysisUpdateManyMutationInput, parks_footfall_analysisUncheckedUpdateManyWithoutParkInput>
  }

  export type parks_footfall_analysisScalarWhereInput = {
    AND?: parks_footfall_analysisScalarWhereInput | parks_footfall_analysisScalarWhereInput[]
    OR?: parks_footfall_analysisScalarWhereInput[]
    NOT?: parks_footfall_analysisScalarWhereInput | parks_footfall_analysisScalarWhereInput[]
    id?: IntFilter<"parks_footfall_analysis"> | number
    park_Id?: IntFilter<"parks_footfall_analysis"> | number
    detection_Id?: StringFilter<"parks_footfall_analysis"> | string
    person_Id?: IntFilter<"parks_footfall_analysis"> | number
    gender?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    is_child?: BoolFilter<"parks_footfall_analysis"> | boolean
    time?: DateTimeFilter<"parks_footfall_analysis"> | Date | string
    detected_camera_Id?: StringFilter<"parks_footfall_analysis"> | string
    detected_camera_name?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc1?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc2?: StringNullableFilter<"parks_footfall_analysis"> | string | null
    abc3?: StringNullableFilter<"parks_footfall_analysis"> | string | null
  }

  export type parksCreateWithoutParks_attendanceInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_attendanceInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_attendanceInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_attendanceInput, parksUncheckedCreateWithoutParks_attendanceInput>
  }

  export type usersCreateWithoutParks_attendanceInput = {
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutUsersInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutPersonInput
    users_roles?: users_rolesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutParks_attendanceInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    role_Id?: number | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutUsersInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutPersonInput
  }

  export type usersCreateOrConnectWithoutParks_attendanceInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutParks_attendanceInput, usersUncheckedCreateWithoutParks_attendanceInput>
  }

  export type parksUpsertWithoutParks_attendanceInput = {
    update: XOR<parksUpdateWithoutParks_attendanceInput, parksUncheckedUpdateWithoutParks_attendanceInput>
    create: XOR<parksCreateWithoutParks_attendanceInput, parksUncheckedCreateWithoutParks_attendanceInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_attendanceInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_attendanceInput, parksUncheckedUpdateWithoutParks_attendanceInput>
  }

  export type parksUpdateWithoutParks_attendanceInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_attendanceInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type usersUpsertWithoutParks_attendanceInput = {
    update: XOR<usersUpdateWithoutParks_attendanceInput, usersUncheckedUpdateWithoutParks_attendanceInput>
    create: XOR<usersCreateWithoutParks_attendanceInput, usersUncheckedCreateWithoutParks_attendanceInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutParks_attendanceInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutParks_attendanceInput, usersUncheckedUpdateWithoutParks_attendanceInput>
  }

  export type usersUpdateWithoutParks_attendanceInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutUsersNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutPersonNestedInput
    users_roles?: users_rolesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutParks_attendanceInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutUsersNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type parksCreateWithoutParks_behaviour_alertsInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_behaviour_alertsInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_behaviour_alertsInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_behaviour_alertsInput, parksUncheckedCreateWithoutParks_behaviour_alertsInput>
  }

  export type park_camerasCreateWithoutParks_behaviour_alertsInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_behaviour_alertsInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_behaviour_alertsInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_behaviour_alertsInput, park_camerasUncheckedCreateWithoutParks_behaviour_alertsInput>
  }

  export type parksUpsertWithoutParks_behaviour_alertsInput = {
    update: XOR<parksUpdateWithoutParks_behaviour_alertsInput, parksUncheckedUpdateWithoutParks_behaviour_alertsInput>
    create: XOR<parksCreateWithoutParks_behaviour_alertsInput, parksUncheckedCreateWithoutParks_behaviour_alertsInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_behaviour_alertsInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_behaviour_alertsInput, parksUncheckedUpdateWithoutParks_behaviour_alertsInput>
  }

  export type parksUpdateWithoutParks_behaviour_alertsInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_behaviour_alertsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_camerasUpsertWithoutParks_behaviour_alertsInput = {
    update: XOR<park_camerasUpdateWithoutParks_behaviour_alertsInput, park_camerasUncheckedUpdateWithoutParks_behaviour_alertsInput>
    create: XOR<park_camerasCreateWithoutParks_behaviour_alertsInput, park_camerasUncheckedCreateWithoutParks_behaviour_alertsInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_behaviour_alertsInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_behaviour_alertsInput, park_camerasUncheckedUpdateWithoutParks_behaviour_alertsInput>
  }

  export type park_camerasUpdateWithoutParks_behaviour_alertsInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_behaviour_alertsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type parksCreateWithoutParks_intrusion_detectionInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_intrusion_detectionInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_intrusion_detectionInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_intrusion_detectionInput, parksUncheckedCreateWithoutParks_intrusion_detectionInput>
  }

  export type park_camerasCreateWithoutParks_intrusion_detectionInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_intrusion_detectionInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_intrusion_detectionInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_intrusion_detectionInput, park_camerasUncheckedCreateWithoutParks_intrusion_detectionInput>
  }

  export type intranet_posting_historyCreateWithoutIntrusionDetectionInput = {
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    smokingDetection?: parks_smoking_detectionCreateNestedOneWithoutIntranet_posting_historyInput
  }

  export type intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput = {
    id?: number
    smokingDetectionId?: number | null
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type intranet_posting_historyCreateOrConnectWithoutIntrusionDetectionInput = {
    where: intranet_posting_historyWhereUniqueInput
    create: XOR<intranet_posting_historyCreateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput>
  }

  export type intranet_posting_historyCreateManyIntrusionDetectionInputEnvelope = {
    data: intranet_posting_historyCreateManyIntrusionDetectionInput | intranet_posting_historyCreateManyIntrusionDetectionInput[]
    skipDuplicates?: boolean
  }

  export type parksUpsertWithoutParks_intrusion_detectionInput = {
    update: XOR<parksUpdateWithoutParks_intrusion_detectionInput, parksUncheckedUpdateWithoutParks_intrusion_detectionInput>
    create: XOR<parksCreateWithoutParks_intrusion_detectionInput, parksUncheckedCreateWithoutParks_intrusion_detectionInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_intrusion_detectionInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_intrusion_detectionInput, parksUncheckedUpdateWithoutParks_intrusion_detectionInput>
  }

  export type parksUpdateWithoutParks_intrusion_detectionInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_intrusion_detectionInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_camerasUpsertWithoutParks_intrusion_detectionInput = {
    update: XOR<park_camerasUpdateWithoutParks_intrusion_detectionInput, park_camerasUncheckedUpdateWithoutParks_intrusion_detectionInput>
    create: XOR<park_camerasCreateWithoutParks_intrusion_detectionInput, park_camerasUncheckedCreateWithoutParks_intrusion_detectionInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_intrusion_detectionInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_intrusion_detectionInput, park_camerasUncheckedUpdateWithoutParks_intrusion_detectionInput>
  }

  export type park_camerasUpdateWithoutParks_intrusion_detectionInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_intrusion_detectionInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type intranet_posting_historyUpsertWithWhereUniqueWithoutIntrusionDetectionInput = {
    where: intranet_posting_historyWhereUniqueInput
    update: XOR<intranet_posting_historyUpdateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedUpdateWithoutIntrusionDetectionInput>
    create: XOR<intranet_posting_historyCreateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedCreateWithoutIntrusionDetectionInput>
  }

  export type intranet_posting_historyUpdateWithWhereUniqueWithoutIntrusionDetectionInput = {
    where: intranet_posting_historyWhereUniqueInput
    data: XOR<intranet_posting_historyUpdateWithoutIntrusionDetectionInput, intranet_posting_historyUncheckedUpdateWithoutIntrusionDetectionInput>
  }

  export type intranet_posting_historyUpdateManyWithWhereWithoutIntrusionDetectionInput = {
    where: intranet_posting_historyScalarWhereInput
    data: XOR<intranet_posting_historyUpdateManyMutationInput, intranet_posting_historyUncheckedUpdateManyWithoutIntrusionDetectionInput>
  }

  export type intranet_posting_historyScalarWhereInput = {
    AND?: intranet_posting_historyScalarWhereInput | intranet_posting_historyScalarWhereInput[]
    OR?: intranet_posting_historyScalarWhereInput[]
    NOT?: intranet_posting_historyScalarWhereInput | intranet_posting_historyScalarWhereInput[]
    id?: IntFilter<"intranet_posting_history"> | number
    smokingDetectionId?: IntNullableFilter<"intranet_posting_history"> | number | null
    intrusionDetectionId?: IntNullableFilter<"intranet_posting_history"> | number | null
    title?: StringNullableFilter<"intranet_posting_history"> | string | null
    intranet_id?: StringNullableFilter<"intranet_posting_history"> | string | null
    comments?: StringNullableFilter<"intranet_posting_history"> | string | null
    date?: DateTimeNullableFilter<"intranet_posting_history"> | Date | string | null
    time?: DateTimeNullableFilter<"intranet_posting_history"> | Date | string | null
    abc1?: StringNullableFilter<"intranet_posting_history"> | string | null
    abc2?: StringNullableFilter<"intranet_posting_history"> | string | null
    abc3?: StringNullableFilter<"intranet_posting_history"> | string | null
  }

  export type parksCreateWithoutParks_irrigation_job_historyInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_irrigation_job_historyInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_irrigation_job_historyInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_irrigation_job_historyInput, parksUncheckedCreateWithoutParks_irrigation_job_historyInput>
  }

  export type park_zonesCreateWithoutParks_irrigation_job_historyInput = {
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    parks?: parksCreateNestedOneWithoutPark_zonesInput
  }

  export type park_zonesUncheckedCreateWithoutParks_irrigation_job_historyInput = {
    Id?: number
    park_Id?: number | null
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
  }

  export type park_zonesCreateOrConnectWithoutParks_irrigation_job_historyInput = {
    where: park_zonesWhereUniqueInput
    create: XOR<park_zonesCreateWithoutParks_irrigation_job_historyInput, park_zonesUncheckedCreateWithoutParks_irrigation_job_historyInput>
  }

  export type parksUpsertWithoutParks_irrigation_job_historyInput = {
    update: XOR<parksUpdateWithoutParks_irrigation_job_historyInput, parksUncheckedUpdateWithoutParks_irrigation_job_historyInput>
    create: XOR<parksCreateWithoutParks_irrigation_job_historyInput, parksUncheckedCreateWithoutParks_irrigation_job_historyInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_irrigation_job_historyInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_irrigation_job_historyInput, parksUncheckedUpdateWithoutParks_irrigation_job_historyInput>
  }

  export type parksUpdateWithoutParks_irrigation_job_historyInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_irrigation_job_historyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_zonesUpsertWithoutParks_irrigation_job_historyInput = {
    update: XOR<park_zonesUpdateWithoutParks_irrigation_job_historyInput, park_zonesUncheckedUpdateWithoutParks_irrigation_job_historyInput>
    create: XOR<park_zonesCreateWithoutParks_irrigation_job_historyInput, park_zonesUncheckedCreateWithoutParks_irrigation_job_historyInput>
    where?: park_zonesWhereInput
  }

  export type park_zonesUpdateToOneWithWhereWithoutParks_irrigation_job_historyInput = {
    where?: park_zonesWhereInput
    data: XOR<park_zonesUpdateWithoutParks_irrigation_job_historyInput, park_zonesUncheckedUpdateWithoutParks_irrigation_job_historyInput>
  }

  export type park_zonesUpdateWithoutParks_irrigation_job_historyInput = {
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    parks?: parksUpdateOneWithoutPark_zonesNestedInput
  }

  export type park_zonesUncheckedUpdateWithoutParks_irrigation_job_historyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parksCreateWithoutParks_landscapingInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_landscapingInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_landscapingInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_landscapingInput, parksUncheckedCreateWithoutParks_landscapingInput>
  }

  export type park_camerasCreateWithoutParks_landscapingInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_landscapingInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_landscapingInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_landscapingInput, park_camerasUncheckedCreateWithoutParks_landscapingInput>
  }

  export type ticket_details_tableCreateWithoutParks_landscapingInput = {
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks_litter_detection?: parks_litter_detectionCreateNestedOneWithoutTicket_detailsInput
  }

  export type ticket_details_tableUncheckedCreateWithoutParks_landscapingInput = {
    id?: number
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    litterDetectionId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ticket_details_tableCreateOrConnectWithoutParks_landscapingInput = {
    where: ticket_details_tableWhereUniqueInput
    create: XOR<ticket_details_tableCreateWithoutParks_landscapingInput, ticket_details_tableUncheckedCreateWithoutParks_landscapingInput>
  }

  export type ticket_details_tableCreateManyParks_landscapingInputEnvelope = {
    data: ticket_details_tableCreateManyParks_landscapingInput | ticket_details_tableCreateManyParks_landscapingInput[]
    skipDuplicates?: boolean
  }

  export type parksUpsertWithoutParks_landscapingInput = {
    update: XOR<parksUpdateWithoutParks_landscapingInput, parksUncheckedUpdateWithoutParks_landscapingInput>
    create: XOR<parksCreateWithoutParks_landscapingInput, parksUncheckedCreateWithoutParks_landscapingInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_landscapingInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_landscapingInput, parksUncheckedUpdateWithoutParks_landscapingInput>
  }

  export type parksUpdateWithoutParks_landscapingInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_landscapingInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_camerasUpsertWithoutParks_landscapingInput = {
    update: XOR<park_camerasUpdateWithoutParks_landscapingInput, park_camerasUncheckedUpdateWithoutParks_landscapingInput>
    create: XOR<park_camerasCreateWithoutParks_landscapingInput, park_camerasUncheckedCreateWithoutParks_landscapingInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_landscapingInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_landscapingInput, park_camerasUncheckedUpdateWithoutParks_landscapingInput>
  }

  export type park_camerasUpdateWithoutParks_landscapingInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_landscapingInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type ticket_details_tableUpsertWithWhereUniqueWithoutParks_landscapingInput = {
    where: ticket_details_tableWhereUniqueInput
    update: XOR<ticket_details_tableUpdateWithoutParks_landscapingInput, ticket_details_tableUncheckedUpdateWithoutParks_landscapingInput>
    create: XOR<ticket_details_tableCreateWithoutParks_landscapingInput, ticket_details_tableUncheckedCreateWithoutParks_landscapingInput>
  }

  export type ticket_details_tableUpdateWithWhereUniqueWithoutParks_landscapingInput = {
    where: ticket_details_tableWhereUniqueInput
    data: XOR<ticket_details_tableUpdateWithoutParks_landscapingInput, ticket_details_tableUncheckedUpdateWithoutParks_landscapingInput>
  }

  export type ticket_details_tableUpdateManyWithWhereWithoutParks_landscapingInput = {
    where: ticket_details_tableScalarWhereInput
    data: XOR<ticket_details_tableUpdateManyMutationInput, ticket_details_tableUncheckedUpdateManyWithoutParks_landscapingInput>
  }

  export type ticket_details_tableScalarWhereInput = {
    AND?: ticket_details_tableScalarWhereInput | ticket_details_tableScalarWhereInput[]
    OR?: ticket_details_tableScalarWhereInput[]
    NOT?: ticket_details_tableScalarWhereInput | ticket_details_tableScalarWhereInput[]
    id?: IntFilter<"ticket_details_table"> | number
    status?: StringNullableFilter<"ticket_details_table"> | string | null
    date?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    time?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    comments?: StringNullableFilter<"ticket_details_table"> | string | null
    image?: StringNullableFilter<"ticket_details_table"> | string | null
    abc1?: StringNullableFilter<"ticket_details_table"> | string | null
    abc2?: StringNullableFilter<"ticket_details_table"> | string | null
    abc3?: StringNullableFilter<"ticket_details_table"> | string | null
    abc4?: StringNullableFilter<"ticket_details_table"> | string | null
    litterDetectionId?: IntNullableFilter<"ticket_details_table"> | number | null
    landscapingId?: IntNullableFilter<"ticket_details_table"> | number | null
    createdAt?: DateTimeNullableFilter<"ticket_details_table"> | Date | string | null
    updatedAt?: DateTimeFilter<"ticket_details_table"> | Date | string
  }

  export type parksCreateWithoutParks_litter_detectionInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_litter_detectionInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_litter_detectionInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_litter_detectionInput, parksUncheckedCreateWithoutParks_litter_detectionInput>
  }

  export type park_camerasCreateWithoutParks_litter_detectionInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_litter_detectionInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_litter_detectionInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_litter_detectionInput, park_camerasUncheckedCreateWithoutParks_litter_detectionInput>
  }

  export type ticket_details_tableCreateWithoutParks_litter_detectionInput = {
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks_landscaping?: parks_landscapingCreateNestedOneWithoutTicket_detailsInput
  }

  export type ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput = {
    id?: number
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    landscapingId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ticket_details_tableCreateOrConnectWithoutParks_litter_detectionInput = {
    where: ticket_details_tableWhereUniqueInput
    create: XOR<ticket_details_tableCreateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput>
  }

  export type ticket_details_tableCreateManyParks_litter_detectionInputEnvelope = {
    data: ticket_details_tableCreateManyParks_litter_detectionInput | ticket_details_tableCreateManyParks_litter_detectionInput[]
    skipDuplicates?: boolean
  }

  export type parksUpsertWithoutParks_litter_detectionInput = {
    update: XOR<parksUpdateWithoutParks_litter_detectionInput, parksUncheckedUpdateWithoutParks_litter_detectionInput>
    create: XOR<parksCreateWithoutParks_litter_detectionInput, parksUncheckedCreateWithoutParks_litter_detectionInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_litter_detectionInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_litter_detectionInput, parksUncheckedUpdateWithoutParks_litter_detectionInput>
  }

  export type parksUpdateWithoutParks_litter_detectionInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_litter_detectionInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_camerasUpsertWithoutParks_litter_detectionInput = {
    update: XOR<park_camerasUpdateWithoutParks_litter_detectionInput, park_camerasUncheckedUpdateWithoutParks_litter_detectionInput>
    create: XOR<park_camerasCreateWithoutParks_litter_detectionInput, park_camerasUncheckedCreateWithoutParks_litter_detectionInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_litter_detectionInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_litter_detectionInput, park_camerasUncheckedUpdateWithoutParks_litter_detectionInput>
  }

  export type park_camerasUpdateWithoutParks_litter_detectionInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_litter_detectionInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type ticket_details_tableUpsertWithWhereUniqueWithoutParks_litter_detectionInput = {
    where: ticket_details_tableWhereUniqueInput
    update: XOR<ticket_details_tableUpdateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedUpdateWithoutParks_litter_detectionInput>
    create: XOR<ticket_details_tableCreateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedCreateWithoutParks_litter_detectionInput>
  }

  export type ticket_details_tableUpdateWithWhereUniqueWithoutParks_litter_detectionInput = {
    where: ticket_details_tableWhereUniqueInput
    data: XOR<ticket_details_tableUpdateWithoutParks_litter_detectionInput, ticket_details_tableUncheckedUpdateWithoutParks_litter_detectionInput>
  }

  export type ticket_details_tableUpdateManyWithWhereWithoutParks_litter_detectionInput = {
    where: ticket_details_tableScalarWhereInput
    data: XOR<ticket_details_tableUpdateManyMutationInput, ticket_details_tableUncheckedUpdateManyWithoutParks_litter_detectionInput>
  }

  export type parks_litter_detectionCreateWithoutTicket_detailsInput = {
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_litter_detectionInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_litter_detectionInput
  }

  export type parks_litter_detectionUncheckedCreateWithoutTicket_detailsInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_litter_detectionCreateOrConnectWithoutTicket_detailsInput = {
    where: parks_litter_detectionWhereUniqueInput
    create: XOR<parks_litter_detectionCreateWithoutTicket_detailsInput, parks_litter_detectionUncheckedCreateWithoutTicket_detailsInput>
  }

  export type parks_landscapingCreateWithoutTicket_detailsInput = {
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_landscapingInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_landscapingInput
  }

  export type parks_landscapingUncheckedCreateWithoutTicket_detailsInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_landscapingCreateOrConnectWithoutTicket_detailsInput = {
    where: parks_landscapingWhereUniqueInput
    create: XOR<parks_landscapingCreateWithoutTicket_detailsInput, parks_landscapingUncheckedCreateWithoutTicket_detailsInput>
  }

  export type parks_litter_detectionUpsertWithoutTicket_detailsInput = {
    update: XOR<parks_litter_detectionUpdateWithoutTicket_detailsInput, parks_litter_detectionUncheckedUpdateWithoutTicket_detailsInput>
    create: XOR<parks_litter_detectionCreateWithoutTicket_detailsInput, parks_litter_detectionUncheckedCreateWithoutTicket_detailsInput>
    where?: parks_litter_detectionWhereInput
  }

  export type parks_litter_detectionUpdateToOneWithWhereWithoutTicket_detailsInput = {
    where?: parks_litter_detectionWhereInput
    data: XOR<parks_litter_detectionUpdateWithoutTicket_detailsInput, parks_litter_detectionUncheckedUpdateWithoutTicket_detailsInput>
  }

  export type parks_litter_detectionUpdateWithoutTicket_detailsInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_litter_detectionNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionUncheckedUpdateWithoutTicket_detailsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_landscapingUpsertWithoutTicket_detailsInput = {
    update: XOR<parks_landscapingUpdateWithoutTicket_detailsInput, parks_landscapingUncheckedUpdateWithoutTicket_detailsInput>
    create: XOR<parks_landscapingCreateWithoutTicket_detailsInput, parks_landscapingUncheckedCreateWithoutTicket_detailsInput>
    where?: parks_landscapingWhereInput
  }

  export type parks_landscapingUpdateToOneWithWhereWithoutTicket_detailsInput = {
    where?: parks_landscapingWhereInput
    data: XOR<parks_landscapingUpdateWithoutTicket_detailsInput, parks_landscapingUncheckedUpdateWithoutTicket_detailsInput>
  }

  export type parks_landscapingUpdateWithoutTicket_detailsInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_landscapingNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingUncheckedUpdateWithoutTicket_detailsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parksCreateWithoutParks_sentiment_analysisInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_sentiment_analysisInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_sentiment_analysisInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_sentiment_analysisInput, parksUncheckedCreateWithoutParks_sentiment_analysisInput>
  }

  export type park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type parksUpsertWithoutParks_sentiment_analysisInput = {
    update: XOR<parksUpdateWithoutParks_sentiment_analysisInput, parksUncheckedUpdateWithoutParks_sentiment_analysisInput>
    create: XOR<parksCreateWithoutParks_sentiment_analysisInput, parksUncheckedCreateWithoutParks_sentiment_analysisInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_sentiment_analysisInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_sentiment_analysisInput, parksUncheckedUpdateWithoutParks_sentiment_analysisInput>
  }

  export type parksUpdateWithoutParks_sentiment_analysisInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_sentiment_analysisInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_camerasUpsertWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    update: XOR<park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
    create: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput, park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput>
  }

  export type park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUpsertWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    update: XOR<park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
    create: XOR<park_camerasCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUncheckedCreateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput, park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput>
  }

  export type park_camerasUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type parksCreateWithoutParks_smoking_detectionInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisCreateNestedManyWithoutParkInput
  }

  export type parksUncheckedCreateWithoutParks_smoking_detectionInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedCreateNestedManyWithoutParkInput
  }

  export type parksCreateOrConnectWithoutParks_smoking_detectionInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_smoking_detectionInput, parksUncheckedCreateWithoutParks_smoking_detectionInput>
  }

  export type park_camerasCreateWithoutParks_smoking_detectionInput = {
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutPark_camerasInput
    parks?: parksCreateNestedOneWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasUncheckedCreateWithoutParks_smoking_detectionInput = {
    Id?: number
    park_Id?: number | null
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutPark_camerasInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutPark_camerasInput
  }

  export type park_camerasCreateOrConnectWithoutParks_smoking_detectionInput = {
    where: park_camerasWhereUniqueInput
    create: XOR<park_camerasCreateWithoutParks_smoking_detectionInput, park_camerasUncheckedCreateWithoutParks_smoking_detectionInput>
  }

  export type intranet_posting_historyCreateWithoutSmokingDetectionInput = {
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    intrusionDetection?: parks_intrusion_detectionCreateNestedOneWithoutIntranet_posting_historyInput
  }

  export type intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput = {
    id?: number
    intrusionDetectionId?: number | null
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type intranet_posting_historyCreateOrConnectWithoutSmokingDetectionInput = {
    where: intranet_posting_historyWhereUniqueInput
    create: XOR<intranet_posting_historyCreateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput>
  }

  export type intranet_posting_historyCreateManySmokingDetectionInputEnvelope = {
    data: intranet_posting_historyCreateManySmokingDetectionInput | intranet_posting_historyCreateManySmokingDetectionInput[]
    skipDuplicates?: boolean
  }

  export type parksUpsertWithoutParks_smoking_detectionInput = {
    update: XOR<parksUpdateWithoutParks_smoking_detectionInput, parksUncheckedUpdateWithoutParks_smoking_detectionInput>
    create: XOR<parksCreateWithoutParks_smoking_detectionInput, parksUncheckedCreateWithoutParks_smoking_detectionInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_smoking_detectionInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_smoking_detectionInput, parksUncheckedUpdateWithoutParks_smoking_detectionInput>
  }

  export type parksUpdateWithoutParks_smoking_detectionInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUpdateManyWithoutParkNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_smoking_detectionInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_footfall_analysis?: parks_footfall_analysisUncheckedUpdateManyWithoutParkNestedInput
  }

  export type park_camerasUpsertWithoutParks_smoking_detectionInput = {
    update: XOR<park_camerasUpdateWithoutParks_smoking_detectionInput, park_camerasUncheckedUpdateWithoutParks_smoking_detectionInput>
    create: XOR<park_camerasCreateWithoutParks_smoking_detectionInput, park_camerasUncheckedCreateWithoutParks_smoking_detectionInput>
    where?: park_camerasWhereInput
  }

  export type park_camerasUpdateToOneWithWhereWithoutParks_smoking_detectionInput = {
    where?: park_camerasWhereInput
    data: XOR<park_camerasUpdateWithoutParks_smoking_detectionInput, park_camerasUncheckedUpdateWithoutParks_smoking_detectionInput>
  }

  export type park_camerasUpdateWithoutParks_smoking_detectionInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks?: parksUpdateOneWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParks_smoking_detectionInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type intranet_posting_historyUpsertWithWhereUniqueWithoutSmokingDetectionInput = {
    where: intranet_posting_historyWhereUniqueInput
    update: XOR<intranet_posting_historyUpdateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedUpdateWithoutSmokingDetectionInput>
    create: XOR<intranet_posting_historyCreateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedCreateWithoutSmokingDetectionInput>
  }

  export type intranet_posting_historyUpdateWithWhereUniqueWithoutSmokingDetectionInput = {
    where: intranet_posting_historyWhereUniqueInput
    data: XOR<intranet_posting_historyUpdateWithoutSmokingDetectionInput, intranet_posting_historyUncheckedUpdateWithoutSmokingDetectionInput>
  }

  export type intranet_posting_historyUpdateManyWithWhereWithoutSmokingDetectionInput = {
    where: intranet_posting_historyScalarWhereInput
    data: XOR<intranet_posting_historyUpdateManyMutationInput, intranet_posting_historyUncheckedUpdateManyWithoutSmokingDetectionInput>
  }

  export type parks_smoking_detectionCreateWithoutIntranet_posting_historyInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_smoking_detectionInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_smoking_detectionInput
  }

  export type parks_smoking_detectionUncheckedCreateWithoutIntranet_posting_historyInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_smoking_detectionCreateOrConnectWithoutIntranet_posting_historyInput = {
    where: parks_smoking_detectionWhereUniqueInput
    create: XOR<parks_smoking_detectionCreateWithoutIntranet_posting_historyInput, parks_smoking_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
  }

  export type parks_intrusion_detectionCreateWithoutIntranet_posting_historyInput = {
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    parks?: parksCreateNestedOneWithoutParks_intrusion_detectionInput
    park_cameras?: park_camerasCreateNestedOneWithoutParks_intrusion_detectionInput
  }

  export type parks_intrusion_detectionUncheckedCreateWithoutIntranet_posting_historyInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_intrusion_detectionCreateOrConnectWithoutIntranet_posting_historyInput = {
    where: parks_intrusion_detectionWhereUniqueInput
    create: XOR<parks_intrusion_detectionCreateWithoutIntranet_posting_historyInput, parks_intrusion_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
  }

  export type parks_smoking_detectionUpsertWithoutIntranet_posting_historyInput = {
    update: XOR<parks_smoking_detectionUpdateWithoutIntranet_posting_historyInput, parks_smoking_detectionUncheckedUpdateWithoutIntranet_posting_historyInput>
    create: XOR<parks_smoking_detectionCreateWithoutIntranet_posting_historyInput, parks_smoking_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
    where?: parks_smoking_detectionWhereInput
  }

  export type parks_smoking_detectionUpdateToOneWithWhereWithoutIntranet_posting_historyInput = {
    where?: parks_smoking_detectionWhereInput
    data: XOR<parks_smoking_detectionUpdateWithoutIntranet_posting_historyInput, parks_smoking_detectionUncheckedUpdateWithoutIntranet_posting_historyInput>
  }

  export type parks_smoking_detectionUpdateWithoutIntranet_posting_historyInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_smoking_detectionNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_smoking_detectionNestedInput
  }

  export type parks_smoking_detectionUncheckedUpdateWithoutIntranet_posting_historyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_intrusion_detectionUpsertWithoutIntranet_posting_historyInput = {
    update: XOR<parks_intrusion_detectionUpdateWithoutIntranet_posting_historyInput, parks_intrusion_detectionUncheckedUpdateWithoutIntranet_posting_historyInput>
    create: XOR<parks_intrusion_detectionCreateWithoutIntranet_posting_historyInput, parks_intrusion_detectionUncheckedCreateWithoutIntranet_posting_historyInput>
    where?: parks_intrusion_detectionWhereInput
  }

  export type parks_intrusion_detectionUpdateToOneWithWhereWithoutIntranet_posting_historyInput = {
    where?: parks_intrusion_detectionWhereInput
    data: XOR<parks_intrusion_detectionUpdateWithoutIntranet_posting_historyInput, parks_intrusion_detectionUncheckedUpdateWithoutIntranet_posting_historyInput>
  }

  export type parks_intrusion_detectionUpdateWithoutIntranet_posting_historyInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_intrusion_detectionNestedInput
    park_cameras?: park_camerasUpdateOneWithoutParks_intrusion_detectionNestedInput
  }

  export type parks_intrusion_detectionUncheckedUpdateWithoutIntranet_posting_historyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesCreateWithoutUsersInput = {
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park_cameras?: park_camerasCreateNestedOneWithoutLive_stream_favouritesInput
    offices_cameras?: offices_camerasCreateNestedOneWithoutLive_stream_favouritesInput
  }

  export type live_stream_favouritesUncheckedCreateWithoutUsersInput = {
    Id?: number
    park_camera_Id?: number | null
    office_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesCreateOrConnectWithoutUsersInput = {
    where: live_stream_favouritesWhereUniqueInput
    create: XOR<live_stream_favouritesCreateWithoutUsersInput, live_stream_favouritesUncheckedCreateWithoutUsersInput>
  }

  export type live_stream_favouritesCreateManyUsersInputEnvelope = {
    data: live_stream_favouritesCreateManyUsersInput | live_stream_favouritesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type parks_attendanceCreateWithoutUserInput = {
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    park?: parksCreateNestedOneWithoutParks_attendanceInput
  }

  export type parks_attendanceUncheckedCreateWithoutUserInput = {
    Id?: number
    park_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_attendanceCreateOrConnectWithoutUserInput = {
    where: parks_attendanceWhereUniqueInput
    create: XOR<parks_attendanceCreateWithoutUserInput, parks_attendanceUncheckedCreateWithoutUserInput>
  }

  export type parks_attendanceCreateManyUserInputEnvelope = {
    data: parks_attendanceCreateManyUserInput | parks_attendanceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type offices_attendanceCreateWithoutUserInput = {
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    office?: officesCreateNestedOneWithoutOffices_attendanceInput
  }

  export type offices_attendanceUncheckedCreateWithoutUserInput = {
    Id?: number
    office_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_attendanceCreateOrConnectWithoutUserInput = {
    where: offices_attendanceWhereUniqueInput
    create: XOR<offices_attendanceCreateWithoutUserInput, offices_attendanceUncheckedCreateWithoutUserInput>
  }

  export type offices_attendanceCreateManyUserInputEnvelope = {
    data: offices_attendanceCreateManyUserInput | offices_attendanceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type offices_footfall_analysisCreateWithoutPersonInput = {
    detection_Id: string
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    office: officesCreateNestedOneWithoutOffices_footfall_analysisInput
  }

  export type offices_footfall_analysisUncheckedCreateWithoutPersonInput = {
    id?: number
    office_Id: number
    detection_Id: string
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type offices_footfall_analysisCreateOrConnectWithoutPersonInput = {
    where: offices_footfall_analysisWhereUniqueInput
    create: XOR<offices_footfall_analysisCreateWithoutPersonInput, offices_footfall_analysisUncheckedCreateWithoutPersonInput>
  }

  export type offices_footfall_analysisCreateManyPersonInputEnvelope = {
    data: offices_footfall_analysisCreateManyPersonInput | offices_footfall_analysisCreateManyPersonInput[]
    skipDuplicates?: boolean
  }

  export type users_rolesCreateWithoutUsersInput = {
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users_permissions?: users_permissionsCreateNestedManyWithoutUsers_rolesInput
  }

  export type users_rolesUncheckedCreateWithoutUsersInput = {
    Id?: number
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users_permissions?: users_permissionsUncheckedCreateNestedManyWithoutUsers_rolesInput
  }

  export type users_rolesCreateOrConnectWithoutUsersInput = {
    where: users_rolesWhereUniqueInput
    create: XOR<users_rolesCreateWithoutUsersInput, users_rolesUncheckedCreateWithoutUsersInput>
  }

  export type live_stream_favouritesUpsertWithWhereUniqueWithoutUsersInput = {
    where: live_stream_favouritesWhereUniqueInput
    update: XOR<live_stream_favouritesUpdateWithoutUsersInput, live_stream_favouritesUncheckedUpdateWithoutUsersInput>
    create: XOR<live_stream_favouritesCreateWithoutUsersInput, live_stream_favouritesUncheckedCreateWithoutUsersInput>
  }

  export type live_stream_favouritesUpdateWithWhereUniqueWithoutUsersInput = {
    where: live_stream_favouritesWhereUniqueInput
    data: XOR<live_stream_favouritesUpdateWithoutUsersInput, live_stream_favouritesUncheckedUpdateWithoutUsersInput>
  }

  export type live_stream_favouritesUpdateManyWithWhereWithoutUsersInput = {
    where: live_stream_favouritesScalarWhereInput
    data: XOR<live_stream_favouritesUpdateManyMutationInput, live_stream_favouritesUncheckedUpdateManyWithoutUsersInput>
  }

  export type parks_attendanceUpsertWithWhereUniqueWithoutUserInput = {
    where: parks_attendanceWhereUniqueInput
    update: XOR<parks_attendanceUpdateWithoutUserInput, parks_attendanceUncheckedUpdateWithoutUserInput>
    create: XOR<parks_attendanceCreateWithoutUserInput, parks_attendanceUncheckedCreateWithoutUserInput>
  }

  export type parks_attendanceUpdateWithWhereUniqueWithoutUserInput = {
    where: parks_attendanceWhereUniqueInput
    data: XOR<parks_attendanceUpdateWithoutUserInput, parks_attendanceUncheckedUpdateWithoutUserInput>
  }

  export type parks_attendanceUpdateManyWithWhereWithoutUserInput = {
    where: parks_attendanceScalarWhereInput
    data: XOR<parks_attendanceUpdateManyMutationInput, parks_attendanceUncheckedUpdateManyWithoutUserInput>
  }

  export type offices_attendanceUpsertWithWhereUniqueWithoutUserInput = {
    where: offices_attendanceWhereUniqueInput
    update: XOR<offices_attendanceUpdateWithoutUserInput, offices_attendanceUncheckedUpdateWithoutUserInput>
    create: XOR<offices_attendanceCreateWithoutUserInput, offices_attendanceUncheckedCreateWithoutUserInput>
  }

  export type offices_attendanceUpdateWithWhereUniqueWithoutUserInput = {
    where: offices_attendanceWhereUniqueInput
    data: XOR<offices_attendanceUpdateWithoutUserInput, offices_attendanceUncheckedUpdateWithoutUserInput>
  }

  export type offices_attendanceUpdateManyWithWhereWithoutUserInput = {
    where: offices_attendanceScalarWhereInput
    data: XOR<offices_attendanceUpdateManyMutationInput, offices_attendanceUncheckedUpdateManyWithoutUserInput>
  }

  export type offices_footfall_analysisUpsertWithWhereUniqueWithoutPersonInput = {
    where: offices_footfall_analysisWhereUniqueInput
    update: XOR<offices_footfall_analysisUpdateWithoutPersonInput, offices_footfall_analysisUncheckedUpdateWithoutPersonInput>
    create: XOR<offices_footfall_analysisCreateWithoutPersonInput, offices_footfall_analysisUncheckedCreateWithoutPersonInput>
  }

  export type offices_footfall_analysisUpdateWithWhereUniqueWithoutPersonInput = {
    where: offices_footfall_analysisWhereUniqueInput
    data: XOR<offices_footfall_analysisUpdateWithoutPersonInput, offices_footfall_analysisUncheckedUpdateWithoutPersonInput>
  }

  export type offices_footfall_analysisUpdateManyWithWhereWithoutPersonInput = {
    where: offices_footfall_analysisScalarWhereInput
    data: XOR<offices_footfall_analysisUpdateManyMutationInput, offices_footfall_analysisUncheckedUpdateManyWithoutPersonInput>
  }

  export type users_rolesUpsertWithoutUsersInput = {
    update: XOR<users_rolesUpdateWithoutUsersInput, users_rolesUncheckedUpdateWithoutUsersInput>
    create: XOR<users_rolesCreateWithoutUsersInput, users_rolesUncheckedCreateWithoutUsersInput>
    where?: users_rolesWhereInput
  }

  export type users_rolesUpdateToOneWithWhereWithoutUsersInput = {
    where?: users_rolesWhereInput
    data: XOR<users_rolesUpdateWithoutUsersInput, users_rolesUncheckedUpdateWithoutUsersInput>
  }

  export type users_rolesUpdateWithoutUsersInput = {
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users_permissions?: users_permissionsUpdateManyWithoutUsers_rolesNestedInput
  }

  export type users_rolesUncheckedUpdateWithoutUsersInput = {
    Id?: IntFieldUpdateOperationsInput | number
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users_permissions?: users_permissionsUncheckedUpdateManyWithoutUsers_rolesNestedInput
  }

  export type users_rolesCreateWithoutUsers_permissionsInput = {
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersCreateNestedManyWithoutUsers_rolesInput
  }

  export type users_rolesUncheckedCreateWithoutUsers_permissionsInput = {
    Id?: number
    role_name?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    users?: usersUncheckedCreateNestedManyWithoutUsers_rolesInput
  }

  export type users_rolesCreateOrConnectWithoutUsers_permissionsInput = {
    where: users_rolesWhereUniqueInput
    create: XOR<users_rolesCreateWithoutUsers_permissionsInput, users_rolesUncheckedCreateWithoutUsers_permissionsInput>
  }

  export type users_rolesUpsertWithoutUsers_permissionsInput = {
    update: XOR<users_rolesUpdateWithoutUsers_permissionsInput, users_rolesUncheckedUpdateWithoutUsers_permissionsInput>
    create: XOR<users_rolesCreateWithoutUsers_permissionsInput, users_rolesUncheckedCreateWithoutUsers_permissionsInput>
    where?: users_rolesWhereInput
  }

  export type users_rolesUpdateToOneWithWhereWithoutUsers_permissionsInput = {
    where?: users_rolesWhereInput
    data: XOR<users_rolesUpdateWithoutUsers_permissionsInput, users_rolesUncheckedUpdateWithoutUsers_permissionsInput>
  }

  export type users_rolesUpdateWithoutUsers_permissionsInput = {
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateManyWithoutUsers_rolesNestedInput
  }

  export type users_rolesUncheckedUpdateWithoutUsers_permissionsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    role_name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUncheckedUpdateManyWithoutUsers_rolesNestedInput
  }

  export type usersCreateWithoutUsers_rolesInput = {
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisCreateNestedManyWithoutPersonInput
  }

  export type usersUncheckedCreateWithoutUsers_rolesInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedCreateNestedManyWithoutPersonInput
  }

  export type usersCreateOrConnectWithoutUsers_rolesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUsers_rolesInput, usersUncheckedCreateWithoutUsers_rolesInput>
  }

  export type usersCreateManyUsers_rolesInputEnvelope = {
    data: usersCreateManyUsers_rolesInput | usersCreateManyUsers_rolesInput[]
    skipDuplicates?: boolean
  }

  export type users_permissionsCreateWithoutUsers_rolesInput = {
    dashboard_view?: boolean | null
    role_permission_view?: boolean | null
    role_permission_add?: boolean | null
    role_permission_update?: boolean | null
    offices_view?: boolean | null
    offices_add?: boolean | null
    offices_update?: boolean | null
    parks_view?: boolean | null
    parks_add?: boolean | null
    parks_update?: boolean | null
    system_report_view?: boolean | null
    alerts_view?: boolean | null
    office_attendance_view?: boolean | null
    office_attendance_add?: boolean | null
    office_attendance_update?: boolean | null
    office_footfall_view?: boolean | null
    office_footfall_add?: boolean | null
    office_footfall_update?: boolean | null
    office_sentimental_view?: boolean | null
    office_sentimental_add?: boolean | null
    office_sentimental_update?: boolean | null
    park_attendance_view?: boolean | null
    park_attendance_add?: boolean | null
    park_attendance_update?: boolean | null
    park_footfall_view?: boolean | null
    park_footfall_add?: boolean | null
    park_footfall_update?: boolean | null
    park_sentimental_view?: boolean | null
    park_sentimental_add?: boolean | null
    park_sentimental_update?: boolean | null
    park_irrigation_view?: boolean | null
    park_irrigation_add?: boolean | null
    park_irrigation_update?: boolean | null
    park_landscaping_view?: boolean | null
    park_landscaping_add?: boolean | null
    park_landscaping_update?: boolean | null
    park_litter_detection_view?: boolean | null
    park_litter_detection_add?: boolean | null
    park_litter_detection_update?: boolean | null
    park_intrusion_detection_view?: boolean | null
    park_intrusion_detection_add?: boolean | null
    park_intrusion_detection_update?: boolean | null
    park_smoking_detection_view?: boolean | null
    park_smoking_detection_add?: boolean | null
    park_smoking_detection_update?: boolean | null
    my_account_view?: boolean | null
    settings_view?: boolean | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type users_permissionsUncheckedCreateWithoutUsers_rolesInput = {
    Id?: number
    dashboard_view?: boolean | null
    role_permission_view?: boolean | null
    role_permission_add?: boolean | null
    role_permission_update?: boolean | null
    offices_view?: boolean | null
    offices_add?: boolean | null
    offices_update?: boolean | null
    parks_view?: boolean | null
    parks_add?: boolean | null
    parks_update?: boolean | null
    system_report_view?: boolean | null
    alerts_view?: boolean | null
    office_attendance_view?: boolean | null
    office_attendance_add?: boolean | null
    office_attendance_update?: boolean | null
    office_footfall_view?: boolean | null
    office_footfall_add?: boolean | null
    office_footfall_update?: boolean | null
    office_sentimental_view?: boolean | null
    office_sentimental_add?: boolean | null
    office_sentimental_update?: boolean | null
    park_attendance_view?: boolean | null
    park_attendance_add?: boolean | null
    park_attendance_update?: boolean | null
    park_footfall_view?: boolean | null
    park_footfall_add?: boolean | null
    park_footfall_update?: boolean | null
    park_sentimental_view?: boolean | null
    park_sentimental_add?: boolean | null
    park_sentimental_update?: boolean | null
    park_irrigation_view?: boolean | null
    park_irrigation_add?: boolean | null
    park_irrigation_update?: boolean | null
    park_landscaping_view?: boolean | null
    park_landscaping_add?: boolean | null
    park_landscaping_update?: boolean | null
    park_litter_detection_view?: boolean | null
    park_litter_detection_add?: boolean | null
    park_litter_detection_update?: boolean | null
    park_intrusion_detection_view?: boolean | null
    park_intrusion_detection_add?: boolean | null
    park_intrusion_detection_update?: boolean | null
    park_smoking_detection_view?: boolean | null
    park_smoking_detection_add?: boolean | null
    park_smoking_detection_update?: boolean | null
    my_account_view?: boolean | null
    settings_view?: boolean | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type users_permissionsCreateOrConnectWithoutUsers_rolesInput = {
    where: users_permissionsWhereUniqueInput
    create: XOR<users_permissionsCreateWithoutUsers_rolesInput, users_permissionsUncheckedCreateWithoutUsers_rolesInput>
  }

  export type users_permissionsCreateManyUsers_rolesInputEnvelope = {
    data: users_permissionsCreateManyUsers_rolesInput | users_permissionsCreateManyUsers_rolesInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithWhereUniqueWithoutUsers_rolesInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutUsers_rolesInput, usersUncheckedUpdateWithoutUsers_rolesInput>
    create: XOR<usersCreateWithoutUsers_rolesInput, usersUncheckedCreateWithoutUsers_rolesInput>
  }

  export type usersUpdateWithWhereUniqueWithoutUsers_rolesInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutUsers_rolesInput, usersUncheckedUpdateWithoutUsers_rolesInput>
  }

  export type usersUpdateManyWithWhereWithoutUsers_rolesInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutUsers_rolesInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    Id?: IntFilter<"users"> | number
    emp_Id?: StringNullableFilter<"users"> | string | null
    gender?: StringNullableFilter<"users"> | string | null
    emp__eng_name?: StringNullableFilter<"users"> | string | null
    emp__arabic_name?: StringNullableFilter<"users"> | string | null
    country_code?: StringNullableFilter<"users"> | string | null
    phone?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    dep_eng_name?: StringNullableFilter<"users"> | string | null
    dep_arabic_name?: StringNullableFilter<"users"> | string | null
    desig_eng_name?: StringNullableFilter<"users"> | string | null
    desig_arabic_name?: StringNullableFilter<"users"> | string | null
    unit_eng_name?: StringNullableFilter<"users"> | string | null
    unit_arabic_name?: StringNullableFilter<"users"> | string | null
    committe_eng_name?: StringNullableFilter<"users"> | string | null
    committe_arabic_name?: StringNullableFilter<"users"> | string | null
    ai_engine_access?: BoolNullableFilter<"users"> | boolean | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"users"> | Date | string | null
    updatedAt?: DateTimeFilter<"users"> | Date | string
    role_Id?: IntNullableFilter<"users"> | number | null
  }

  export type users_permissionsUpsertWithWhereUniqueWithoutUsers_rolesInput = {
    where: users_permissionsWhereUniqueInput
    update: XOR<users_permissionsUpdateWithoutUsers_rolesInput, users_permissionsUncheckedUpdateWithoutUsers_rolesInput>
    create: XOR<users_permissionsCreateWithoutUsers_rolesInput, users_permissionsUncheckedCreateWithoutUsers_rolesInput>
  }

  export type users_permissionsUpdateWithWhereUniqueWithoutUsers_rolesInput = {
    where: users_permissionsWhereUniqueInput
    data: XOR<users_permissionsUpdateWithoutUsers_rolesInput, users_permissionsUncheckedUpdateWithoutUsers_rolesInput>
  }

  export type users_permissionsUpdateManyWithWhereWithoutUsers_rolesInput = {
    where: users_permissionsScalarWhereInput
    data: XOR<users_permissionsUpdateManyMutationInput, users_permissionsUncheckedUpdateManyWithoutUsers_rolesInput>
  }

  export type users_permissionsScalarWhereInput = {
    AND?: users_permissionsScalarWhereInput | users_permissionsScalarWhereInput[]
    OR?: users_permissionsScalarWhereInput[]
    NOT?: users_permissionsScalarWhereInput | users_permissionsScalarWhereInput[]
    Id?: IntFilter<"users_permissions"> | number
    role_Id?: IntNullableFilter<"users_permissions"> | number | null
    dashboard_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    role_permission_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    offices_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    parks_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    system_report_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    alerts_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_attendance_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_footfall_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    office_sentimental_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_attendance_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_footfall_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_sentimental_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_irrigation_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_landscaping_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_litter_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_intrusion_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_add?: BoolNullableFilter<"users_permissions"> | boolean | null
    park_smoking_detection_update?: BoolNullableFilter<"users_permissions"> | boolean | null
    my_account_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    settings_view?: BoolNullableFilter<"users_permissions"> | boolean | null
    createdAt?: DateTimeNullableFilter<"users_permissions"> | Date | string | null
    updatedAt?: DateTimeFilter<"users_permissions"> | Date | string
  }

  export type parksCreateWithoutParks_footfall_analysisInput = {
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasCreateNestedManyWithoutParksInput
    park_streams?: park_streamsCreateNestedManyWithoutParksInput
    park_zones?: park_zonesCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionCreateNestedManyWithoutParksInput
  }

  export type parksUncheckedCreateWithoutParks_footfall_analysisInput = {
    Id?: number
    park_Id?: string | null
    park_english_name?: string | null
    park_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    park_cameras?: park_camerasUncheckedCreateNestedManyWithoutParksInput
    park_streams?: park_streamsUncheckedCreateNestedManyWithoutParksInput
    park_zones?: park_zonesUncheckedCreateNestedManyWithoutParksInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutParkInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedCreateNestedManyWithoutParksInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedCreateNestedManyWithoutParksInput
    parks_landscaping?: parks_landscapingUncheckedCreateNestedManyWithoutParksInput
    parks_litter_detection?: parks_litter_detectionUncheckedCreateNestedManyWithoutParksInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedCreateNestedManyWithoutParksInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedCreateNestedManyWithoutParksInput
  }

  export type parksCreateOrConnectWithoutParks_footfall_analysisInput = {
    where: parksWhereUniqueInput
    create: XOR<parksCreateWithoutParks_footfall_analysisInput, parksUncheckedCreateWithoutParks_footfall_analysisInput>
  }

  export type parksUpsertWithoutParks_footfall_analysisInput = {
    update: XOR<parksUpdateWithoutParks_footfall_analysisInput, parksUncheckedUpdateWithoutParks_footfall_analysisInput>
    create: XOR<parksCreateWithoutParks_footfall_analysisInput, parksUncheckedCreateWithoutParks_footfall_analysisInput>
    where?: parksWhereInput
  }

  export type parksUpdateToOneWithWhereWithoutParks_footfall_analysisInput = {
    where?: parksWhereInput
    data: XOR<parksUpdateWithoutParks_footfall_analysisInput, parksUncheckedUpdateWithoutParks_footfall_analysisInput>
  }

  export type parksUpdateWithoutParks_footfall_analysisInput = {
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutParksNestedInput
  }

  export type parksUncheckedUpdateWithoutParks_footfall_analysisInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableStringFieldUpdateOperationsInput | string | null
    park_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    park_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    park_cameras?: park_camerasUncheckedUpdateManyWithoutParksNestedInput
    park_streams?: park_streamsUncheckedUpdateManyWithoutParksNestedInput
    park_zones?: park_zonesUncheckedUpdateManyWithoutParksNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutParkNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutParksNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutParksNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutParksNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutParksNestedInput
    parks_sentiment_analysis?: parks_sentiment_analysisUncheckedUpdateManyWithoutParksNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutParksNestedInput
  }

  export type officesCreateWithoutOffices_footfall_analysisInput = {
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisCreateNestedManyWithoutOfficesInput
  }

  export type officesUncheckedCreateWithoutOffices_footfall_analysisInput = {
    Id?: number
    office_Id?: string | null
    office_english_name?: string | null
    office_arabic_name?: string | null
    image?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    office_streams?: office_streamsUncheckedCreateNestedManyWithoutOfficesInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutOfficeInput
    offices_cameras?: offices_camerasUncheckedCreateNestedManyWithoutOfficesInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedCreateNestedManyWithoutOfficesInput
  }

  export type officesCreateOrConnectWithoutOffices_footfall_analysisInput = {
    where: officesWhereUniqueInput
    create: XOR<officesCreateWithoutOffices_footfall_analysisInput, officesUncheckedCreateWithoutOffices_footfall_analysisInput>
  }

  export type usersCreateWithoutOffices_footfall_analysisInput = {
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    live_stream_favourites?: live_stream_favouritesCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceCreateNestedManyWithoutUserInput
    users_roles?: users_rolesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOffices_footfall_analysisInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    role_Id?: number | null
    live_stream_favourites?: live_stream_favouritesUncheckedCreateNestedManyWithoutUsersInput
    parks_attendance?: parks_attendanceUncheckedCreateNestedManyWithoutUserInput
    offices_attendance?: offices_attendanceUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutOffices_footfall_analysisInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOffices_footfall_analysisInput, usersUncheckedCreateWithoutOffices_footfall_analysisInput>
  }

  export type officesUpsertWithoutOffices_footfall_analysisInput = {
    update: XOR<officesUpdateWithoutOffices_footfall_analysisInput, officesUncheckedUpdateWithoutOffices_footfall_analysisInput>
    create: XOR<officesCreateWithoutOffices_footfall_analysisInput, officesUncheckedCreateWithoutOffices_footfall_analysisInput>
    where?: officesWhereInput
  }

  export type officesUpdateToOneWithWhereWithoutOffices_footfall_analysisInput = {
    where?: officesWhereInput
    data: XOR<officesUpdateWithoutOffices_footfall_analysisInput, officesUncheckedUpdateWithoutOffices_footfall_analysisInput>
  }

  export type officesUpdateWithoutOffices_footfall_analysisInput = {
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUpdateManyWithoutOfficesNestedInput
  }

  export type officesUncheckedUpdateWithoutOffices_footfall_analysisInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableStringFieldUpdateOperationsInput | string | null
    office_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    office_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    office_streams?: office_streamsUncheckedUpdateManyWithoutOfficesNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutOfficeNestedInput
    offices_cameras?: offices_camerasUncheckedUpdateManyWithoutOfficesNestedInput
    offices_sentiment_analysis?: offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesNestedInput
  }

  export type usersUpsertWithoutOffices_footfall_analysisInput = {
    update: XOR<usersUpdateWithoutOffices_footfall_analysisInput, usersUncheckedUpdateWithoutOffices_footfall_analysisInput>
    create: XOR<usersCreateWithoutOffices_footfall_analysisInput, usersUncheckedCreateWithoutOffices_footfall_analysisInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOffices_footfall_analysisInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOffices_footfall_analysisInput, usersUncheckedUpdateWithoutOffices_footfall_analysisInput>
  }

  export type usersUpdateWithoutOffices_footfall_analysisInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutUserNestedInput
    users_roles?: users_rolesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOffices_footfall_analysisInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role_Id?: NullableIntFieldUpdateOperationsInput | number | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutUserNestedInput
  }

  export type office_streamsCreateManyOfficesInput = {
    Id?: number
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_attendanceCreateManyOfficeInput = {
    Id?: number
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_camerasCreateManyOfficesInput = {
    Id?: number
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean
    footfall?: boolean
    sentiment?: boolean
  }

  export type offices_sentiment_analysisCreateManyOfficesInput = {
    Id?: number
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_footfall_analysisCreateManyOfficeInput = {
    id?: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type office_streamsUpdateWithoutOfficesInput = {
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type office_streamsUncheckedUpdateWithoutOfficesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type office_streamsUncheckedUpdateManyWithoutOfficesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_attendanceUpdateWithoutOfficeInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneWithoutOffices_attendanceNestedInput
  }

  export type offices_attendanceUncheckedUpdateWithoutOfficeInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_attendanceUncheckedUpdateManyWithoutOfficeInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_camerasUpdateWithoutOfficesInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUncheckedUpdateWithoutOfficesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_camerasUncheckedUpdateManyWithoutOfficesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: BoolFieldUpdateOperationsInput | boolean
    footfall?: BoolFieldUpdateOperationsInput | boolean
    sentiment?: BoolFieldUpdateOperationsInput | boolean
  }

  export type offices_sentiment_analysisUpdateWithoutOfficesInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_sentiment_analysisUncheckedUpdateWithoutOfficesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisUncheckedUpdateManyWithoutOfficesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_footfall_analysisUpdateWithoutOfficeInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    person?: usersUpdateOneRequiredWithoutOffices_footfall_analysisNestedInput
  }

  export type offices_footfall_analysisUncheckedUpdateWithoutOfficeInput = {
    id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type offices_footfall_analysisUncheckedUpdateManyWithoutOfficeInput = {
    id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type live_stream_favouritesCreateManyOffices_camerasInput = {
    Id?: number
    emp_Id?: number | null
    park_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_sentiment_analysisCreateManyOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    Id?: number
    office_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesUpdateWithoutOffices_camerasInput = {
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutLive_stream_favouritesNestedInput
    park_cameras?: park_camerasUpdateOneWithoutLive_stream_favouritesNestedInput
  }

  export type live_stream_favouritesUncheckedUpdateWithoutOffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableIntFieldUpdateOperationsInput | number | null
    park_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesUncheckedUpdateManyWithoutOffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableIntFieldUpdateOperationsInput | number | null
    park_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisUpdateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    offices?: officesUpdateOneWithoutOffices_sentiment_analysisNestedInput
    offices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_cameras?: offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_exit_camera_IdTooffices_camerasNestedInput
  }

  export type offices_sentiment_analysisUncheckedUpdateWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisUpdateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    offices?: officesUpdateOneWithoutOffices_sentiment_analysisNestedInput
    offices_cameras_offices_sentiment_analysis_entry_camera_IdTooffices_cameras?: offices_camerasUpdateOneWithoutOffices_sentiment_analysis_offices_sentiment_analysis_entry_camera_IdTooffices_camerasNestedInput
  }

  export type offices_sentiment_analysisUncheckedUpdateWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_sentiment_analysisUncheckedUpdateManyWithoutOffices_cameras_offices_sentiment_analysis_exit_camera_IdTooffices_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumoffices_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.offices_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesCreateManyPark_camerasInput = {
    Id?: number
    emp_Id?: number | null
    office_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_behaviour_alertsCreateManyPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_intrusion_detectionCreateManyPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisCreateManyPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    Id?: number
    park_Id?: number | null
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_smoking_detectionCreateManyPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_landscapingCreateManyPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_litter_detectionCreateManyPark_camerasInput = {
    Id?: number
    park_Id?: number | null
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type live_stream_favouritesUpdateWithoutPark_camerasInput = {
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutLive_stream_favouritesNestedInput
    offices_cameras?: offices_camerasUpdateOneWithoutLive_stream_favouritesNestedInput
  }

  export type live_stream_favouritesUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableIntFieldUpdateOperationsInput | number | null
    office_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableIntFieldUpdateOperationsInput | number | null
    office_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsUpdateWithoutPark_camerasInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_behaviour_alertsNestedInput
  }

  export type parks_behaviour_alertsUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_intrusion_detectionUpdateWithoutPark_camerasInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_intrusion_detectionNestedInput
    intranet_posting_history?: intranet_posting_historyUpdateManyWithoutIntrusionDetectionNestedInput
  }

  export type parks_intrusion_detectionUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedUpdateManyWithoutIntrusionDetectionNestedInput
  }

  export type parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUpdateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_sentiment_analysisNestedInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
  }

  export type parks_sentiment_analysisUncheckedUpdateWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUpdateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_sentiment_analysisNestedInput
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
  }

  export type parks_sentiment_analysisUncheckedUpdateWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_smoking_detectionUpdateWithoutPark_camerasInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_smoking_detectionNestedInput
    intranet_posting_history?: intranet_posting_historyUpdateManyWithoutSmokingDetectionNestedInput
  }

  export type parks_smoking_detectionUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedUpdateManyWithoutSmokingDetectionNestedInput
  }

  export type parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_landscapingUpdateWithoutPark_camerasInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_landscapingNestedInput
    ticket_details?: ticket_details_tableUpdateManyWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket_details?: ticket_details_tableUncheckedUpdateManyWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingUncheckedUpdateManyWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_litter_detectionUpdateWithoutPark_camerasInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_litter_detectionNestedInput
    ticket_details?: ticket_details_tableUpdateManyWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionUncheckedUpdateWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket_details?: ticket_details_tableUncheckedUpdateManyWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyCreateManyPark_zonesInput = {
    Id?: number
    park_Id?: number | null
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_irrigation_job_historyUpdateWithoutPark_zonesInput = {
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks?: parksUpdateOneWithoutParks_irrigation_job_historyNestedInput
  }

  export type parks_irrigation_job_historyUncheckedUpdateWithoutPark_zonesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyUncheckedUpdateManyWithoutPark_zonesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_camerasCreateManyParksInput = {
    Id?: number
    camera_Id?: string | null
    camera_english_name?: string | null
    camera_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    ip_address?: string | null
    last_active_date?: Date | string | null
    last_active_time?: Date | string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
    attendance?: boolean | null
    footfall?: boolean | null
    sentiment?: boolean | null
    behaviour?: boolean | null
    irrigation?: boolean | null
    landscaping?: boolean | null
    litter_detection?: boolean | null
    smoking_detection?: boolean | null
    intrusion?: boolean | null
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
  }

  export type park_streamsCreateManyParksInput = {
    Id?: number
    stream_url?: string | null
    stream_api_key?: string | null
    stream_path?: string | null
    password?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type park_zonesCreateManyParksInput = {
    Id?: number
    zone_Id?: string | null
    zone_english_name?: string | null
    zone_arabic_name?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    device_ip?: string | null
    web_api?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
    location?: string | null
  }

  export type parks_attendanceCreateManyParkInput = {
    Id?: number
    person_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_behaviour_alertsCreateManyParksInput = {
    Id?: number
    person_Id?: string | null
    camera_Id?: number | null
    detection_Id?: string | null
    detection_code?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    detected_behaviour?: string | null
    is_employee?: boolean | null
    snap_shot?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_intrusion_detectionCreateManyParksInput = {
    Id?: number
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_irrigation_job_historyCreateManyParksInput = {
    Id?: number
    zone_Id?: number | null
    job_Id?: string | null
    job_started_at?: Date | string
    job_completed_at?: Date | string | null
    job_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_landscapingCreateManyParksInput = {
    Id?: number
    case_Id?: string | null
    location?: string | null
    snap_shot?: string | null
    type?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_litter_detectionCreateManyParksInput = {
    Id?: number
    case_Id?: string | null
    location?: string | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    status?: string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    current_status?: string | null
    camera_Id?: number | null
    after_image?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_sentiment_analysisCreateManyParksInput = {
    Id?: number
    person_Id?: string | null
    detection_Id?: string | null
    person_name?: string | null
    person_image?: string | null
    gender?: string | null
    check_in_image?: string | null
    sentiment_of?: $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: Date | string | null
    check_in_time?: Date | string | null
    check_in_sentiment?: string | null
    entry_camera_Id?: number | null
    check_out_date?: Date | string | null
    check_out_time?: Date | string | null
    check_out_capture?: string | null
    check_out_sentiment?: string | null
    exit_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_smoking_detectionCreateManyParksInput = {
    Id?: number
    location?: string | null
    camera_Id?: number | null
    occurrence_date?: Date | string | null
    occurrence_time?: Date | string | null
    snap_shot?: string | null
    posted_to_intranet_date?: Date | string | null
    posted_to_intranet_time?: Date | string | null
    detection_Id?: string | null
    detection_date?: Date | string | null
    detection_time?: Date | string | null
    description?: string | null
    is_employee?: boolean | null
    current_status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_footfall_analysisCreateManyParkInput = {
    id?: number
    detection_Id: string
    person_Id: number
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type park_camerasUpdateWithoutParksInput = {
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_behaviour_alerts?: parks_behaviour_alertsUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_intrusion_detection?: parks_intrusion_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    parks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: parks_sentiment_analysisUncheckedUpdateManyWithoutPark_cameras_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
    parks_smoking_detection?: parks_smoking_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_landscaping?: parks_landscapingUncheckedUpdateManyWithoutPark_camerasNestedInput
    parks_litter_detection?: parks_litter_detectionUncheckedUpdateManyWithoutPark_camerasNestedInput
  }

  export type park_camerasUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    camera_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    camera_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_active_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    footfall?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentiment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    behaviour?: NullableBoolFieldUpdateOperationsInput | boolean | null
    irrigation?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landscaping?: NullableBoolFieldUpdateOperationsInput | boolean | null
    litter_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    smoking_detection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    intrusion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type park_streamsUpdateWithoutParksInput = {
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_streamsUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_streamsUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    stream_url?: NullableStringFieldUpdateOperationsInput | string | null
    stream_api_key?: NullableStringFieldUpdateOperationsInput | string | null
    stream_path?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type park_zonesUpdateWithoutParksInput = {
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    parks_irrigation_job_history?: parks_irrigation_job_historyUpdateManyWithoutPark_zonesNestedInput
  }

  export type park_zonesUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    parks_irrigation_job_history?: parks_irrigation_job_historyUncheckedUpdateManyWithoutPark_zonesNestedInput
  }

  export type park_zonesUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    zone_Id?: NullableStringFieldUpdateOperationsInput | string | null
    zone_english_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    device_ip?: NullableStringFieldUpdateOperationsInput | string | null
    web_api?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parks_attendanceUpdateWithoutParkInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneWithoutParks_attendanceNestedInput
  }

  export type parks_attendanceUncheckedUpdateWithoutParkInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_attendanceUncheckedUpdateManyWithoutParkInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsUpdateWithoutParksInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras?: park_camerasUpdateOneWithoutParks_behaviour_alertsNestedInput
  }

  export type parks_behaviour_alertsUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_behaviour_alertsUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_code?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    detected_behaviour?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_intrusion_detectionUpdateWithoutParksInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras?: park_camerasUpdateOneWithoutParks_intrusion_detectionNestedInput
    intranet_posting_history?: intranet_posting_historyUpdateManyWithoutIntrusionDetectionNestedInput
  }

  export type parks_intrusion_detectionUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedUpdateManyWithoutIntrusionDetectionNestedInput
  }

  export type parks_intrusion_detectionUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyUpdateWithoutParksInput = {
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_zones?: park_zonesUpdateOneWithoutParks_irrigation_job_historyNestedInput
  }

  export type parks_irrigation_job_historyUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    zone_Id?: NullableIntFieldUpdateOperationsInput | number | null
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_irrigation_job_historyUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    zone_Id?: NullableIntFieldUpdateOperationsInput | number | null
    job_Id?: NullableStringFieldUpdateOperationsInput | string | null
    job_started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    job_completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    job_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_landscapingUpdateWithoutParksInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras?: park_camerasUpdateOneWithoutParks_landscapingNestedInput
    ticket_details?: ticket_details_tableUpdateManyWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket_details?: ticket_details_tableUncheckedUpdateManyWithoutParks_landscapingNestedInput
  }

  export type parks_landscapingUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_litter_detectionUpdateWithoutParksInput = {
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras?: park_camerasUpdateOneWithoutParks_litter_detectionNestedInput
    ticket_details?: ticket_details_tableUpdateManyWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ticket_details?: ticket_details_tableUncheckedUpdateManyWithoutParks_litter_detectionNestedInput
  }

  export type parks_litter_detectionUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    case_Id?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    after_image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUpdateWithoutParksInput = {
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras_parks_sentiment_analysis_entry_camera_IdTopark_cameras?: park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_entry_camera_IdTopark_camerasNestedInput
    park_cameras_parks_sentiment_analysis_exit_camera_IdTopark_cameras?: park_camerasUpdateOneWithoutParks_sentiment_analysis_parks_sentiment_analysis_exit_camera_IdTopark_camerasNestedInput
  }

  export type parks_sentiment_analysisUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_sentiment_analysisUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    person_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    person_name?: NullableStringFieldUpdateOperationsInput | string | null
    person_image?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    check_in_image?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment_of?: NullableEnumparks_sentiment_analysis_sentiment_ofFieldUpdateOperationsInput | $Enums.parks_sentiment_analysis_sentiment_of | null
    check_in_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_in_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    entry_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    check_out_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out_capture?: NullableStringFieldUpdateOperationsInput | string | null
    check_out_sentiment?: NullableStringFieldUpdateOperationsInput | string | null
    exit_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_smoking_detectionUpdateWithoutParksInput = {
    location?: NullableStringFieldUpdateOperationsInput | string | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras?: park_camerasUpdateOneWithoutParks_smoking_detectionNestedInput
    intranet_posting_history?: intranet_posting_historyUpdateManyWithoutSmokingDetectionNestedInput
  }

  export type parks_smoking_detectionUncheckedUpdateWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intranet_posting_history?: intranet_posting_historyUncheckedUpdateManyWithoutSmokingDetectionNestedInput
  }

  export type parks_smoking_detectionUncheckedUpdateManyWithoutParksInput = {
    Id?: IntFieldUpdateOperationsInput | number
    location?: NullableStringFieldUpdateOperationsInput | string | null
    camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    occurrence_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurrence_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    snap_shot?: NullableStringFieldUpdateOperationsInput | string | null
    posted_to_intranet_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posted_to_intranet_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_Id?: NullableStringFieldUpdateOperationsInput | string | null
    detection_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detection_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_employee?: NullableBoolFieldUpdateOperationsInput | boolean | null
    current_status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_footfall_analysisUpdateWithoutParkInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parks_footfall_analysisUncheckedUpdateWithoutParkInput = {
    id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type parks_footfall_analysisUncheckedUpdateManyWithoutParkInput = {
    id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    person_Id?: IntFieldUpdateOperationsInput | number
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type intranet_posting_historyCreateManyIntrusionDetectionInput = {
    id?: number
    smokingDetectionId?: number | null
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type intranet_posting_historyUpdateWithoutIntrusionDetectionInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    smokingDetection?: parks_smoking_detectionUpdateOneWithoutIntranet_posting_historyNestedInput
  }

  export type intranet_posting_historyUncheckedUpdateWithoutIntrusionDetectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    smokingDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type intranet_posting_historyUncheckedUpdateManyWithoutIntrusionDetectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    smokingDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ticket_details_tableCreateManyParks_landscapingInput = {
    id?: number
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    litterDetectionId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ticket_details_tableUpdateWithoutParks_landscapingInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks_litter_detection?: parks_litter_detectionUpdateOneWithoutTicket_detailsNestedInput
  }

  export type ticket_details_tableUncheckedUpdateWithoutParks_landscapingInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    litterDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ticket_details_tableUncheckedUpdateManyWithoutParks_landscapingInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    litterDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ticket_details_tableCreateManyParks_litter_detectionInput = {
    id?: number
    status?: string | null
    date?: Date | string | null
    time?: Date | string | null
    comments?: string | null
    image?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
    abc4?: string | null
    landscapingId?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ticket_details_tableUpdateWithoutParks_litter_detectionInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parks_landscaping?: parks_landscapingUpdateOneWithoutTicket_detailsNestedInput
  }

  export type ticket_details_tableUncheckedUpdateWithoutParks_litter_detectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    landscapingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ticket_details_tableUncheckedUpdateManyWithoutParks_litter_detectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    abc4?: NullableStringFieldUpdateOperationsInput | string | null
    landscapingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type intranet_posting_historyCreateManySmokingDetectionInput = {
    id?: number
    intrusionDetectionId?: number | null
    title?: string | null
    intranet_id?: string | null
    comments?: string | null
    date?: Date | string | null
    time?: Date | string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type intranet_posting_historyUpdateWithoutSmokingDetectionInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    intrusionDetection?: parks_intrusion_detectionUpdateOneWithoutIntranet_posting_historyNestedInput
  }

  export type intranet_posting_historyUncheckedUpdateWithoutSmokingDetectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    intrusionDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type intranet_posting_historyUncheckedUpdateManyWithoutSmokingDetectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    intrusionDetectionId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    intranet_id?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type live_stream_favouritesCreateManyUsersInput = {
    Id?: number
    park_camera_Id?: number | null
    office_camera_Id?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type parks_attendanceCreateManyUserInput = {
    Id?: number
    park_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_attendanceCreateManyUserInput = {
    Id?: number
    office_Id?: number | null
    entry_time?: Date | string | null
    exit_time?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type offices_footfall_analysisCreateManyPersonInput = {
    id?: number
    office_Id: number
    detection_Id: string
    gender?: string | null
    is_child?: boolean
    time?: Date | string
    detected_camera_Id: string
    detected_camera_name?: string | null
    abc1?: string | null
    abc2?: string | null
    abc3?: string | null
  }

  export type live_stream_favouritesUpdateWithoutUsersInput = {
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park_cameras?: park_camerasUpdateOneWithoutLive_stream_favouritesNestedInput
    offices_cameras?: offices_camerasUpdateOneWithoutLive_stream_favouritesNestedInput
  }

  export type live_stream_favouritesUncheckedUpdateWithoutUsersInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    office_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type live_stream_favouritesUncheckedUpdateManyWithoutUsersInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    office_camera_Id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_attendanceUpdateWithoutUserInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    park?: parksUpdateOneWithoutParks_attendanceNestedInput
  }

  export type parks_attendanceUncheckedUpdateWithoutUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type parks_attendanceUncheckedUpdateManyWithoutUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    park_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_attendanceUpdateWithoutUserInput = {
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    office?: officesUpdateOneWithoutOffices_attendanceNestedInput
  }

  export type offices_attendanceUncheckedUpdateWithoutUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_attendanceUncheckedUpdateManyWithoutUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    office_Id?: NullableIntFieldUpdateOperationsInput | number | null
    entry_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exit_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type offices_footfall_analysisUpdateWithoutPersonInput = {
    detection_Id?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
    office?: officesUpdateOneRequiredWithoutOffices_footfall_analysisNestedInput
  }

  export type offices_footfall_analysisUncheckedUpdateWithoutPersonInput = {
    id?: IntFieldUpdateOperationsInput | number
    office_Id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type offices_footfall_analysisUncheckedUpdateManyWithoutPersonInput = {
    id?: IntFieldUpdateOperationsInput | number
    office_Id?: IntFieldUpdateOperationsInput | number
    detection_Id?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    is_child?: BoolFieldUpdateOperationsInput | boolean
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    detected_camera_Id?: StringFieldUpdateOperationsInput | string
    detected_camera_name?: NullableStringFieldUpdateOperationsInput | string | null
    abc1?: NullableStringFieldUpdateOperationsInput | string | null
    abc2?: NullableStringFieldUpdateOperationsInput | string | null
    abc3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateManyUsers_rolesInput = {
    Id?: number
    emp_Id?: string | null
    gender?: string | null
    emp__eng_name?: string | null
    emp__arabic_name?: string | null
    country_code?: string | null
    phone?: string | null
    email?: string | null
    dep_eng_name?: string | null
    dep_arabic_name?: string | null
    desig_eng_name?: string | null
    desig_arabic_name?: string | null
    unit_eng_name?: string | null
    unit_arabic_name?: string | null
    committe_eng_name?: string | null
    committe_arabic_name?: string | null
    ai_engine_access?: boolean | null
    last_login?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type users_permissionsCreateManyUsers_rolesInput = {
    Id?: number
    dashboard_view?: boolean | null
    role_permission_view?: boolean | null
    role_permission_add?: boolean | null
    role_permission_update?: boolean | null
    offices_view?: boolean | null
    offices_add?: boolean | null
    offices_update?: boolean | null
    parks_view?: boolean | null
    parks_add?: boolean | null
    parks_update?: boolean | null
    system_report_view?: boolean | null
    alerts_view?: boolean | null
    office_attendance_view?: boolean | null
    office_attendance_add?: boolean | null
    office_attendance_update?: boolean | null
    office_footfall_view?: boolean | null
    office_footfall_add?: boolean | null
    office_footfall_update?: boolean | null
    office_sentimental_view?: boolean | null
    office_sentimental_add?: boolean | null
    office_sentimental_update?: boolean | null
    park_attendance_view?: boolean | null
    park_attendance_add?: boolean | null
    park_attendance_update?: boolean | null
    park_footfall_view?: boolean | null
    park_footfall_add?: boolean | null
    park_footfall_update?: boolean | null
    park_sentimental_view?: boolean | null
    park_sentimental_add?: boolean | null
    park_sentimental_update?: boolean | null
    park_irrigation_view?: boolean | null
    park_irrigation_add?: boolean | null
    park_irrigation_update?: boolean | null
    park_landscaping_view?: boolean | null
    park_landscaping_add?: boolean | null
    park_landscaping_update?: boolean | null
    park_litter_detection_view?: boolean | null
    park_litter_detection_add?: boolean | null
    park_litter_detection_update?: boolean | null
    park_intrusion_detection_view?: boolean | null
    park_intrusion_detection_add?: boolean | null
    park_intrusion_detection_update?: boolean | null
    park_smoking_detection_view?: boolean | null
    park_smoking_detection_add?: boolean | null
    park_smoking_detection_update?: boolean | null
    my_account_view?: boolean | null
    settings_view?: boolean | null
    createdAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type usersUpdateWithoutUsers_rolesInput = {
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    live_stream_favourites?: live_stream_favouritesUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUpdateManyWithoutPersonNestedInput
  }

  export type usersUncheckedUpdateWithoutUsers_rolesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    live_stream_favourites?: live_stream_favouritesUncheckedUpdateManyWithoutUsersNestedInput
    parks_attendance?: parks_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_attendance?: offices_attendanceUncheckedUpdateManyWithoutUserNestedInput
    offices_footfall_analysis?: offices_footfall_analysisUncheckedUpdateManyWithoutPersonNestedInput
  }

  export type usersUncheckedUpdateManyWithoutUsers_rolesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    emp_Id?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    emp__eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    emp__arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    dep_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    dep_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    desig_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_eng_name?: NullableStringFieldUpdateOperationsInput | string | null
    committe_arabic_name?: NullableStringFieldUpdateOperationsInput | string | null
    ai_engine_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_permissionsUpdateWithoutUsers_rolesInput = {
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_permissionsUncheckedUpdateWithoutUsers_rolesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type users_permissionsUncheckedUpdateManyWithoutUsers_rolesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    dashboard_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_permission_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offices_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parks_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    system_report_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    alerts_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    office_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_attendance_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_footfall_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_sentimental_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_irrigation_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_landscaping_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_litter_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_intrusion_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_add?: NullableBoolFieldUpdateOperationsInput | boolean | null
    park_smoking_detection_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    my_account_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    settings_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}